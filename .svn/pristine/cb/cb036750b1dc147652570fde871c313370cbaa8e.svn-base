//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Showroom.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPengeluaranUang")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPengeluaranUang : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsPengeluaranUang() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsPengeluaranUang(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsPengeluaranUang cln = ((dsPengeluaranUang)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsPengeluaranUang";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPengeluaranUang.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPengeluaranUang ds = new dsPengeluaranUang();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnGroupRowID;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnNoApproval;
            
            private global::System.Data.DataColumn columnPerusahaanDariRowID;
            
            private global::System.Data.DataColumn columnNamaPerusahaanKe;
            
            private global::System.Data.DataColumn columnPTKeID;
            
            private global::System.Data.DataColumn columnCabangDariID;
            
            private global::System.Data.DataColumn columnNamaCabangDari;
            
            private global::System.Data.DataColumn columnCabangKeID;
            
            private global::System.Data.DataColumn columnNamaCabangKe;
            
            private global::System.Data.DataColumn columnVendorRowID;
            
            private global::System.Data.DataColumn columnNamaVendor;
            
            private global::System.Data.DataColumn columnVendorRowID1;
            
            private global::System.Data.DataColumn columnMataUangRowID;
            
            private global::System.Data.DataColumn columnMataUangID;
            
            private global::System.Data.DataColumn columnJnsTransaksiRowID;
            
            private global::System.Data.DataColumn columnJnsTransaksi;
            
            private global::System.Data.DataColumn columnNamaTransaksi;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnNominalIden;
            
            private global::System.Data.DataColumn columnNominalPenerimaan;
            
            private global::System.Data.DataColumn columnNominalSisa;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnJnsPengeluaran;
            
            private global::System.Data.DataColumn columnKasRowID;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnRekeningRowID;
            
            private global::System.Data.DataColumn columnNoCekGiro;
            
            private global::System.Data.DataColumn columnDueDateGiro;
            
            private global::System.Data.DataColumn columnStatusApproval;
            
            private global::System.Data.DataColumn columnDescStatusApproval;
            
            private global::System.Data.DataColumn columnPengeluaranKe;
            
            private global::System.Data.DataColumn columnAccNo1;
            
            private global::System.Data.DataColumn columnAccOleh1;
            
            private global::System.Data.DataColumn columnAccTanggal1;
            
            private global::System.Data.DataColumn columnAccNo2;
            
            private global::System.Data.DataColumn columnAccOleh2;
            
            private global::System.Data.DataColumn columnAccTanggal2;
            
            private global::System.Data.DataColumn columnIsRealisasi;
            
            private global::System.Data.DataColumn columnCreatedTime;
            
            private global::System.Data.DataColumn columnHIRowID;
            
            private global::System.Data.DataColumn columnIsGroup;
            
            private global::System.Data.DataColumn columnJournalRowID;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedTime;
            
            private global::System.Data.DataColumn columnIsPembayaran;
            
            private global::System.Data.DataColumn columnTanggalRk;
            
            private global::System.Data.DataColumn columnNamaRekening;
            
            private global::System.Data.DataColumn columnNoAcc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupRowIDColumn {
                get {
                    return this.columnGroupRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoApprovalColumn {
                get {
                    return this.columnNoApproval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerusahaanDariRowIDColumn {
                get {
                    return this.columnPerusahaanDariRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaPerusahaanKeColumn {
                get {
                    return this.columnNamaPerusahaanKe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PTKeIDColumn {
                get {
                    return this.columnPTKeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangDariIDColumn {
                get {
                    return this.columnCabangDariID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaCabangDariColumn {
                get {
                    return this.columnNamaCabangDari;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangKeIDColumn {
                get {
                    return this.columnCabangKeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaCabangKeColumn {
                get {
                    return this.columnNamaCabangKe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorRowIDColumn {
                get {
                    return this.columnVendorRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaVendorColumn {
                get {
                    return this.columnNamaVendor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorRowID1Column {
                get {
                    return this.columnVendorRowID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangRowIDColumn {
                get {
                    return this.columnMataUangRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangIDColumn {
                get {
                    return this.columnMataUangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JnsTransaksiRowIDColumn {
                get {
                    return this.columnJnsTransaksiRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JnsTransaksiColumn {
                get {
                    return this.columnJnsTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaTransaksiColumn {
                get {
                    return this.columnNamaTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalIdenColumn {
                get {
                    return this.columnNominalIden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalPenerimaanColumn {
                get {
                    return this.columnNominalPenerimaan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalSisaColumn {
                get {
                    return this.columnNominalSisa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JnsPengeluaranColumn {
                get {
                    return this.columnJnsPengeluaran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KasRowIDColumn {
                get {
                    return this.columnKasRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RekeningRowIDColumn {
                get {
                    return this.columnRekeningRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoCekGiroColumn {
                get {
                    return this.columnNoCekGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateGiroColumn {
                get {
                    return this.columnDueDateGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusApprovalColumn {
                get {
                    return this.columnStatusApproval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescStatusApprovalColumn {
                get {
                    return this.columnDescStatusApproval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PengeluaranKeColumn {
                get {
                    return this.columnPengeluaranKe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccNo1Column {
                get {
                    return this.columnAccNo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccOleh1Column {
                get {
                    return this.columnAccOleh1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccTanggal1Column {
                get {
                    return this.columnAccTanggal1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccNo2Column {
                get {
                    return this.columnAccNo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccOleh2Column {
                get {
                    return this.columnAccOleh2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccTanggal2Column {
                get {
                    return this.columnAccTanggal2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsRealisasiColumn {
                get {
                    return this.columnIsRealisasi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedTimeColumn {
                get {
                    return this.columnCreatedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIRowIDColumn {
                get {
                    return this.columnHIRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsGroupColumn {
                get {
                    return this.columnIsGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JournalRowIDColumn {
                get {
                    return this.columnJournalRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedTimeColumn {
                get {
                    return this.columnLastUpdatedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPembayaranColumn {
                get {
                    return this.columnIsPembayaran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalRkColumn {
                get {
                    return this.columnTanggalRk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaRekeningColumn {
                get {
                    return this.columnNamaRekening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoAccColumn {
                get {
                    return this.columnNoAcc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        System.Guid RowID, 
                        System.Guid GroupRowID, 
                        string NoBukti, 
                        System.DateTime Tanggal, 
                        string NoApproval, 
                        System.Guid PerusahaanDariRowID, 
                        string NamaPerusahaanKe, 
                        string PTKeID, 
                        string CabangDariID, 
                        string NamaCabangDari, 
                        string CabangKeID, 
                        string NamaCabangKe, 
                        System.Guid VendorRowID, 
                        string NamaVendor, 
                        System.Guid VendorRowID1, 
                        System.Guid MataUangRowID, 
                        string MataUangID, 
                        System.Guid JnsTransaksiRowID, 
                        string JnsTransaksi, 
                        string NamaTransaksi, 
                        decimal Nominal, 
                        decimal NominalIden, 
                        decimal NominalPenerimaan, 
                        decimal NominalSisa, 
                        string Uraian, 
                        string JnsPengeluaran, 
                        System.Guid KasRowID, 
                        System.Guid BankID, 
                        System.Guid RekeningRowID, 
                        string NoCekGiro, 
                        System.DateTime DueDateGiro, 
                        byte StatusApproval, 
                        string DescStatusApproval, 
                        int PengeluaranKe, 
                        string AccNo1, 
                        string AccOleh1, 
                        System.DateTime AccTanggal1, 
                        string AccNo2, 
                        string AccOleh2, 
                        System.DateTime AccTanggal2, 
                        int IsRealisasi, 
                        System.DateTime CreatedTime, 
                        System.Guid HIRowID, 
                        bool IsGroup, 
                        System.Guid JournalRowID, 
                        string LastUpdatedBy, 
                        System.DateTime LastUpdatedTime, 
                        bool IsPembayaran, 
                        System.DateTime TanggalRk, 
                        string NamaRekening, 
                        string NoAcc) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        GroupRowID,
                        NoBukti,
                        Tanggal,
                        NoApproval,
                        PerusahaanDariRowID,
                        NamaPerusahaanKe,
                        PTKeID,
                        CabangDariID,
                        NamaCabangDari,
                        CabangKeID,
                        NamaCabangKe,
                        VendorRowID,
                        NamaVendor,
                        VendorRowID1,
                        MataUangRowID,
                        MataUangID,
                        JnsTransaksiRowID,
                        JnsTransaksi,
                        NamaTransaksi,
                        Nominal,
                        NominalIden,
                        NominalPenerimaan,
                        NominalSisa,
                        Uraian,
                        JnsPengeluaran,
                        KasRowID,
                        BankID,
                        RekeningRowID,
                        NoCekGiro,
                        DueDateGiro,
                        StatusApproval,
                        DescStatusApproval,
                        PengeluaranKe,
                        AccNo1,
                        AccOleh1,
                        AccTanggal1,
                        AccNo2,
                        AccOleh2,
                        AccTanggal2,
                        IsRealisasi,
                        CreatedTime,
                        HIRowID,
                        IsGroup,
                        JournalRowID,
                        LastUpdatedBy,
                        LastUpdatedTime,
                        IsPembayaran,
                        TanggalRk,
                        NamaRekening,
                        NoAcc};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnGroupRowID = base.Columns["GroupRowID"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnNoApproval = base.Columns["NoApproval"];
                this.columnPerusahaanDariRowID = base.Columns["PerusahaanDariRowID"];
                this.columnNamaPerusahaanKe = base.Columns["NamaPerusahaanKe"];
                this.columnPTKeID = base.Columns["PTKeID"];
                this.columnCabangDariID = base.Columns["CabangDariID"];
                this.columnNamaCabangDari = base.Columns["NamaCabangDari"];
                this.columnCabangKeID = base.Columns["CabangKeID"];
                this.columnNamaCabangKe = base.Columns["NamaCabangKe"];
                this.columnVendorRowID = base.Columns["VendorRowID"];
                this.columnNamaVendor = base.Columns["NamaVendor"];
                this.columnVendorRowID1 = base.Columns["VendorRowID1"];
                this.columnMataUangRowID = base.Columns["MataUangRowID"];
                this.columnMataUangID = base.Columns["MataUangID"];
                this.columnJnsTransaksiRowID = base.Columns["JnsTransaksiRowID"];
                this.columnJnsTransaksi = base.Columns["JnsTransaksi"];
                this.columnNamaTransaksi = base.Columns["NamaTransaksi"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnNominalIden = base.Columns["NominalIden"];
                this.columnNominalPenerimaan = base.Columns["NominalPenerimaan"];
                this.columnNominalSisa = base.Columns["NominalSisa"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnJnsPengeluaran = base.Columns["JnsPengeluaran"];
                this.columnKasRowID = base.Columns["KasRowID"];
                this.columnBankID = base.Columns["BankID"];
                this.columnRekeningRowID = base.Columns["RekeningRowID"];
                this.columnNoCekGiro = base.Columns["NoCekGiro"];
                this.columnDueDateGiro = base.Columns["DueDateGiro"];
                this.columnStatusApproval = base.Columns["StatusApproval"];
                this.columnDescStatusApproval = base.Columns["DescStatusApproval"];
                this.columnPengeluaranKe = base.Columns["PengeluaranKe"];
                this.columnAccNo1 = base.Columns["AccNo1"];
                this.columnAccOleh1 = base.Columns["AccOleh1"];
                this.columnAccTanggal1 = base.Columns["AccTanggal1"];
                this.columnAccNo2 = base.Columns["AccNo2"];
                this.columnAccOleh2 = base.Columns["AccOleh2"];
                this.columnAccTanggal2 = base.Columns["AccTanggal2"];
                this.columnIsRealisasi = base.Columns["IsRealisasi"];
                this.columnCreatedTime = base.Columns["CreatedTime"];
                this.columnHIRowID = base.Columns["HIRowID"];
                this.columnIsGroup = base.Columns["IsGroup"];
                this.columnJournalRowID = base.Columns["JournalRowID"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedTime = base.Columns["LastUpdatedTime"];
                this.columnIsPembayaran = base.Columns["IsPembayaran"];
                this.columnTanggalRk = base.Columns["TanggalRk"];
                this.columnNamaRekening = base.Columns["NamaRekening"];
                this.columnNoAcc = base.Columns["NoAcc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnGroupRowID = new global::System.Data.DataColumn("GroupRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupRowID);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnNoApproval = new global::System.Data.DataColumn("NoApproval", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoApproval);
                this.columnPerusahaanDariRowID = new global::System.Data.DataColumn("PerusahaanDariRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerusahaanDariRowID);
                this.columnNamaPerusahaanKe = new global::System.Data.DataColumn("NamaPerusahaanKe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaPerusahaanKe);
                this.columnPTKeID = new global::System.Data.DataColumn("PTKeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTKeID);
                this.columnCabangDariID = new global::System.Data.DataColumn("CabangDariID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangDariID);
                this.columnNamaCabangDari = new global::System.Data.DataColumn("NamaCabangDari", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaCabangDari);
                this.columnCabangKeID = new global::System.Data.DataColumn("CabangKeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangKeID);
                this.columnNamaCabangKe = new global::System.Data.DataColumn("NamaCabangKe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaCabangKe);
                this.columnVendorRowID = new global::System.Data.DataColumn("VendorRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorRowID);
                this.columnNamaVendor = new global::System.Data.DataColumn("NamaVendor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaVendor);
                this.columnVendorRowID1 = new global::System.Data.DataColumn("VendorRowID1", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorRowID1);
                this.columnMataUangRowID = new global::System.Data.DataColumn("MataUangRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangRowID);
                this.columnMataUangID = new global::System.Data.DataColumn("MataUangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangID);
                this.columnJnsTransaksiRowID = new global::System.Data.DataColumn("JnsTransaksiRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJnsTransaksiRowID);
                this.columnJnsTransaksi = new global::System.Data.DataColumn("JnsTransaksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJnsTransaksi);
                this.columnNamaTransaksi = new global::System.Data.DataColumn("NamaTransaksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaTransaksi);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnNominalIden = new global::System.Data.DataColumn("NominalIden", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalIden);
                this.columnNominalPenerimaan = new global::System.Data.DataColumn("NominalPenerimaan", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalPenerimaan);
                this.columnNominalSisa = new global::System.Data.DataColumn("NominalSisa", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalSisa);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnJnsPengeluaran = new global::System.Data.DataColumn("JnsPengeluaran", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJnsPengeluaran);
                this.columnKasRowID = new global::System.Data.DataColumn("KasRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKasRowID);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnRekeningRowID = new global::System.Data.DataColumn("RekeningRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRekeningRowID);
                this.columnNoCekGiro = new global::System.Data.DataColumn("NoCekGiro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoCekGiro);
                this.columnDueDateGiro = new global::System.Data.DataColumn("DueDateGiro", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDateGiro);
                this.columnStatusApproval = new global::System.Data.DataColumn("StatusApproval", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusApproval);
                this.columnDescStatusApproval = new global::System.Data.DataColumn("DescStatusApproval", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescStatusApproval);
                this.columnPengeluaranKe = new global::System.Data.DataColumn("PengeluaranKe", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPengeluaranKe);
                this.columnAccNo1 = new global::System.Data.DataColumn("AccNo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccNo1);
                this.columnAccOleh1 = new global::System.Data.DataColumn("AccOleh1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccOleh1);
                this.columnAccTanggal1 = new global::System.Data.DataColumn("AccTanggal1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccTanggal1);
                this.columnAccNo2 = new global::System.Data.DataColumn("AccNo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccNo2);
                this.columnAccOleh2 = new global::System.Data.DataColumn("AccOleh2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccOleh2);
                this.columnAccTanggal2 = new global::System.Data.DataColumn("AccTanggal2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccTanggal2);
                this.columnIsRealisasi = new global::System.Data.DataColumn("IsRealisasi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRealisasi);
                this.columnCreatedTime = new global::System.Data.DataColumn("CreatedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedTime);
                this.columnHIRowID = new global::System.Data.DataColumn("HIRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIRowID);
                this.columnIsGroup = new global::System.Data.DataColumn("IsGroup", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsGroup);
                this.columnJournalRowID = new global::System.Data.DataColumn("JournalRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJournalRowID);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedTime = new global::System.Data.DataColumn("LastUpdatedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedTime);
                this.columnIsPembayaran = new global::System.Data.DataColumn("IsPembayaran", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPembayaran);
                this.columnTanggalRk = new global::System.Data.DataColumn("TanggalRk", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalRk);
                this.columnNamaRekening = new global::System.Data.DataColumn("NamaRekening", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaRekening);
                this.columnNoAcc = new global::System.Data.DataColumn("NoAcc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoAcc);
                this.columnRowID.AllowDBNull = false;
                this.columnNoBukti.AllowDBNull = false;
                this.columnNoBukti.MaxLength = 20;
                this.columnNoApproval.MaxLength = 20;
                this.columnNamaPerusahaanKe.MaxLength = 50;
                this.columnPTKeID.MaxLength = 3;
                this.columnCabangDariID.MaxLength = 3;
                this.columnNamaCabangDari.MaxLength = 25;
                this.columnCabangKeID.MaxLength = 3;
                this.columnNamaCabangKe.MaxLength = 25;
                this.columnNamaVendor.MaxLength = 255;
                this.columnMataUangID.MaxLength = 3;
                this.columnJnsTransaksi.MaxLength = 3;
                this.columnNamaTransaksi.MaxLength = 50;
                this.columnNominalIden.ReadOnly = true;
                this.columnNominalPenerimaan.ReadOnly = true;
                this.columnNominalSisa.ReadOnly = true;
                this.columnUraian.MaxLength = 250;
                this.columnJnsPengeluaran.MaxLength = 2;
                this.columnNoCekGiro.MaxLength = 30;
                this.columnDescStatusApproval.ReadOnly = true;
                this.columnDescStatusApproval.MaxLength = 19;
                this.columnAccNo1.MaxLength = 20;
                this.columnAccOleh1.MaxLength = 50;
                this.columnAccNo2.MaxLength = 20;
                this.columnAccOleh2.MaxLength = 50;
                this.columnIsRealisasi.ReadOnly = true;
                this.columnCreatedTime.AllowDBNull = false;
                this.columnLastUpdatedBy.MaxLength = 50;
                this.columnLastUpdatedTime.AllowDBNull = false;
                this.columnIsPembayaran.ReadOnly = true;
                this.columnNamaRekening.MaxLength = 100;
                this.columnNoAcc.ReadOnly = true;
                this.columnNoAcc.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPengeluaranUang ds = new dsPengeluaranUang();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RowID {
                get {
                    return ((global::System.Guid)(this[this.tableData.RowIDColumn]));
                }
                set {
                    this[this.tableData.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid GroupRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.GroupRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.GroupRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    return ((string)(this[this.tableData.NoBuktiColumn]));
                }
                set {
                    this[this.tableData.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tanggal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoApproval {
                get {
                    try {
                        return ((string)(this[this.tableData.NoApprovalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoApproval\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoApprovalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid PerusahaanDariRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.PerusahaanDariRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerusahaanDariRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PerusahaanDariRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaPerusahaanKe {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaPerusahaanKeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaPerusahaanKe\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaPerusahaanKeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PTKeID {
                get {
                    try {
                        return ((string)(this[this.tableData.PTKeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PTKeID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PTKeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangDariID {
                get {
                    try {
                        return ((string)(this[this.tableData.CabangDariIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangDariID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.CabangDariIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaCabangDari {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaCabangDariColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaCabangDari\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaCabangDariColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangKeID {
                get {
                    try {
                        return ((string)(this[this.tableData.CabangKeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangKeID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.CabangKeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaCabangKe {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaCabangKeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaCabangKe\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaCabangKeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid VendorRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.VendorRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.VendorRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaVendor {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaVendorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaVendor\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaVendorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid VendorRowID1 {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.VendorRowID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorRowID1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.VendorRowID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid MataUangRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.MataUangRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MataUangRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MataUangRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MataUangID {
                get {
                    try {
                        return ((string)(this[this.tableData.MataUangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MataUangID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MataUangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid JnsTransaksiRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.JnsTransaksiRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JnsTransaksiRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JnsTransaksiRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JnsTransaksi {
                get {
                    try {
                        return ((string)(this[this.tableData.JnsTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JnsTransaksi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JnsTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaTransaksi {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaTransaksi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nominal {
                get {
                    try {
                        return ((decimal)(this[this.tableData.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NominalIden {
                get {
                    try {
                        return ((decimal)(this[this.tableData.NominalIdenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalIden\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NominalIdenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NominalPenerimaan {
                get {
                    try {
                        return ((decimal)(this[this.tableData.NominalPenerimaanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalPenerimaan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NominalPenerimaanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NominalSisa {
                get {
                    try {
                        return ((decimal)(this[this.tableData.NominalSisaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalSisa\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NominalSisaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableData.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JnsPengeluaran {
                get {
                    try {
                        return ((string)(this[this.tableData.JnsPengeluaranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JnsPengeluaran\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JnsPengeluaranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid KasRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.KasRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KasRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KasRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid BankID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RekeningRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.RekeningRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RekeningRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RekeningRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoCekGiro {
                get {
                    try {
                        return ((string)(this[this.tableData.NoCekGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoCekGiro\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoCekGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDateGiro {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.DueDateGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDateGiro\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DueDateGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte StatusApproval {
                get {
                    try {
                        return ((byte)(this[this.tableData.StatusApprovalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusApproval\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.StatusApprovalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DescStatusApproval {
                get {
                    try {
                        return ((string)(this[this.tableData.DescStatusApprovalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescStatusApproval\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DescStatusApprovalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PengeluaranKe {
                get {
                    try {
                        return ((int)(this[this.tableData.PengeluaranKeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PengeluaranKe\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.PengeluaranKeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccNo1 {
                get {
                    try {
                        return ((string)(this[this.tableData.AccNo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccNo1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AccNo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccOleh1 {
                get {
                    try {
                        return ((string)(this[this.tableData.AccOleh1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccOleh1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AccOleh1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AccTanggal1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.AccTanggal1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccTanggal1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AccTanggal1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccNo2 {
                get {
                    try {
                        return ((string)(this[this.tableData.AccNo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccNo2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AccNo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccOleh2 {
                get {
                    try {
                        return ((string)(this[this.tableData.AccOleh2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccOleh2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AccOleh2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AccTanggal2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.AccTanggal2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccTanggal2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AccTanggal2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsRealisasi {
                get {
                    try {
                        return ((int)(this[this.tableData.IsRealisasiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRealisasi\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.IsRealisasiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedTime {
                get {
                    return ((global::System.DateTime)(this[this.tableData.CreatedTimeColumn]));
                }
                set {
                    this[this.tableData.CreatedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid HIRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.HIRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.HIRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroup {
                get {
                    try {
                        return ((bool)(this[this.tableData.IsGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsGroup\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.IsGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid JournalRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableData.JournalRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JournalRowID\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.JournalRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastUpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableData.LastUpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedBy\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastUpdatedTime {
                get {
                    return ((global::System.DateTime)(this[this.tableData.LastUpdatedTimeColumn]));
                }
                set {
                    this[this.tableData.LastUpdatedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPembayaran {
                get {
                    try {
                        return ((bool)(this[this.tableData.IsPembayaranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPembayaran\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.IsPembayaranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TanggalRk {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableData.TanggalRkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalRk\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TanggalRkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaRekening {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaRekeningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaRekening\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaRekeningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoAcc {
                get {
                    try {
                        return ((string)(this[this.tableData.NoAccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoAcc\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoAccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupRowIDNull() {
                return this.IsNull(this.tableData.GroupRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupRowIDNull() {
                this[this.tableData.GroupRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableData.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableData.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoApprovalNull() {
                return this.IsNull(this.tableData.NoApprovalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoApprovalNull() {
                this[this.tableData.NoApprovalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerusahaanDariRowIDNull() {
                return this.IsNull(this.tableData.PerusahaanDariRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerusahaanDariRowIDNull() {
                this[this.tableData.PerusahaanDariRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaPerusahaanKeNull() {
                return this.IsNull(this.tableData.NamaPerusahaanKeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaPerusahaanKeNull() {
                this[this.tableData.NamaPerusahaanKeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPTKeIDNull() {
                return this.IsNull(this.tableData.PTKeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPTKeIDNull() {
                this[this.tableData.PTKeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangDariIDNull() {
                return this.IsNull(this.tableData.CabangDariIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangDariIDNull() {
                this[this.tableData.CabangDariIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaCabangDariNull() {
                return this.IsNull(this.tableData.NamaCabangDariColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaCabangDariNull() {
                this[this.tableData.NamaCabangDariColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangKeIDNull() {
                return this.IsNull(this.tableData.CabangKeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangKeIDNull() {
                this[this.tableData.CabangKeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaCabangKeNull() {
                return this.IsNull(this.tableData.NamaCabangKeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaCabangKeNull() {
                this[this.tableData.NamaCabangKeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorRowIDNull() {
                return this.IsNull(this.tableData.VendorRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorRowIDNull() {
                this[this.tableData.VendorRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaVendorNull() {
                return this.IsNull(this.tableData.NamaVendorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaVendorNull() {
                this[this.tableData.NamaVendorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorRowID1Null() {
                return this.IsNull(this.tableData.VendorRowID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorRowID1Null() {
                this[this.tableData.VendorRowID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMataUangRowIDNull() {
                return this.IsNull(this.tableData.MataUangRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMataUangRowIDNull() {
                this[this.tableData.MataUangRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMataUangIDNull() {
                return this.IsNull(this.tableData.MataUangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMataUangIDNull() {
                this[this.tableData.MataUangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJnsTransaksiRowIDNull() {
                return this.IsNull(this.tableData.JnsTransaksiRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJnsTransaksiRowIDNull() {
                this[this.tableData.JnsTransaksiRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJnsTransaksiNull() {
                return this.IsNull(this.tableData.JnsTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJnsTransaksiNull() {
                this[this.tableData.JnsTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaTransaksiNull() {
                return this.IsNull(this.tableData.NamaTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaTransaksiNull() {
                this[this.tableData.NamaTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableData.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableData.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalIdenNull() {
                return this.IsNull(this.tableData.NominalIdenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalIdenNull() {
                this[this.tableData.NominalIdenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalPenerimaanNull() {
                return this.IsNull(this.tableData.NominalPenerimaanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalPenerimaanNull() {
                this[this.tableData.NominalPenerimaanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalSisaNull() {
                return this.IsNull(this.tableData.NominalSisaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalSisaNull() {
                this[this.tableData.NominalSisaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableData.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableData.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJnsPengeluaranNull() {
                return this.IsNull(this.tableData.JnsPengeluaranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJnsPengeluaranNull() {
                this[this.tableData.JnsPengeluaranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKasRowIDNull() {
                return this.IsNull(this.tableData.KasRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKasRowIDNull() {
                this[this.tableData.KasRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableData.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankIDNull() {
                this[this.tableData.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRekeningRowIDNull() {
                return this.IsNull(this.tableData.RekeningRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRekeningRowIDNull() {
                this[this.tableData.RekeningRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoCekGiroNull() {
                return this.IsNull(this.tableData.NoCekGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoCekGiroNull() {
                this[this.tableData.NoCekGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateGiroNull() {
                return this.IsNull(this.tableData.DueDateGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateGiroNull() {
                this[this.tableData.DueDateGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusApprovalNull() {
                return this.IsNull(this.tableData.StatusApprovalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusApprovalNull() {
                this[this.tableData.StatusApprovalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescStatusApprovalNull() {
                return this.IsNull(this.tableData.DescStatusApprovalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescStatusApprovalNull() {
                this[this.tableData.DescStatusApprovalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPengeluaranKeNull() {
                return this.IsNull(this.tableData.PengeluaranKeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPengeluaranKeNull() {
                this[this.tableData.PengeluaranKeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccNo1Null() {
                return this.IsNull(this.tableData.AccNo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccNo1Null() {
                this[this.tableData.AccNo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccOleh1Null() {
                return this.IsNull(this.tableData.AccOleh1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccOleh1Null() {
                this[this.tableData.AccOleh1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccTanggal1Null() {
                return this.IsNull(this.tableData.AccTanggal1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccTanggal1Null() {
                this[this.tableData.AccTanggal1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccNo2Null() {
                return this.IsNull(this.tableData.AccNo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccNo2Null() {
                this[this.tableData.AccNo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccOleh2Null() {
                return this.IsNull(this.tableData.AccOleh2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccOleh2Null() {
                this[this.tableData.AccOleh2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccTanggal2Null() {
                return this.IsNull(this.tableData.AccTanggal2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccTanggal2Null() {
                this[this.tableData.AccTanggal2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsRealisasiNull() {
                return this.IsNull(this.tableData.IsRealisasiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsRealisasiNull() {
                this[this.tableData.IsRealisasiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIRowIDNull() {
                return this.IsNull(this.tableData.HIRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIRowIDNull() {
                this[this.tableData.HIRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsGroupNull() {
                return this.IsNull(this.tableData.IsGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsGroupNull() {
                this[this.tableData.IsGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJournalRowIDNull() {
                return this.IsNull(this.tableData.JournalRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJournalRowIDNull() {
                this[this.tableData.JournalRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedByNull() {
                return this.IsNull(this.tableData.LastUpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedByNull() {
                this[this.tableData.LastUpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPembayaranNull() {
                return this.IsNull(this.tableData.IsPembayaranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPembayaranNull() {
                this[this.tableData.IsPembayaranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalRkNull() {
                return this.IsNull(this.tableData.TanggalRkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalRkNull() {
                this[this.tableData.TanggalRkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaRekeningNull() {
                return this.IsNull(this.tableData.NamaRekeningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaRekeningNull() {
                this[this.tableData.NamaRekeningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoAccNull() {
                return this.IsNull(this.tableData.NoAccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoAccNull() {
                this[this.tableData.NoAccColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ISA.Showroom.Finance.DataTemplates.dsPengeluaranUangTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Data";
            tableMapping.ColumnMappings.Add("RowID", "RowID");
            tableMapping.ColumnMappings.Add("GroupRowID", "GroupRowID");
            tableMapping.ColumnMappings.Add("NoBukti", "NoBukti");
            tableMapping.ColumnMappings.Add("Tanggal", "Tanggal");
            tableMapping.ColumnMappings.Add("NoApproval", "NoApproval");
            tableMapping.ColumnMappings.Add("PerusahaanDariRowID", "PerusahaanDariRowID");
            tableMapping.ColumnMappings.Add("NamaPerusahaanKe", "NamaPerusahaanKe");
            tableMapping.ColumnMappings.Add("PTKeID", "PTKeID");
            tableMapping.ColumnMappings.Add("CabangDariID", "CabangDariID");
            tableMapping.ColumnMappings.Add("NamaCabangDari", "NamaCabangDari");
            tableMapping.ColumnMappings.Add("CabangKeID", "CabangKeID");
            tableMapping.ColumnMappings.Add("NamaCabangKe", "NamaCabangKe");
            tableMapping.ColumnMappings.Add("VendorRowID", "VendorRowID");
            tableMapping.ColumnMappings.Add("NamaVendor", "NamaVendor");
            tableMapping.ColumnMappings.Add("VendorRowID1", "VendorRowID1");
            tableMapping.ColumnMappings.Add("MataUangRowID", "MataUangRowID");
            tableMapping.ColumnMappings.Add("MataUangID", "MataUangID");
            tableMapping.ColumnMappings.Add("JnsTransaksiRowID", "JnsTransaksiRowID");
            tableMapping.ColumnMappings.Add("JnsTransaksi", "JnsTransaksi");
            tableMapping.ColumnMappings.Add("NamaTransaksi", "NamaTransaksi");
            tableMapping.ColumnMappings.Add("Nominal", "Nominal");
            tableMapping.ColumnMappings.Add("NominalIden", "NominalIden");
            tableMapping.ColumnMappings.Add("NominalPenerimaan", "NominalPenerimaan");
            tableMapping.ColumnMappings.Add("NominalSisa", "NominalSisa");
            tableMapping.ColumnMappings.Add("Uraian", "Uraian");
            tableMapping.ColumnMappings.Add("JnsPengeluaran", "JnsPengeluaran");
            tableMapping.ColumnMappings.Add("KasRowID", "KasRowID");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("RekeningRowID", "RekeningRowID");
            tableMapping.ColumnMappings.Add("NoCekGiro", "NoCekGiro");
            tableMapping.ColumnMappings.Add("DueDateGiro", "DueDateGiro");
            tableMapping.ColumnMappings.Add("StatusApproval", "StatusApproval");
            tableMapping.ColumnMappings.Add("DescStatusApproval", "DescStatusApproval");
            tableMapping.ColumnMappings.Add("PengeluaranKe", "PengeluaranKe");
            tableMapping.ColumnMappings.Add("AccNo1", "AccNo1");
            tableMapping.ColumnMappings.Add("AccOleh1", "AccOleh1");
            tableMapping.ColumnMappings.Add("AccTanggal1", "AccTanggal1");
            tableMapping.ColumnMappings.Add("AccNo2", "AccNo2");
            tableMapping.ColumnMappings.Add("AccOleh2", "AccOleh2");
            tableMapping.ColumnMappings.Add("AccTanggal2", "AccTanggal2");
            tableMapping.ColumnMappings.Add("IsRealisasi", "IsRealisasi");
            tableMapping.ColumnMappings.Add("CreatedTime", "CreatedTime");
            tableMapping.ColumnMappings.Add("HIRowID", "HIRowID");
            tableMapping.ColumnMappings.Add("IsGroup", "IsGroup");
            tableMapping.ColumnMappings.Add("JournalRowID", "JournalRowID");
            tableMapping.ColumnMappings.Add("LastUpdatedBy", "LastUpdatedBy");
            tableMapping.ColumnMappings.Add("LastUpdatedTime", "LastUpdatedTime");
            tableMapping.ColumnMappings.Add("IsPembayaran", "IsPembayaran");
            tableMapping.ColumnMappings.Add("TanggalRk", "TanggalRk");
            tableMapping.ColumnMappings.Add("NamaRekening", "NamaRekening");
            tableMapping.ColumnMappings.Add("NoAcc", "NoAcc");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ISA.Showroom.Finance.Properties.Settings.Default.ISAFinanceOtoDbTLAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_PembayaranMPM_LIST_FILTER_Tanggal";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerusahaanDariRowID", global::System.Data.SqlDbType.UniqueIdentifier, 16, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPengeluaranUang.DataDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<global::System.Guid> PerusahaanDariRowID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PerusahaanDariRowID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.Guid)(PerusahaanDariRowID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPengeluaranUang.DataDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<global::System.Guid> PerusahaanDariRowID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PerusahaanDariRowID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.Guid)(PerusahaanDariRowID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            dsPengeluaranUang.DataDataTable dataTable = new dsPengeluaranUang.DataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsPengeluaranUang dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsPengeluaranUang dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsPengeluaranUang dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsPengeluaranUang dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591