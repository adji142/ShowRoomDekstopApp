<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdCANCEL.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="cmdPRINT.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        U52pTmUAWAAAAABJRU5ErkJggg==
</value>
  </data>
</root>