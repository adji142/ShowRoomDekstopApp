//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.7905
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Showroom.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsKas")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsKas : global::System.Data.DataSet {
        
        private TransaksiKasDataTable tableTransaksiKas;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsKas() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsKas(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TransaksiKas"] != null)) {
                    base.Tables.Add(new TransaksiKasDataTable(ds.Tables["TransaksiKas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransaksiKasDataTable TransaksiKas {
            get {
                return this.tableTransaksiKas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsKas cln = ((dsKas)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TransaksiKas"] != null)) {
                    base.Tables.Add(new TransaksiKasDataTable(ds.Tables["TransaksiKas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTransaksiKas = ((TransaksiKasDataTable)(base.Tables["TransaksiKas"]));
            if ((initTable == true)) {
                if ((this.tableTransaksiKas != null)) {
                    this.tableTransaksiKas.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsKas";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsKas.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTransaksiKas = new TransaksiKasDataTable();
            base.Tables.Add(this.tableTransaksiKas);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransaksiKas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsKas ds = new dsKas();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TransaksiKasRowChangeEventHandler(object sender, TransaksiKasRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransaksiKasDataTable : global::System.Data.TypedTableBase<TransaksiKasRow> {
            
            private global::System.Data.DataColumn columnInitPerusahaan;
            
            private global::System.Data.DataColumn columnCabangDari;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnCabangKe;
            
            private global::System.Data.DataColumn columnDebet;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnKredit;
            
            private global::System.Data.DataColumn columnNamaBank;
            
            private global::System.Data.DataColumn columnNoCekGiro;
            
            private global::System.Data.DataColumn columnDueDateGiro;
            
            private global::System.Data.DataColumn columnJenis;
            
            private global::System.Data.DataColumn columnMataUangID;
            
            private global::System.Data.DataColumn columnNominalOri;
            
            private global::System.Data.DataColumn columnKurs;
            
            private global::System.Data.DataColumn columnJnsTransaksi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiKasDataTable() {
                this.TableName = "TransaksiKas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransaksiKasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransaksiKasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InitPerusahaanColumn {
                get {
                    return this.columnInitPerusahaan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangDariColumn {
                get {
                    return this.columnCabangDari;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangKeColumn {
                get {
                    return this.columnCabangKe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebetColumn {
                get {
                    return this.columnDebet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KreditColumn {
                get {
                    return this.columnKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBankColumn {
                get {
                    return this.columnNamaBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoCekGiroColumn {
                get {
                    return this.columnNoCekGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateGiroColumn {
                get {
                    return this.columnDueDateGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JenisColumn {
                get {
                    return this.columnJenis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangIDColumn {
                get {
                    return this.columnMataUangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalOriColumn {
                get {
                    return this.columnNominalOri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KursColumn {
                get {
                    return this.columnKurs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JnsTransaksiColumn {
                get {
                    return this.columnJnsTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiKasRow this[int index] {
                get {
                    return ((TransaksiKasRow)(this.Rows[index]));
                }
            }
            
            public event TransaksiKasRowChangeEventHandler TransaksiKasRowChanging;
            
            public event TransaksiKasRowChangeEventHandler TransaksiKasRowChanged;
            
            public event TransaksiKasRowChangeEventHandler TransaksiKasRowDeleting;
            
            public event TransaksiKasRowChangeEventHandler TransaksiKasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransaksiKasRow(TransaksiKasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiKasRow AddTransaksiKasRow(
                        string InitPerusahaan, 
                        string CabangDari, 
                        string NoBukti, 
                        string Tanggal, 
                        string CabangKe, 
                        string Debet, 
                        string Uraian, 
                        string Kredit, 
                        string NamaBank, 
                        string NoCekGiro, 
                        string DueDateGiro, 
                        string Jenis, 
                        string MataUangID, 
                        double NominalOri, 
                        string Kurs, 
                        string JnsTransaksi) {
                TransaksiKasRow rowTransaksiKasRow = ((TransaksiKasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InitPerusahaan,
                        CabangDari,
                        NoBukti,
                        Tanggal,
                        CabangKe,
                        Debet,
                        Uraian,
                        Kredit,
                        NamaBank,
                        NoCekGiro,
                        DueDateGiro,
                        Jenis,
                        MataUangID,
                        NominalOri,
                        Kurs,
                        JnsTransaksi};
                rowTransaksiKasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransaksiKasRow);
                return rowTransaksiKasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransaksiKasDataTable cln = ((TransaksiKasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransaksiKasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInitPerusahaan = base.Columns["InitPerusahaan"];
                this.columnCabangDari = base.Columns["CabangDari"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnCabangKe = base.Columns["CabangKe"];
                this.columnDebet = base.Columns["Debet"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnKredit = base.Columns["Kredit"];
                this.columnNamaBank = base.Columns["NamaBank"];
                this.columnNoCekGiro = base.Columns["NoCekGiro"];
                this.columnDueDateGiro = base.Columns["DueDateGiro"];
                this.columnJenis = base.Columns["Jenis"];
                this.columnMataUangID = base.Columns["MataUangID"];
                this.columnNominalOri = base.Columns["NominalOri"];
                this.columnKurs = base.Columns["Kurs"];
                this.columnJnsTransaksi = base.Columns["JnsTransaksi"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInitPerusahaan = new global::System.Data.DataColumn("InitPerusahaan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitPerusahaan);
                this.columnCabangDari = new global::System.Data.DataColumn("CabangDari", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangDari);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnCabangKe = new global::System.Data.DataColumn("CabangKe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangKe);
                this.columnDebet = new global::System.Data.DataColumn("Debet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebet);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnKredit = new global::System.Data.DataColumn("Kredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKredit);
                this.columnNamaBank = new global::System.Data.DataColumn("NamaBank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBank);
                this.columnNoCekGiro = new global::System.Data.DataColumn("NoCekGiro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoCekGiro);
                this.columnDueDateGiro = new global::System.Data.DataColumn("DueDateGiro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDateGiro);
                this.columnJenis = new global::System.Data.DataColumn("Jenis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJenis);
                this.columnMataUangID = new global::System.Data.DataColumn("MataUangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangID);
                this.columnNominalOri = new global::System.Data.DataColumn("NominalOri", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalOri);
                this.columnKurs = new global::System.Data.DataColumn("Kurs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKurs);
                this.columnJnsTransaksi = new global::System.Data.DataColumn("JnsTransaksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJnsTransaksi);
                this.columnTanggal.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiKasRow NewTransaksiKasRow() {
                return ((TransaksiKasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransaksiKasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransaksiKasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransaksiKasRowChanged != null)) {
                    this.TransaksiKasRowChanged(this, new TransaksiKasRowChangeEvent(((TransaksiKasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransaksiKasRowChanging != null)) {
                    this.TransaksiKasRowChanging(this, new TransaksiKasRowChangeEvent(((TransaksiKasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransaksiKasRowDeleted != null)) {
                    this.TransaksiKasRowDeleted(this, new TransaksiKasRowChangeEvent(((TransaksiKasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransaksiKasRowDeleting != null)) {
                    this.TransaksiKasRowDeleting(this, new TransaksiKasRowChangeEvent(((TransaksiKasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransaksiKasRow(TransaksiKasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsKas ds = new dsKas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransaksiKasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransaksiKasRow : global::System.Data.DataRow {
            
            private TransaksiKasDataTable tableTransaksiKas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransaksiKasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransaksiKas = ((TransaksiKasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InitPerusahaan {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.InitPerusahaanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitPerusahaan\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.InitPerusahaanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangDari {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.CabangDariColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangDari\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.CabangDariColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    return ((string)(this[this.tableTransaksiKas.TanggalColumn]));
                }
                set {
                    this[this.tableTransaksiKas.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangKe {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.CabangKeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangKe\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.CabangKeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Debet {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.DebetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debet\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.DebetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kredit {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.KreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kredit\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.KreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBank {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.NamaBankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBank\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.NamaBankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoCekGiro {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.NoCekGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoCekGiro\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.NoCekGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DueDateGiro {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.DueDateGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDateGiro\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.DueDateGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jenis {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.JenisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jenis\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.JenisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MataUangID {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.MataUangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MataUangID\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.MataUangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NominalOri {
                get {
                    try {
                        return ((double)(this[this.tableTransaksiKas.NominalOriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalOri\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.NominalOriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kurs {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.KursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kurs\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.KursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JnsTransaksi {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiKas.JnsTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JnsTransaksi\' in table \'TransaksiKas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiKas.JnsTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInitPerusahaanNull() {
                return this.IsNull(this.tableTransaksiKas.InitPerusahaanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInitPerusahaanNull() {
                this[this.tableTransaksiKas.InitPerusahaanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangDariNull() {
                return this.IsNull(this.tableTransaksiKas.CabangDariColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangDariNull() {
                this[this.tableTransaksiKas.CabangDariColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableTransaksiKas.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableTransaksiKas.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangKeNull() {
                return this.IsNull(this.tableTransaksiKas.CabangKeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangKeNull() {
                this[this.tableTransaksiKas.CabangKeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebetNull() {
                return this.IsNull(this.tableTransaksiKas.DebetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebetNull() {
                this[this.tableTransaksiKas.DebetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableTransaksiKas.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableTransaksiKas.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKreditNull() {
                return this.IsNull(this.tableTransaksiKas.KreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKreditNull() {
                this[this.tableTransaksiKas.KreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBankNull() {
                return this.IsNull(this.tableTransaksiKas.NamaBankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBankNull() {
                this[this.tableTransaksiKas.NamaBankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoCekGiroNull() {
                return this.IsNull(this.tableTransaksiKas.NoCekGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoCekGiroNull() {
                this[this.tableTransaksiKas.NoCekGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateGiroNull() {
                return this.IsNull(this.tableTransaksiKas.DueDateGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateGiroNull() {
                this[this.tableTransaksiKas.DueDateGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJenisNull() {
                return this.IsNull(this.tableTransaksiKas.JenisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJenisNull() {
                this[this.tableTransaksiKas.JenisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMataUangIDNull() {
                return this.IsNull(this.tableTransaksiKas.MataUangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMataUangIDNull() {
                this[this.tableTransaksiKas.MataUangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalOriNull() {
                return this.IsNull(this.tableTransaksiKas.NominalOriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalOriNull() {
                this[this.tableTransaksiKas.NominalOriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKursNull() {
                return this.IsNull(this.tableTransaksiKas.KursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKursNull() {
                this[this.tableTransaksiKas.KursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJnsTransaksiNull() {
                return this.IsNull(this.tableTransaksiKas.JnsTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJnsTransaksiNull() {
                this[this.tableTransaksiKas.JnsTransaksiColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransaksiKasRowChangeEvent : global::System.EventArgs {
            
            private TransaksiKasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiKasRowChangeEvent(TransaksiKasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiKasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591