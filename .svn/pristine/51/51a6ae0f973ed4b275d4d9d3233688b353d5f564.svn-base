//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Showroom.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsTrBermasalah")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsTrBermasalah : global::System.Data.DataSet {
        
        private AdjustmentDataTable tableAdjustment;
        
        private TarikanDataTable tableTarikan;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsTrBermasalah() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsTrBermasalah(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Adjustment"] != null)) {
                    base.Tables.Add(new AdjustmentDataTable(ds.Tables["Adjustment"]));
                }
                if ((ds.Tables["Tarikan"] != null)) {
                    base.Tables.Add(new TarikanDataTable(ds.Tables["Tarikan"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdjustmentDataTable Adjustment {
            get {
                return this.tableAdjustment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TarikanDataTable Tarikan {
            get {
                return this.tableTarikan;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsTrBermasalah cln = ((dsTrBermasalah)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Adjustment"] != null)) {
                    base.Tables.Add(new AdjustmentDataTable(ds.Tables["Adjustment"]));
                }
                if ((ds.Tables["Tarikan"] != null)) {
                    base.Tables.Add(new TarikanDataTable(ds.Tables["Tarikan"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAdjustment = ((AdjustmentDataTable)(base.Tables["Adjustment"]));
            if ((initTable == true)) {
                if ((this.tableAdjustment != null)) {
                    this.tableAdjustment.InitVars();
                }
            }
            this.tableTarikan = ((TarikanDataTable)(base.Tables["Tarikan"]));
            if ((initTable == true)) {
                if ((this.tableTarikan != null)) {
                    this.tableTarikan.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsTrBermasalah";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsTrBermasalah.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAdjustment = new AdjustmentDataTable();
            base.Tables.Add(this.tableAdjustment);
            this.tableTarikan = new TarikanDataTable();
            base.Tables.Add(this.tableTarikan);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAdjustment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTarikan() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsTrBermasalah ds = new dsTrBermasalah();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AdjustmentRowChangeEventHandler(object sender, AdjustmentRowChangeEvent e);
        
        public delegate void TarikanRowChangeEventHandler(object sender, TarikanRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdjustmentDataTable : global::System.Data.TypedTableBase<AdjustmentRow> {
            
            private global::System.Data.DataColumn columnNoAR;
            
            private global::System.Data.DataColumn columnNoKontrak;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnUMNota;
            
            private global::System.Data.DataColumn columnUMBayar;
            
            private global::System.Data.DataColumn columnSisaUangMuka;
            
            private global::System.Data.DataColumn columnBiayaADM;
            
            private global::System.Data.DataColumn columnPokokHutang;
            
            private global::System.Data.DataColumn columnNominalAngsuran;
            
            private global::System.Data.DataColumn columnSisaPiutang;
            
            private global::System.Data.DataColumn columnAdjustment;
            
            private global::System.Data.DataColumn columnSisaP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdjustmentDataTable() {
                this.TableName = "Adjustment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AdjustmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AdjustmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoARColumn {
                get {
                    return this.columnNoAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoKontrakColumn {
                get {
                    return this.columnNoKontrak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMNotaColumn {
                get {
                    return this.columnUMNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMBayarColumn {
                get {
                    return this.columnUMBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SisaUangMukaColumn {
                get {
                    return this.columnSisaUangMuka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BiayaADMColumn {
                get {
                    return this.columnBiayaADM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PokokHutangColumn {
                get {
                    return this.columnPokokHutang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalAngsuranColumn {
                get {
                    return this.columnNominalAngsuran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SisaPiutangColumn {
                get {
                    return this.columnSisaPiutang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustmentColumn {
                get {
                    return this.columnAdjustment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SisaPColumn {
                get {
                    return this.columnSisaP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdjustmentRow this[int index] {
                get {
                    return ((AdjustmentRow)(this.Rows[index]));
                }
            }
            
            public event AdjustmentRowChangeEventHandler AdjustmentRowChanging;
            
            public event AdjustmentRowChangeEventHandler AdjustmentRowChanged;
            
            public event AdjustmentRowChangeEventHandler AdjustmentRowDeleting;
            
            public event AdjustmentRowChangeEventHandler AdjustmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAdjustmentRow(AdjustmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdjustmentRow AddAdjustmentRow(string NoAR, string NoKontrak, string Customer, decimal UMNota, decimal UMBayar, decimal SisaUangMuka, decimal BiayaADM, decimal PokokHutang, decimal NominalAngsuran, decimal SisaPiutang, decimal Adjustment, decimal SisaP) {
                AdjustmentRow rowAdjustmentRow = ((AdjustmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NoAR,
                        NoKontrak,
                        Customer,
                        UMNota,
                        UMBayar,
                        SisaUangMuka,
                        BiayaADM,
                        PokokHutang,
                        NominalAngsuran,
                        SisaPiutang,
                        Adjustment,
                        SisaP};
                rowAdjustmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdjustmentRow);
                return rowAdjustmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AdjustmentDataTable cln = ((AdjustmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdjustmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNoAR = base.Columns["NoAR"];
                this.columnNoKontrak = base.Columns["NoKontrak"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnUMNota = base.Columns["UMNota"];
                this.columnUMBayar = base.Columns["UMBayar"];
                this.columnSisaUangMuka = base.Columns["SisaUangMuka"];
                this.columnBiayaADM = base.Columns["BiayaADM"];
                this.columnPokokHutang = base.Columns["PokokHutang"];
                this.columnNominalAngsuran = base.Columns["NominalAngsuran"];
                this.columnSisaPiutang = base.Columns["SisaPiutang"];
                this.columnAdjustment = base.Columns["Adjustment"];
                this.columnSisaP = base.Columns["SisaP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNoAR = new global::System.Data.DataColumn("NoAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoAR);
                this.columnNoKontrak = new global::System.Data.DataColumn("NoKontrak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoKontrak);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnUMNota = new global::System.Data.DataColumn("UMNota", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMNota);
                this.columnUMBayar = new global::System.Data.DataColumn("UMBayar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMBayar);
                this.columnSisaUangMuka = new global::System.Data.DataColumn("SisaUangMuka", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSisaUangMuka);
                this.columnBiayaADM = new global::System.Data.DataColumn("BiayaADM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiayaADM);
                this.columnPokokHutang = new global::System.Data.DataColumn("PokokHutang", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPokokHutang);
                this.columnNominalAngsuran = new global::System.Data.DataColumn("NominalAngsuran", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalAngsuran);
                this.columnSisaPiutang = new global::System.Data.DataColumn("SisaPiutang", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSisaPiutang);
                this.columnAdjustment = new global::System.Data.DataColumn("Adjustment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustment);
                this.columnSisaP = new global::System.Data.DataColumn("SisaP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSisaP);
                this.columnNoAR.AllowDBNull = false;
                this.columnNoAR.MaxLength = 7;
                this.columnNoKontrak.AllowDBNull = false;
                this.columnNoKontrak.MaxLength = 20;
                this.columnCustomer.MaxLength = 255;
                this.columnUMNota.AllowDBNull = false;
                this.columnUMBayar.AllowDBNull = false;
                this.columnSisaUangMuka.ReadOnly = true;
                this.columnBiayaADM.AllowDBNull = false;
                this.columnPokokHutang.AllowDBNull = false;
                this.columnNominalAngsuran.ReadOnly = true;
                this.columnSisaPiutang.ReadOnly = true;
                this.columnAdjustment.AllowDBNull = false;
                this.columnSisaP.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdjustmentRow NewAdjustmentRow() {
                return ((AdjustmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdjustmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AdjustmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdjustmentRowChanged != null)) {
                    this.AdjustmentRowChanged(this, new AdjustmentRowChangeEvent(((AdjustmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdjustmentRowChanging != null)) {
                    this.AdjustmentRowChanging(this, new AdjustmentRowChangeEvent(((AdjustmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdjustmentRowDeleted != null)) {
                    this.AdjustmentRowDeleted(this, new AdjustmentRowChangeEvent(((AdjustmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdjustmentRowDeleting != null)) {
                    this.AdjustmentRowDeleting(this, new AdjustmentRowChangeEvent(((AdjustmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAdjustmentRow(AdjustmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsTrBermasalah ds = new dsTrBermasalah();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdjustmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TarikanDataTable : global::System.Data.TypedTableBase<TarikanRow> {
            
            private global::System.Data.DataColumn columnNoAR;
            
            private global::System.Data.DataColumn columnNoKontrak;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnUMNota;
            
            private global::System.Data.DataColumn columnUMBayar;
            
            private global::System.Data.DataColumn columnUangMuka;
            
            private global::System.Data.DataColumn columnPokokHutang;
            
            private global::System.Data.DataColumn columnBiayaTarikan;
            
            private global::System.Data.DataColumn columnEstimasiJual;
            
            private global::System.Data.DataColumn columnHargaEstimasiMotor;
            
            private global::System.Data.DataColumn columnHargaRealJual;
            
            private global::System.Data.DataColumn columnEstimasiRugi;
            
            private global::System.Data.DataColumn columnRealRugi;
            
            private global::System.Data.DataColumn columnNoACC;
            
            private global::System.Data.DataColumn columnTglACC;
            
            private global::System.Data.DataColumn columnCustomer2;
            
            private global::System.Data.DataColumn columnNoAR2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TarikanDataTable() {
                this.TableName = "Tarikan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TarikanDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TarikanDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoARColumn {
                get {
                    return this.columnNoAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoKontrakColumn {
                get {
                    return this.columnNoKontrak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMNotaColumn {
                get {
                    return this.columnUMNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMBayarColumn {
                get {
                    return this.columnUMBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UangMukaColumn {
                get {
                    return this.columnUangMuka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PokokHutangColumn {
                get {
                    return this.columnPokokHutang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BiayaTarikanColumn {
                get {
                    return this.columnBiayaTarikan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimasiJualColumn {
                get {
                    return this.columnEstimasiJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaEstimasiMotorColumn {
                get {
                    return this.columnHargaEstimasiMotor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaRealJualColumn {
                get {
                    return this.columnHargaRealJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimasiRugiColumn {
                get {
                    return this.columnEstimasiRugi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RealRugiColumn {
                get {
                    return this.columnRealRugi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoACCColumn {
                get {
                    return this.columnNoACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglACCColumn {
                get {
                    return this.columnTglACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Customer2Column {
                get {
                    return this.columnCustomer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoAR2Column {
                get {
                    return this.columnNoAR2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TarikanRow this[int index] {
                get {
                    return ((TarikanRow)(this.Rows[index]));
                }
            }
            
            public event TarikanRowChangeEventHandler TarikanRowChanging;
            
            public event TarikanRowChangeEventHandler TarikanRowChanged;
            
            public event TarikanRowChangeEventHandler TarikanRowDeleting;
            
            public event TarikanRowChangeEventHandler TarikanRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTarikanRow(TarikanRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TarikanRow AddTarikanRow(
                        string NoAR, 
                        string NoKontrak, 
                        string Customer, 
                        decimal UMNota, 
                        decimal UMBayar, 
                        decimal UangMuka, 
                        decimal PokokHutang, 
                        decimal BiayaTarikan, 
                        decimal EstimasiJual, 
                        decimal HargaEstimasiMotor, 
                        decimal HargaRealJual, 
                        decimal EstimasiRugi, 
                        decimal RealRugi, 
                        string NoACC, 
                        string TglACC, 
                        string Customer2, 
                        string NoAR2) {
                TarikanRow rowTarikanRow = ((TarikanRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NoAR,
                        NoKontrak,
                        Customer,
                        UMNota,
                        UMBayar,
                        UangMuka,
                        PokokHutang,
                        BiayaTarikan,
                        EstimasiJual,
                        HargaEstimasiMotor,
                        HargaRealJual,
                        EstimasiRugi,
                        RealRugi,
                        NoACC,
                        TglACC,
                        Customer2,
                        NoAR2};
                rowTarikanRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTarikanRow);
                return rowTarikanRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TarikanDataTable cln = ((TarikanDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TarikanDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNoAR = base.Columns["NoAR"];
                this.columnNoKontrak = base.Columns["NoKontrak"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnUMNota = base.Columns["UMNota"];
                this.columnUMBayar = base.Columns["UMBayar"];
                this.columnUangMuka = base.Columns["UangMuka"];
                this.columnPokokHutang = base.Columns["PokokHutang"];
                this.columnBiayaTarikan = base.Columns["BiayaTarikan"];
                this.columnEstimasiJual = base.Columns["EstimasiJual"];
                this.columnHargaEstimasiMotor = base.Columns["HargaEstimasiMotor"];
                this.columnHargaRealJual = base.Columns["HargaRealJual"];
                this.columnEstimasiRugi = base.Columns["EstimasiRugi"];
                this.columnRealRugi = base.Columns["RealRugi"];
                this.columnNoACC = base.Columns["NoACC"];
                this.columnTglACC = base.Columns["TglACC"];
                this.columnCustomer2 = base.Columns["Customer2"];
                this.columnNoAR2 = base.Columns["NoAR2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNoAR = new global::System.Data.DataColumn("NoAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoAR);
                this.columnNoKontrak = new global::System.Data.DataColumn("NoKontrak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoKontrak);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnUMNota = new global::System.Data.DataColumn("UMNota", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMNota);
                this.columnUMBayar = new global::System.Data.DataColumn("UMBayar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMBayar);
                this.columnUangMuka = new global::System.Data.DataColumn("UangMuka", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUangMuka);
                this.columnPokokHutang = new global::System.Data.DataColumn("PokokHutang", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPokokHutang);
                this.columnBiayaTarikan = new global::System.Data.DataColumn("BiayaTarikan", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiayaTarikan);
                this.columnEstimasiJual = new global::System.Data.DataColumn("EstimasiJual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimasiJual);
                this.columnHargaEstimasiMotor = new global::System.Data.DataColumn("HargaEstimasiMotor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaEstimasiMotor);
                this.columnHargaRealJual = new global::System.Data.DataColumn("HargaRealJual", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaRealJual);
                this.columnEstimasiRugi = new global::System.Data.DataColumn("EstimasiRugi", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimasiRugi);
                this.columnRealRugi = new global::System.Data.DataColumn("RealRugi", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealRugi);
                this.columnNoACC = new global::System.Data.DataColumn("NoACC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoACC);
                this.columnTglACC = new global::System.Data.DataColumn("TglACC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglACC);
                this.columnCustomer2 = new global::System.Data.DataColumn("Customer2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer2);
                this.columnNoAR2 = new global::System.Data.DataColumn("NoAR2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoAR2);
                this.columnNoAR.AllowDBNull = false;
                this.columnNoAR.MaxLength = 7;
                this.columnNoKontrak.AllowDBNull = false;
                this.columnNoKontrak.MaxLength = 20;
                this.columnCustomer.MaxLength = 255;
                this.columnUMNota.AllowDBNull = false;
                this.columnUMBayar.AllowDBNull = false;
                this.columnUangMuka.ReadOnly = true;
                this.columnPokokHutang.AllowDBNull = false;
                this.columnBiayaTarikan.ReadOnly = true;
                this.columnEstimasiJual.ReadOnly = true;
                this.columnHargaEstimasiMotor.ReadOnly = true;
                this.columnHargaRealJual.ReadOnly = true;
                this.columnEstimasiRugi.ReadOnly = true;
                this.columnRealRugi.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TarikanRow NewTarikanRow() {
                return ((TarikanRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TarikanRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TarikanRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TarikanRowChanged != null)) {
                    this.TarikanRowChanged(this, new TarikanRowChangeEvent(((TarikanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TarikanRowChanging != null)) {
                    this.TarikanRowChanging(this, new TarikanRowChangeEvent(((TarikanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TarikanRowDeleted != null)) {
                    this.TarikanRowDeleted(this, new TarikanRowChangeEvent(((TarikanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TarikanRowDeleting != null)) {
                    this.TarikanRowDeleting(this, new TarikanRowChangeEvent(((TarikanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTarikanRow(TarikanRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsTrBermasalah ds = new dsTrBermasalah();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TarikanDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AdjustmentRow : global::System.Data.DataRow {
            
            private AdjustmentDataTable tableAdjustment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AdjustmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdjustment = ((AdjustmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoAR {
                get {
                    return ((string)(this[this.tableAdjustment.NoARColumn]));
                }
                set {
                    this[this.tableAdjustment.NoARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoKontrak {
                get {
                    return ((string)(this[this.tableAdjustment.NoKontrakColumn]));
                }
                set {
                    this[this.tableAdjustment.NoKontrakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableAdjustment.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'Adjustment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustment.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMNota {
                get {
                    return ((decimal)(this[this.tableAdjustment.UMNotaColumn]));
                }
                set {
                    this[this.tableAdjustment.UMNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMBayar {
                get {
                    return ((decimal)(this[this.tableAdjustment.UMBayarColumn]));
                }
                set {
                    this[this.tableAdjustment.UMBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SisaUangMuka {
                get {
                    try {
                        return ((decimal)(this[this.tableAdjustment.SisaUangMukaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SisaUangMuka\' in table \'Adjustment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustment.SisaUangMukaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BiayaADM {
                get {
                    return ((decimal)(this[this.tableAdjustment.BiayaADMColumn]));
                }
                set {
                    this[this.tableAdjustment.BiayaADMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PokokHutang {
                get {
                    return ((decimal)(this[this.tableAdjustment.PokokHutangColumn]));
                }
                set {
                    this[this.tableAdjustment.PokokHutangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NominalAngsuran {
                get {
                    try {
                        return ((decimal)(this[this.tableAdjustment.NominalAngsuranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalAngsuran\' in table \'Adjustment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustment.NominalAngsuranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SisaPiutang {
                get {
                    try {
                        return ((decimal)(this[this.tableAdjustment.SisaPiutangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SisaPiutang\' in table \'Adjustment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustment.SisaPiutangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Adjustment {
                get {
                    return ((decimal)(this[this.tableAdjustment.AdjustmentColumn]));
                }
                set {
                    this[this.tableAdjustment.AdjustmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SisaP {
                get {
                    try {
                        return ((decimal)(this[this.tableAdjustment.SisaPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SisaP\' in table \'Adjustment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAdjustment.SisaPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableAdjustment.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableAdjustment.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSisaUangMukaNull() {
                return this.IsNull(this.tableAdjustment.SisaUangMukaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSisaUangMukaNull() {
                this[this.tableAdjustment.SisaUangMukaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalAngsuranNull() {
                return this.IsNull(this.tableAdjustment.NominalAngsuranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalAngsuranNull() {
                this[this.tableAdjustment.NominalAngsuranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSisaPiutangNull() {
                return this.IsNull(this.tableAdjustment.SisaPiutangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSisaPiutangNull() {
                this[this.tableAdjustment.SisaPiutangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSisaPNull() {
                return this.IsNull(this.tableAdjustment.SisaPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSisaPNull() {
                this[this.tableAdjustment.SisaPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TarikanRow : global::System.Data.DataRow {
            
            private TarikanDataTable tableTarikan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TarikanRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTarikan = ((TarikanDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoAR {
                get {
                    return ((string)(this[this.tableTarikan.NoARColumn]));
                }
                set {
                    this[this.tableTarikan.NoARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoKontrak {
                get {
                    return ((string)(this[this.tableTarikan.NoKontrakColumn]));
                }
                set {
                    this[this.tableTarikan.NoKontrakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableTarikan.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMNota {
                get {
                    return ((decimal)(this[this.tableTarikan.UMNotaColumn]));
                }
                set {
                    this[this.tableTarikan.UMNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMBayar {
                get {
                    return ((decimal)(this[this.tableTarikan.UMBayarColumn]));
                }
                set {
                    this[this.tableTarikan.UMBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UangMuka {
                get {
                    try {
                        return ((decimal)(this[this.tableTarikan.UangMukaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UangMuka\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.UangMukaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PokokHutang {
                get {
                    return ((decimal)(this[this.tableTarikan.PokokHutangColumn]));
                }
                set {
                    this[this.tableTarikan.PokokHutangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BiayaTarikan {
                get {
                    try {
                        return ((decimal)(this[this.tableTarikan.BiayaTarikanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiayaTarikan\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.BiayaTarikanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EstimasiJual {
                get {
                    try {
                        return ((decimal)(this[this.tableTarikan.EstimasiJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimasiJual\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.EstimasiJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HargaEstimasiMotor {
                get {
                    try {
                        return ((decimal)(this[this.tableTarikan.HargaEstimasiMotorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaEstimasiMotor\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.HargaEstimasiMotorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HargaRealJual {
                get {
                    try {
                        return ((decimal)(this[this.tableTarikan.HargaRealJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaRealJual\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.HargaRealJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EstimasiRugi {
                get {
                    try {
                        return ((decimal)(this[this.tableTarikan.EstimasiRugiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstimasiRugi\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.EstimasiRugiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RealRugi {
                get {
                    try {
                        return ((decimal)(this[this.tableTarikan.RealRugiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealRugi\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.RealRugiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoACC {
                get {
                    try {
                        return ((string)(this[this.tableTarikan.NoACCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoACC\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.NoACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglACC {
                get {
                    try {
                        return ((string)(this[this.tableTarikan.TglACCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglACC\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.TglACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer2 {
                get {
                    try {
                        return ((string)(this[this.tableTarikan.Customer2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer2\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.Customer2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoAR2 {
                get {
                    try {
                        return ((string)(this[this.tableTarikan.NoAR2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoAR2\' in table \'Tarikan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarikan.NoAR2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableTarikan.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableTarikan.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUangMukaNull() {
                return this.IsNull(this.tableTarikan.UangMukaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUangMukaNull() {
                this[this.tableTarikan.UangMukaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBiayaTarikanNull() {
                return this.IsNull(this.tableTarikan.BiayaTarikanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBiayaTarikanNull() {
                this[this.tableTarikan.BiayaTarikanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimasiJualNull() {
                return this.IsNull(this.tableTarikan.EstimasiJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimasiJualNull() {
                this[this.tableTarikan.EstimasiJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaEstimasiMotorNull() {
                return this.IsNull(this.tableTarikan.HargaEstimasiMotorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaEstimasiMotorNull() {
                this[this.tableTarikan.HargaEstimasiMotorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaRealJualNull() {
                return this.IsNull(this.tableTarikan.HargaRealJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaRealJualNull() {
                this[this.tableTarikan.HargaRealJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimasiRugiNull() {
                return this.IsNull(this.tableTarikan.EstimasiRugiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimasiRugiNull() {
                this[this.tableTarikan.EstimasiRugiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRealRugiNull() {
                return this.IsNull(this.tableTarikan.RealRugiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRealRugiNull() {
                this[this.tableTarikan.RealRugiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoACCNull() {
                return this.IsNull(this.tableTarikan.NoACCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoACCNull() {
                this[this.tableTarikan.NoACCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglACCNull() {
                return this.IsNull(this.tableTarikan.TglACCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglACCNull() {
                this[this.tableTarikan.TglACCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomer2Null() {
                return this.IsNull(this.tableTarikan.Customer2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomer2Null() {
                this[this.tableTarikan.Customer2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoAR2Null() {
                return this.IsNull(this.tableTarikan.NoAR2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoAR2Null() {
                this[this.tableTarikan.NoAR2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AdjustmentRowChangeEvent : global::System.EventArgs {
            
            private AdjustmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdjustmentRowChangeEvent(AdjustmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AdjustmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TarikanRowChangeEvent : global::System.EventArgs {
            
            private TarikanRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TarikanRowChangeEvent(TarikanRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TarikanRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591