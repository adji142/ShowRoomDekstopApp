//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Showroom.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsHutangLainLain")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsHutangLainLain : global::System.Data.DataSet {
        
        private HLHeaderDataTable tableHLHeader;
        
        private HutangLainLainDataTable tableHutangLainLain;
        
        private HLDetailDataTable tableHLDetail;
        
        private global::System.Data.DataRelation relationHLHeader_HLDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsHutangLainLain() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsHutangLainLain(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HLHeader"] != null)) {
                    base.Tables.Add(new HLHeaderDataTable(ds.Tables["HLHeader"]));
                }
                if ((ds.Tables["HutangLainLain"] != null)) {
                    base.Tables.Add(new HutangLainLainDataTable(ds.Tables["HutangLainLain"]));
                }
                if ((ds.Tables["HLDetail"] != null)) {
                    base.Tables.Add(new HLDetailDataTable(ds.Tables["HLDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HLHeaderDataTable HLHeader {
            get {
                return this.tableHLHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HutangLainLainDataTable HutangLainLain {
            get {
                return this.tableHutangLainLain;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HLDetailDataTable HLDetail {
            get {
                return this.tableHLDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsHutangLainLain cln = ((dsHutangLainLain)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HLHeader"] != null)) {
                    base.Tables.Add(new HLHeaderDataTable(ds.Tables["HLHeader"]));
                }
                if ((ds.Tables["HutangLainLain"] != null)) {
                    base.Tables.Add(new HutangLainLainDataTable(ds.Tables["HutangLainLain"]));
                }
                if ((ds.Tables["HLDetail"] != null)) {
                    base.Tables.Add(new HLDetailDataTable(ds.Tables["HLDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHLHeader = ((HLHeaderDataTable)(base.Tables["HLHeader"]));
            if ((initTable == true)) {
                if ((this.tableHLHeader != null)) {
                    this.tableHLHeader.InitVars();
                }
            }
            this.tableHutangLainLain = ((HutangLainLainDataTable)(base.Tables["HutangLainLain"]));
            if ((initTable == true)) {
                if ((this.tableHutangLainLain != null)) {
                    this.tableHutangLainLain.InitVars();
                }
            }
            this.tableHLDetail = ((HLDetailDataTable)(base.Tables["HLDetail"]));
            if ((initTable == true)) {
                if ((this.tableHLDetail != null)) {
                    this.tableHLDetail.InitVars();
                }
            }
            this.relationHLHeader_HLDetail = this.Relations["HLHeader_HLDetail"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsHutangLainLain";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsHutangLainLain.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHLHeader = new HLHeaderDataTable();
            base.Tables.Add(this.tableHLHeader);
            this.tableHutangLainLain = new HutangLainLainDataTable();
            base.Tables.Add(this.tableHutangLainLain);
            this.tableHLDetail = new HLDetailDataTable();
            base.Tables.Add(this.tableHLDetail);
            this.relationHLHeader_HLDetail = new global::System.Data.DataRelation("HLHeader_HLDetail", new global::System.Data.DataColumn[] {
                        this.tableHLHeader.RowIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableHLDetail.HeaderRowIDColumn}, false);
            this.Relations.Add(this.relationHLHeader_HLDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHLHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHutangLainLain() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHLDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsHutangLainLain ds = new dsHutangLainLain();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HLHeaderRowChangeEventHandler(object sender, HLHeaderRowChangeEvent e);
        
        public delegate void HutangLainLainRowChangeEventHandler(object sender, HutangLainLainRowChangeEvent e);
        
        public delegate void HLDetailRowChangeEventHandler(object sender, HLDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HLHeaderDataTable : global::System.Data.TypedTableBase<HLHeaderRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnGroupRowID;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnTipeNota;
            
            private global::System.Data.DataColumn columnCTipeNota;
            
            private global::System.Data.DataColumn columnPerusahaanDariRowID;
            
            private global::System.Data.DataColumn columnPerusahaankeRowID;
            
            private global::System.Data.DataColumn columnInitPT;
            
            private global::System.Data.DataColumn columnCabangDariID;
            
            private global::System.Data.DataColumn columnCabangKeID;
            
            private global::System.Data.DataColumn columnKelompokTransaksiRowID;
            
            private global::System.Data.DataColumn columnKelompokTransaksi;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnTanggalRequest;
            
            private global::System.Data.DataColumn columnNoRequest;
            
            private global::System.Data.DataColumn columnSrc;
            
            private global::System.Data.DataColumn columnSyncFlag;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedTime;
            
            private global::System.Data.DataColumn columnBranchTo;
            
            private global::System.Data.DataColumn columnCompanyTo;
            
            private global::System.Data.DataColumn columnDestinyPT;
            
            private global::System.Data.DataColumn columnRpKredit;
            
            private global::System.Data.DataColumn columnSaldo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLHeaderDataTable() {
                this.TableName = "HLHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HLHeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HLHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupRowIDColumn {
                get {
                    return this.columnGroupRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipeNotaColumn {
                get {
                    return this.columnTipeNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTipeNotaColumn {
                get {
                    return this.columnCTipeNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerusahaanDariRowIDColumn {
                get {
                    return this.columnPerusahaanDariRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerusahaankeRowIDColumn {
                get {
                    return this.columnPerusahaankeRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InitPTColumn {
                get {
                    return this.columnInitPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangDariIDColumn {
                get {
                    return this.columnCabangDariID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangKeIDColumn {
                get {
                    return this.columnCabangKeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KelompokTransaksiRowIDColumn {
                get {
                    return this.columnKelompokTransaksiRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KelompokTransaksiColumn {
                get {
                    return this.columnKelompokTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalRequestColumn {
                get {
                    return this.columnTanggalRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoRequestColumn {
                get {
                    return this.columnNoRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrcColumn {
                get {
                    return this.columnSrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SyncFlagColumn {
                get {
                    return this.columnSyncFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedTimeColumn {
                get {
                    return this.columnLastUpdatedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchToColumn {
                get {
                    return this.columnBranchTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyToColumn {
                get {
                    return this.columnCompanyTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinyPTColumn {
                get {
                    return this.columnDestinyPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpKreditColumn {
                get {
                    return this.columnRpKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLHeaderRow this[int index] {
                get {
                    return ((HLHeaderRow)(this.Rows[index]));
                }
            }
            
            public event HLHeaderRowChangeEventHandler HLHeaderRowChanging;
            
            public event HLHeaderRowChangeEventHandler HLHeaderRowChanged;
            
            public event HLHeaderRowChangeEventHandler HLHeaderRowDeleting;
            
            public event HLHeaderRowChangeEventHandler HLHeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHLHeaderRow(HLHeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLHeaderRow AddHLHeaderRow(
                        string RowID, 
                        string GroupRowID, 
                        string NoBukti, 
                        string Tanggal, 
                        string TipeNota, 
                        string CTipeNota, 
                        string PerusahaanDariRowID, 
                        string PerusahaankeRowID, 
                        string InitPT, 
                        string CabangDariID, 
                        string CabangKeID, 
                        string KelompokTransaksiRowID, 
                        string KelompokTransaksi, 
                        string Nominal, 
                        string TanggalRequest, 
                        string NoRequest, 
                        string Src, 
                        string SyncFlag, 
                        string LastUpdatedBy, 
                        string LastUpdatedTime, 
                        string BranchTo, 
                        string CompanyTo, 
                        string DestinyPT, 
                        string RpKredit, 
                        string Saldo) {
                HLHeaderRow rowHLHeaderRow = ((HLHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        GroupRowID,
                        NoBukti,
                        Tanggal,
                        TipeNota,
                        CTipeNota,
                        PerusahaanDariRowID,
                        PerusahaankeRowID,
                        InitPT,
                        CabangDariID,
                        CabangKeID,
                        KelompokTransaksiRowID,
                        KelompokTransaksi,
                        Nominal,
                        TanggalRequest,
                        NoRequest,
                        Src,
                        SyncFlag,
                        LastUpdatedBy,
                        LastUpdatedTime,
                        BranchTo,
                        CompanyTo,
                        DestinyPT,
                        RpKredit,
                        Saldo};
                rowHLHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHLHeaderRow);
                return rowHLHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HLHeaderDataTable cln = ((HLHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HLHeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnGroupRowID = base.Columns["GroupRowID"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnTipeNota = base.Columns["TipeNota"];
                this.columnCTipeNota = base.Columns["CTipeNota"];
                this.columnPerusahaanDariRowID = base.Columns["PerusahaanDariRowID"];
                this.columnPerusahaankeRowID = base.Columns["PerusahaankeRowID"];
                this.columnInitPT = base.Columns["InitPT"];
                this.columnCabangDariID = base.Columns["CabangDariID"];
                this.columnCabangKeID = base.Columns["CabangKeID"];
                this.columnKelompokTransaksiRowID = base.Columns["KelompokTransaksiRowID"];
                this.columnKelompokTransaksi = base.Columns["KelompokTransaksi"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnTanggalRequest = base.Columns["TanggalRequest"];
                this.columnNoRequest = base.Columns["NoRequest"];
                this.columnSrc = base.Columns["Src"];
                this.columnSyncFlag = base.Columns["SyncFlag"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedTime = base.Columns["LastUpdatedTime"];
                this.columnBranchTo = base.Columns["BranchTo"];
                this.columnCompanyTo = base.Columns["CompanyTo"];
                this.columnDestinyPT = base.Columns["DestinyPT"];
                this.columnRpKredit = base.Columns["RpKredit"];
                this.columnSaldo = base.Columns["Saldo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnGroupRowID = new global::System.Data.DataColumn("GroupRowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupRowID);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnTipeNota = new global::System.Data.DataColumn("TipeNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipeNota);
                this.columnCTipeNota = new global::System.Data.DataColumn("CTipeNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTipeNota);
                this.columnPerusahaanDariRowID = new global::System.Data.DataColumn("PerusahaanDariRowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerusahaanDariRowID);
                this.columnPerusahaankeRowID = new global::System.Data.DataColumn("PerusahaankeRowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerusahaankeRowID);
                this.columnInitPT = new global::System.Data.DataColumn("InitPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitPT);
                this.columnCabangDariID = new global::System.Data.DataColumn("CabangDariID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangDariID);
                this.columnCabangKeID = new global::System.Data.DataColumn("CabangKeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangKeID);
                this.columnKelompokTransaksiRowID = new global::System.Data.DataColumn("KelompokTransaksiRowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKelompokTransaksiRowID);
                this.columnKelompokTransaksi = new global::System.Data.DataColumn("KelompokTransaksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKelompokTransaksi);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnTanggalRequest = new global::System.Data.DataColumn("TanggalRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalRequest);
                this.columnNoRequest = new global::System.Data.DataColumn("NoRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoRequest);
                this.columnSrc = new global::System.Data.DataColumn("Src", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrc);
                this.columnSyncFlag = new global::System.Data.DataColumn("SyncFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSyncFlag);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedTime = new global::System.Data.DataColumn("LastUpdatedTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedTime);
                this.columnBranchTo = new global::System.Data.DataColumn("BranchTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchTo);
                this.columnCompanyTo = new global::System.Data.DataColumn("CompanyTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyTo);
                this.columnDestinyPT = new global::System.Data.DataColumn("DestinyPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinyPT);
                this.columnRpKredit = new global::System.Data.DataColumn("RpKredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpKredit);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLHeaderRow NewHLHeaderRow() {
                return ((HLHeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HLHeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HLHeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HLHeaderRowChanged != null)) {
                    this.HLHeaderRowChanged(this, new HLHeaderRowChangeEvent(((HLHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HLHeaderRowChanging != null)) {
                    this.HLHeaderRowChanging(this, new HLHeaderRowChangeEvent(((HLHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HLHeaderRowDeleted != null)) {
                    this.HLHeaderRowDeleted(this, new HLHeaderRowChangeEvent(((HLHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HLHeaderRowDeleting != null)) {
                    this.HLHeaderRowDeleting(this, new HLHeaderRowChangeEvent(((HLHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHLHeaderRow(HLHeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHutangLainLain ds = new dsHutangLainLain();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HLHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HutangLainLainDataTable : global::System.Data.TypedTableBase<HutangLainLainRow> {
            
            private global::System.Data.DataColumn columnJudul;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnCabangKeID;
            
            private global::System.Data.DataColumn columnNoRequest;
            
            private global::System.Data.DataColumn columnTanggalRequest;
            
            private global::System.Data.DataColumn columnNoPerkiraan;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnHeaderRowID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HutangLainLainDataTable() {
                this.TableName = "HutangLainLain";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HutangLainLainDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HutangLainLainDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JudulColumn {
                get {
                    return this.columnJudul;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangKeIDColumn {
                get {
                    return this.columnCabangKeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoRequestColumn {
                get {
                    return this.columnNoRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalRequestColumn {
                get {
                    return this.columnTanggalRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoPerkiraanColumn {
                get {
                    return this.columnNoPerkiraan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderRowIDColumn {
                get {
                    return this.columnHeaderRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HutangLainLainRow this[int index] {
                get {
                    return ((HutangLainLainRow)(this.Rows[index]));
                }
            }
            
            public event HutangLainLainRowChangeEventHandler HutangLainLainRowChanging;
            
            public event HutangLainLainRowChangeEventHandler HutangLainLainRowChanged;
            
            public event HutangLainLainRowChangeEventHandler HutangLainLainRowDeleting;
            
            public event HutangLainLainRowChangeEventHandler HutangLainLainRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHutangLainLainRow(HutangLainLainRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HutangLainLainRow AddHutangLainLainRow(string Judul, string Tanggal, string NoBukti, string CabangKeID, string NoRequest, string TanggalRequest, string NoPerkiraan, string Uraian, string Nominal, string HeaderRowID) {
                HutangLainLainRow rowHutangLainLainRow = ((HutangLainLainRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Judul,
                        Tanggal,
                        NoBukti,
                        CabangKeID,
                        NoRequest,
                        TanggalRequest,
                        NoPerkiraan,
                        Uraian,
                        Nominal,
                        HeaderRowID};
                rowHutangLainLainRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHutangLainLainRow);
                return rowHutangLainLainRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HutangLainLainDataTable cln = ((HutangLainLainDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HutangLainLainDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJudul = base.Columns["Judul"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnCabangKeID = base.Columns["CabangKeID"];
                this.columnNoRequest = base.Columns["NoRequest"];
                this.columnTanggalRequest = base.Columns["TanggalRequest"];
                this.columnNoPerkiraan = base.Columns["NoPerkiraan"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnHeaderRowID = base.Columns["HeaderRowID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJudul = new global::System.Data.DataColumn("Judul", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJudul);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnCabangKeID = new global::System.Data.DataColumn("CabangKeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangKeID);
                this.columnNoRequest = new global::System.Data.DataColumn("NoRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoRequest);
                this.columnTanggalRequest = new global::System.Data.DataColumn("TanggalRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalRequest);
                this.columnNoPerkiraan = new global::System.Data.DataColumn("NoPerkiraan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoPerkiraan);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnHeaderRowID = new global::System.Data.DataColumn("HeaderRowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderRowID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HutangLainLainRow NewHutangLainLainRow() {
                return ((HutangLainLainRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HutangLainLainRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HutangLainLainRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HutangLainLainRowChanged != null)) {
                    this.HutangLainLainRowChanged(this, new HutangLainLainRowChangeEvent(((HutangLainLainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HutangLainLainRowChanging != null)) {
                    this.HutangLainLainRowChanging(this, new HutangLainLainRowChangeEvent(((HutangLainLainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HutangLainLainRowDeleted != null)) {
                    this.HutangLainLainRowDeleted(this, new HutangLainLainRowChangeEvent(((HutangLainLainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HutangLainLainRowDeleting != null)) {
                    this.HutangLainLainRowDeleting(this, new HutangLainLainRowChangeEvent(((HutangLainLainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHutangLainLainRow(HutangLainLainRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHutangLainLain ds = new dsHutangLainLain();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HutangLainLainDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HLDetailDataTable : global::System.Data.TypedTableBase<HLDetailRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnHeaderRowID;
            
            private global::System.Data.DataColumn columnNoPerkiraan;
            
            private global::System.Data.DataColumn columnMataUangRowID;
            
            private global::System.Data.DataColumn columnReferensi;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnNominalRp;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLDetailDataTable() {
                this.TableName = "HLDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HLDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HLDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderRowIDColumn {
                get {
                    return this.columnHeaderRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoPerkiraanColumn {
                get {
                    return this.columnNoPerkiraan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangRowIDColumn {
                get {
                    return this.columnMataUangRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferensiColumn {
                get {
                    return this.columnReferensi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalRpColumn {
                get {
                    return this.columnNominalRp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLDetailRow this[int index] {
                get {
                    return ((HLDetailRow)(this.Rows[index]));
                }
            }
            
            public event HLDetailRowChangeEventHandler HLDetailRowChanging;
            
            public event HLDetailRowChangeEventHandler HLDetailRowChanged;
            
            public event HLDetailRowChangeEventHandler HLDetailRowDeleting;
            
            public event HLDetailRowChangeEventHandler HLDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHLDetailRow(HLDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLDetailRow AddHLDetailRow(string RowID, HLHeaderRow parentHLHeaderRowByHLHeader_HLDetail, string NoPerkiraan, string MataUangRowID, string Referensi, string Nominal, string NominalRp, string Uraian, string NoBukti) {
                HLDetailRow rowHLDetailRow = ((HLDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        null,
                        NoPerkiraan,
                        MataUangRowID,
                        Referensi,
                        Nominal,
                        NominalRp,
                        Uraian,
                        NoBukti};
                if ((parentHLHeaderRowByHLHeader_HLDetail != null)) {
                    columnValuesArray[1] = parentHLHeaderRowByHLHeader_HLDetail[0];
                }
                rowHLDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHLDetailRow);
                return rowHLDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HLDetailDataTable cln = ((HLDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HLDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnHeaderRowID = base.Columns["HeaderRowID"];
                this.columnNoPerkiraan = base.Columns["NoPerkiraan"];
                this.columnMataUangRowID = base.Columns["MataUangRowID"];
                this.columnReferensi = base.Columns["Referensi"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnNominalRp = base.Columns["NominalRp"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnNoBukti = base.Columns["NoBukti"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnHeaderRowID = new global::System.Data.DataColumn("HeaderRowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderRowID);
                this.columnNoPerkiraan = new global::System.Data.DataColumn("NoPerkiraan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoPerkiraan);
                this.columnMataUangRowID = new global::System.Data.DataColumn("MataUangRowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangRowID);
                this.columnReferensi = new global::System.Data.DataColumn("Referensi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferensi);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnNominalRp = new global::System.Data.DataColumn("NominalRp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalRp);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLDetailRow NewHLDetailRow() {
                return ((HLDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HLDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HLDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HLDetailRowChanged != null)) {
                    this.HLDetailRowChanged(this, new HLDetailRowChangeEvent(((HLDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HLDetailRowChanging != null)) {
                    this.HLDetailRowChanging(this, new HLDetailRowChangeEvent(((HLDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HLDetailRowDeleted != null)) {
                    this.HLDetailRowDeleted(this, new HLDetailRowChangeEvent(((HLDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HLDetailRowDeleting != null)) {
                    this.HLDetailRowDeleting(this, new HLDetailRowChangeEvent(((HLDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHLDetailRow(HLDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHutangLainLain ds = new dsHutangLainLain();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HLDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HLHeaderRow : global::System.Data.DataRow {
            
            private HLHeaderDataTable tableHLHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HLHeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHLHeader = ((HLHeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowID {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.RowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupRowID {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.GroupRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupRowID\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.GroupRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipeNota {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.TipeNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipeNota\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.TipeNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTipeNota {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.CTipeNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTipeNota\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.CTipeNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PerusahaanDariRowID {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.PerusahaanDariRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerusahaanDariRowID\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.PerusahaanDariRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PerusahaankeRowID {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.PerusahaankeRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerusahaankeRowID\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.PerusahaankeRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InitPT {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.InitPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitPT\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.InitPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangDariID {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.CabangDariIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangDariID\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.CabangDariIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangKeID {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.CabangKeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangKeID\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.CabangKeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KelompokTransaksiRowID {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.KelompokTransaksiRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KelompokTransaksiRowID\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.KelompokTransaksiRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KelompokTransaksi {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.KelompokTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KelompokTransaksi\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.KelompokTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TanggalRequest {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.TanggalRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalRequest\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.TanggalRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoRequest {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.NoRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoRequest\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.NoRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Src {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.SrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Src\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.SrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SyncFlag {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.SyncFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SyncFlag\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.SyncFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastUpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.LastUpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedBy\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastUpdatedTime {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.LastUpdatedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedTime\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.LastUpdatedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchTo {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.BranchToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchTo\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.BranchToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyTo {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.CompanyToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyTo\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.CompanyToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinyPT {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.DestinyPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinyPT\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.DestinyPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpKredit {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.RpKreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpKredit\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.RpKreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Saldo {
                get {
                    try {
                        return ((string)(this[this.tableHLHeader.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Saldo\' in table \'HLHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLHeader.SaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowIDNull() {
                return this.IsNull(this.tableHLHeader.RowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowIDNull() {
                this[this.tableHLHeader.RowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupRowIDNull() {
                return this.IsNull(this.tableHLHeader.GroupRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupRowIDNull() {
                this[this.tableHLHeader.GroupRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableHLHeader.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableHLHeader.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableHLHeader.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableHLHeader.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipeNotaNull() {
                return this.IsNull(this.tableHLHeader.TipeNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipeNotaNull() {
                this[this.tableHLHeader.TipeNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTipeNotaNull() {
                return this.IsNull(this.tableHLHeader.CTipeNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTipeNotaNull() {
                this[this.tableHLHeader.CTipeNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerusahaanDariRowIDNull() {
                return this.IsNull(this.tableHLHeader.PerusahaanDariRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerusahaanDariRowIDNull() {
                this[this.tableHLHeader.PerusahaanDariRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerusahaankeRowIDNull() {
                return this.IsNull(this.tableHLHeader.PerusahaankeRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerusahaankeRowIDNull() {
                this[this.tableHLHeader.PerusahaankeRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInitPTNull() {
                return this.IsNull(this.tableHLHeader.InitPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInitPTNull() {
                this[this.tableHLHeader.InitPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangDariIDNull() {
                return this.IsNull(this.tableHLHeader.CabangDariIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangDariIDNull() {
                this[this.tableHLHeader.CabangDariIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangKeIDNull() {
                return this.IsNull(this.tableHLHeader.CabangKeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangKeIDNull() {
                this[this.tableHLHeader.CabangKeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKelompokTransaksiRowIDNull() {
                return this.IsNull(this.tableHLHeader.KelompokTransaksiRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKelompokTransaksiRowIDNull() {
                this[this.tableHLHeader.KelompokTransaksiRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKelompokTransaksiNull() {
                return this.IsNull(this.tableHLHeader.KelompokTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKelompokTransaksiNull() {
                this[this.tableHLHeader.KelompokTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableHLHeader.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableHLHeader.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalRequestNull() {
                return this.IsNull(this.tableHLHeader.TanggalRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalRequestNull() {
                this[this.tableHLHeader.TanggalRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoRequestNull() {
                return this.IsNull(this.tableHLHeader.NoRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoRequestNull() {
                this[this.tableHLHeader.NoRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrcNull() {
                return this.IsNull(this.tableHLHeader.SrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrcNull() {
                this[this.tableHLHeader.SrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSyncFlagNull() {
                return this.IsNull(this.tableHLHeader.SyncFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSyncFlagNull() {
                this[this.tableHLHeader.SyncFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedByNull() {
                return this.IsNull(this.tableHLHeader.LastUpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedByNull() {
                this[this.tableHLHeader.LastUpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedTimeNull() {
                return this.IsNull(this.tableHLHeader.LastUpdatedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedTimeNull() {
                this[this.tableHLHeader.LastUpdatedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchToNull() {
                return this.IsNull(this.tableHLHeader.BranchToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchToNull() {
                this[this.tableHLHeader.BranchToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyToNull() {
                return this.IsNull(this.tableHLHeader.CompanyToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyToNull() {
                this[this.tableHLHeader.CompanyToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinyPTNull() {
                return this.IsNull(this.tableHLHeader.DestinyPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinyPTNull() {
                this[this.tableHLHeader.DestinyPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpKreditNull() {
                return this.IsNull(this.tableHLHeader.RpKreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpKreditNull() {
                this[this.tableHLHeader.RpKreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.tableHLHeader.SaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.tableHLHeader.SaldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLDetailRow[] GetHLDetailRows() {
                if ((this.Table.ChildRelations["HLHeader_HLDetail"] == null)) {
                    return new HLDetailRow[0];
                }
                else {
                    return ((HLDetailRow[])(base.GetChildRows(this.Table.ChildRelations["HLHeader_HLDetail"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HutangLainLainRow : global::System.Data.DataRow {
            
            private HutangLainLainDataTable tableHutangLainLain;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HutangLainLainRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHutangLainLain = ((HutangLainLainDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Judul {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.JudulColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Judul\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.JudulColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangKeID {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.CabangKeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangKeID\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.CabangKeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoRequest {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.NoRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoRequest\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.NoRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TanggalRequest {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.TanggalRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalRequest\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.TanggalRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoPerkiraan {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.NoPerkiraanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoPerkiraan\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.NoPerkiraanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderRowID {
                get {
                    try {
                        return ((string)(this[this.tableHutangLainLain.HeaderRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderRowID\' in table \'HutangLainLain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHutangLainLain.HeaderRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJudulNull() {
                return this.IsNull(this.tableHutangLainLain.JudulColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJudulNull() {
                this[this.tableHutangLainLain.JudulColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableHutangLainLain.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableHutangLainLain.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableHutangLainLain.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableHutangLainLain.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangKeIDNull() {
                return this.IsNull(this.tableHutangLainLain.CabangKeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangKeIDNull() {
                this[this.tableHutangLainLain.CabangKeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoRequestNull() {
                return this.IsNull(this.tableHutangLainLain.NoRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoRequestNull() {
                this[this.tableHutangLainLain.NoRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalRequestNull() {
                return this.IsNull(this.tableHutangLainLain.TanggalRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalRequestNull() {
                this[this.tableHutangLainLain.TanggalRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoPerkiraanNull() {
                return this.IsNull(this.tableHutangLainLain.NoPerkiraanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoPerkiraanNull() {
                this[this.tableHutangLainLain.NoPerkiraanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableHutangLainLain.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableHutangLainLain.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableHutangLainLain.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableHutangLainLain.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderRowIDNull() {
                return this.IsNull(this.tableHutangLainLain.HeaderRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderRowIDNull() {
                this[this.tableHutangLainLain.HeaderRowIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HLDetailRow : global::System.Data.DataRow {
            
            private HLDetailDataTable tableHLDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HLDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHLDetail = ((HLDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowID {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.RowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderRowID {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.HeaderRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderRowID\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.HeaderRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoPerkiraan {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.NoPerkiraanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoPerkiraan\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.NoPerkiraanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MataUangRowID {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.MataUangRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MataUangRowID\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.MataUangRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Referensi {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.ReferensiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Referensi\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.ReferensiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NominalRp {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.NominalRpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalRp\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.NominalRpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableHLDetail.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'HLDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHLDetail.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLHeaderRow HLHeaderRow {
                get {
                    return ((HLHeaderRow)(this.GetParentRow(this.Table.ParentRelations["HLHeader_HLDetail"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["HLHeader_HLDetail"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowIDNull() {
                return this.IsNull(this.tableHLDetail.RowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowIDNull() {
                this[this.tableHLDetail.RowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderRowIDNull() {
                return this.IsNull(this.tableHLDetail.HeaderRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderRowIDNull() {
                this[this.tableHLDetail.HeaderRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoPerkiraanNull() {
                return this.IsNull(this.tableHLDetail.NoPerkiraanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoPerkiraanNull() {
                this[this.tableHLDetail.NoPerkiraanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMataUangRowIDNull() {
                return this.IsNull(this.tableHLDetail.MataUangRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMataUangRowIDNull() {
                this[this.tableHLDetail.MataUangRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferensiNull() {
                return this.IsNull(this.tableHLDetail.ReferensiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferensiNull() {
                this[this.tableHLDetail.ReferensiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableHLDetail.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableHLDetail.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalRpNull() {
                return this.IsNull(this.tableHLDetail.NominalRpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalRpNull() {
                this[this.tableHLDetail.NominalRpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableHLDetail.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableHLDetail.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableHLDetail.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableHLDetail.NoBuktiColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HLHeaderRowChangeEvent : global::System.EventArgs {
            
            private HLHeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLHeaderRowChangeEvent(HLHeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLHeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HutangLainLainRowChangeEvent : global::System.EventArgs {
            
            private HutangLainLainRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HutangLainLainRowChangeEvent(HutangLainLainRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HutangLainLainRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HLDetailRowChangeEvent : global::System.EventArgs {
            
            private HLDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLDetailRowChangeEvent(HLDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HLDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591