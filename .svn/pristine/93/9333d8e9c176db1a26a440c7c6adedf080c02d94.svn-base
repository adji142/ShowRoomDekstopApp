using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using System.Windows.Forms;
using ISA.DAL;
using ISA.Common;
using System.Data.SqlTypes;
using ISA.Showroom.Finance.BLL;
//using System.Data.DataSetExtensions;

namespace ISA.Showroom.Finance.Class
{
    class Journal
    {

        public static DataTable GetHeader(Database db, Guid rowID, Guid perusahaanRowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Journal_LIST"));

            db.Commands[0].Parameters.Add(new Parameter("@rowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, perusahaanRowID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable GetHeader_dv(Database db, Guid rowID, Guid perusahaanRowID, string cabang)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Journal_LIST_dv"));

            db.Commands[0].Parameters.Add(new Parameter("@rowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, perusahaanRowID));
            db.Commands[0].Parameters.Add(new Parameter("@table", SqlDbType.VarChar, cabang));
            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable ListDetail_dv(Database db, Guid headerID,string cabang)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_LIST_dv"));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            db.Commands[0].Parameters.Add(new Parameter("@table", SqlDbType.VarChar, cabang));
            return db.Commands[0].ExecuteDataTable();
        }
        
        public static DataTable ListHeader(Database db, DateTime fromDate, DateTime toDate)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Journal_LIST_ByTanggal"));

            db.Commands[0].Parameters.Add(new Parameter("@fromDate", SqlDbType.DateTime, fromDate));
            db.Commands[0].Parameters.Add(new Parameter("@toDate", SqlDbType.DateTime, toDate));
            db.Commands[0].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, GlobalVar.PerusahaanRowID));

            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable ListHeaderbyCabang(Database db, DateTime fromDate, DateTime toDate, string Tabel)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Journal_LIST_ByCabang_dv"));

            db.Commands[0].Parameters.Add(new Parameter("@fromDate", SqlDbType.DateTime, fromDate));
            db.Commands[0].Parameters.Add(new Parameter("@toDate", SqlDbType.DateTime, toDate));
            db.Commands[0].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, GlobalVar.PerusahaanRowID));
            db.Commands[0].Parameters.Add(new Parameter("@TabelHeader", SqlDbType.VarChar, Tabel));

            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable GetDetail(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable ListDetail(Database db, Guid headerID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable ListDetailbyCabang(Database db, Guid headerID, string Tabel)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_LIST_byCabang_dv"));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            db.Commands[0].Parameters.Add(new Parameter("@TabelHeader", SqlDbType.VarChar, Tabel));
            return db.Commands[0].ExecuteDataTable();
        }

        public static int AddHeader(Database db, Guid perusahaanRowID, Guid rowID, string recordID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool syncFlag)
        {
            int result = 0;
            try
            {
                db.Commands.Clear();
                db.Commands.Add(db.CreateCommand("usp_Journal_INSERT"));
                db.Commands[0].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, perusahaanRowID));
                db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
                db.Commands[0].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, tanggal));
                db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noReff));
                db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
                db.Commands[0].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, src));
                db.Commands[0].Parameters.Add(new Parameter("@KodeGudang", SqlDbType.VarChar, kodeGudang));
                db.Commands[0].Parameters.Add(new Parameter("@SyncFlag", SqlDbType.Bit, syncFlag));
                db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

                db.Commands[0].ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                result = 999;
            }
            return result;
        }

        public static int AddDetail_dv(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double nominalOri, string cabang)
        {
            return AddDetail_dv(db, rowID, headerID, recordID, hrecordID, noPerkiraan, uraian, debet, kredit, dk, MataUangRowId, nominalOri, null, cabang);
        }

        public static int AddDetail_dv(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double NominalOri, string noreff, string cabang)
        {
            int result = 0;
            try
            {
                if ((MataUangRowId == null) || (MataUangRowId == Guid.Empty)) NominalOri = Math.Abs(debet - kredit);
                db.Commands.Clear();
                db.Commands.Add(db.CreateCommand("usp_JournalDetail_INSERT_dv"));

                db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
                db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
                db.Commands[0].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hrecordID));
                db.Commands[0].Parameters.Add(new Parameter("@NoPerkiraan", SqlDbType.VarChar, noPerkiraan));
                db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
                db.Commands[0].Parameters.Add(new Parameter("@Debet", SqlDbType.Money, debet));
                db.Commands[0].Parameters.Add(new Parameter("@Kredit", SqlDbType.Money, kredit));
                db.Commands[0].Parameters.Add(new Parameter("@DK", SqlDbType.VarChar, dk));
                db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noreff));
                db.Commands[0].Parameters.Add(new Parameter("@MataUangRowID", SqlDbType.UniqueIdentifier, MataUangRowId));
                db.Commands[0].Parameters.Add(new Parameter("@NominalOri", SqlDbType.Money, NominalOri));
                db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                db.Commands[0].Parameters.Add(new Parameter("@table", SqlDbType.VarChar, cabang));


                db.Commands[0].ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                result = 999;
            }
            return result;
        }


        public static int AddDetail(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double nominalOri)
        {
            return AddDetail(db, rowID, headerID, recordID, hrecordID, noPerkiraan, uraian, debet, kredit, dk, MataUangRowId, nominalOri, null);
        }

        public static int AddDetail(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double NominalOri, string noreff)
        {
            int result = 0;
            try
            {
                if ((MataUangRowId == null) || (MataUangRowId == Guid.Empty)) NominalOri = Math.Abs(debet - kredit);
                db.Commands.Clear();
                db.Commands.Add(db.CreateCommand("usp_JournalDetail_INSERT"));

                db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
                db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
                db.Commands[0].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hrecordID));
                db.Commands[0].Parameters.Add(new Parameter("@NoPerkiraan", SqlDbType.VarChar, noPerkiraan));
                db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
                db.Commands[0].Parameters.Add(new Parameter("@Debet", SqlDbType.Money, debet));
                db.Commands[0].Parameters.Add(new Parameter("@Kredit", SqlDbType.Money, kredit));
                db.Commands[0].Parameters.Add(new Parameter("@DK", SqlDbType.VarChar, dk));
                db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noreff));
                db.Commands[0].Parameters.Add(new Parameter("@MataUangRowID", SqlDbType.UniqueIdentifier, MataUangRowId));
                db.Commands[0].Parameters.Add(new Parameter("@NominalOri", SqlDbType.Money, NominalOri));
                db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

                db.Commands[0].ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                result = 999;
            }
            return result;
        }

        // batas addheader dan adddetail versi 2
        public static int AddHeader_ver_2(ref Database dbf, ref int counterdbf, Guid perusahaanRowID, Guid rowID, string recordID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool syncFlag)
        {
            int result = 0;
            dbf.Commands.Add(dbf.CreateCommand("usp_Journal_INSERT"));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, perusahaanRowID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, tanggal));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noReff));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, src));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@KodeGudang", SqlDbType.VarChar, kodeGudang));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@SyncFlag", SqlDbType.Bit, syncFlag));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            counterdbf++;
            return result;
        }

        public static int AddDetail_ver_2(ref Database dbf, ref int counterdbf, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double nominalOri)
        {
            return AddDetail_ver_2(ref dbf, ref counterdbf, rowID, headerID, recordID, hrecordID, noPerkiraan, uraian, debet, kredit, dk, MataUangRowId, nominalOri, null);
        }

        public static int AddDetail_ver_2(ref Database dbf, ref int counterdbf, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double NominalOri, string noreff)
        {
            int result = 0;
            if ((MataUangRowId == null) || (MataUangRowId == Guid.Empty)) NominalOri = Math.Abs(debet - kredit);
            dbf.Commands.Add(dbf.CreateCommand("usp_JournalDetail_INSERT"));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hrecordID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@NoPerkiraan", SqlDbType.VarChar, noPerkiraan));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Debet", SqlDbType.Money, debet));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Kredit", SqlDbType.Money, kredit));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@DK", SqlDbType.VarChar, dk));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noreff));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@MataUangRowID", SqlDbType.UniqueIdentifier, MataUangRowId));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@NominalOri", SqlDbType.Money, NominalOri));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            counterdbf++;
            return result;
        }
        // akhir batas addheader dan adddetail versi 2

        // batas addheader versi 3
        public static int AddHeader_ver_3(ref Database dbf, ref int counterdbf, Guid perusahaanRowID, Guid rowID, string recordID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool syncFlag, string unitusaha)
        {
            int result = 0;
            dbf.Commands.Add(dbf.CreateCommand("usp_Journal_INSERT"));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, perusahaanRowID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, tanggal));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noReff));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, src));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@KodeGudang", SqlDbType.VarChar, kodeGudang));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@SyncFlag", SqlDbType.Bit, syncFlag));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@UnitUsaha", SqlDbType.VarChar, unitusaha));
            counterdbf++;
            return result;
        }
        // akhir batas addheader versi 3, untuk Detail masih pakai versi 2

        public static int AddHeader_ver_4_dv(Database db, Guid perusahaanRowID, Guid rowID, string recordID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool syncFlag, string unitusaha, string cabang)
        {
            int result = 0;
            try
            {
                db.Commands.Clear();
                db.Commands.Add(db.CreateCommand("usp_Journal_INSERT_dv"));
                db.Commands[0].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, perusahaanRowID));
                db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
                db.Commands[0].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, tanggal));
                db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noReff));
                db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
                db.Commands[0].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, src));
                db.Commands[0].Parameters.Add(new Parameter("@KodeGudang", SqlDbType.VarChar, kodeGudang));
                db.Commands[0].Parameters.Add(new Parameter("@SyncFlag", SqlDbType.Bit, syncFlag));
                db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                db.Commands[0].Parameters.Add(new Parameter("@table", SqlDbType.VarChar, cabang));

                db.Commands[0].ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                result = 999;
            }
            return result;
        }

        // batas addheader versi 4
        public static int AddHeader_ver_4(Database db, Guid perusahaanRowID, Guid rowID, string recordID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool syncFlag, string unitusaha)
        {
            int result = 0;
            try
            {
                db.Commands.Clear();
                db.Commands.Add(db.CreateCommand("usp_Journal_INSERT"));
                db.Commands[0].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, perusahaanRowID));
                db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
                db.Commands[0].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, tanggal));
                db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noReff));
                db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
                db.Commands[0].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, src));
                db.Commands[0].Parameters.Add(new Parameter("@KodeGudang", SqlDbType.VarChar, kodeGudang));
                db.Commands[0].Parameters.Add(new Parameter("@SyncFlag", SqlDbType.Bit, syncFlag));
                db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                db.Commands[0].Parameters.Add(new Parameter("@UnitUsaha", SqlDbType.VarChar, unitusaha));

                db.Commands[0].ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                result = 999;
            }
            return result;
        }
        // akhir batas addheader versi 4, untuk Detail masih pakai versi 2

        // batas add header versi 5 => by Cabang
        public static int AddHeader_ver_5(Database db, Guid perusahaanRowID, Guid rowID, string recordID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool syncFlag, string tabel, string unitusaha)
        {
            int result = 0;
            try
            {
                db.Commands.Clear();
                db.Commands.Add(db.CreateCommand("usp_Journal_INSERT_byCabang"));
                db.Commands[0].Parameters.Add(new Parameter("@PerusahaanRowID", SqlDbType.UniqueIdentifier, perusahaanRowID));
                db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
                db.Commands[0].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, tanggal));
                db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noReff));
                db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
                db.Commands[0].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, src));
                db.Commands[0].Parameters.Add(new Parameter("@KodeGudang", SqlDbType.VarChar, kodeGudang));
                db.Commands[0].Parameters.Add(new Parameter("@SyncFlag", SqlDbType.Bit, syncFlag));
                db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                db.Commands[0].Parameters.Add(new Parameter("@UnitUsaha", SqlDbType.VarChar, unitusaha));
                db.Commands[0].Parameters.Add(new Parameter("@tabel", SqlDbType.VarChar, tabel));

                db.Commands[0].ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                result = 999;
            }
            return result;
        }
        // akhir batas addheader versi 5

        // batas add detail versi 5 => by Cabang
        public static int AddDetail_ver_5(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double nominalOri, string tabel)
        {
            return AddDetail_ver_5(db, rowID, headerID, recordID, hrecordID, noPerkiraan, uraian, debet, kredit, dk, MataUangRowId, nominalOri, null, tabel);
        }

        public static int AddDetail_ver_5(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double NominalOri, string noreff, string tabel)
        {
            int result = 0;
            try
            {
                if ((MataUangRowId == null) || (MataUangRowId == Guid.Empty)) NominalOri = Math.Abs(debet - kredit);
                db.Commands.Clear();
                db.Commands.Add(db.CreateCommand("usp_JournalDetail_INSERT_byCabang"));

                db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
                db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
                db.Commands[0].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hrecordID));
                db.Commands[0].Parameters.Add(new Parameter("@NoPerkiraan", SqlDbType.VarChar, noPerkiraan));
                db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
                db.Commands[0].Parameters.Add(new Parameter("@Debet", SqlDbType.Money, debet));
                db.Commands[0].Parameters.Add(new Parameter("@Kredit", SqlDbType.Money, kredit));
                db.Commands[0].Parameters.Add(new Parameter("@DK", SqlDbType.VarChar, dk));
                db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noreff));
                db.Commands[0].Parameters.Add(new Parameter("@MataUangRowID", SqlDbType.UniqueIdentifier, MataUangRowId));
                db.Commands[0].Parameters.Add(new Parameter("@NominalOri", SqlDbType.Money, NominalOri));
                db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                db.Commands[0].Parameters.Add(new Parameter("@table", SqlDbType.VarChar, tabel));

                db.Commands[0].ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                result = 999;
            }
            return result;
        }
        // akhir batas adddetail versi 5

        public static void UpdateHeader(Database db, Guid rowID, string recordID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool syncFlag, string unitusaha,string cabang)
        {

            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Journal_UPDATE_dv"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, tanggal));
            db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noReff));
            db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            db.Commands[0].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, src));
            db.Commands[0].Parameters.Add(new Parameter("@KodeGudang", SqlDbType.VarChar, kodeGudang));
            db.Commands[0].Parameters.Add(new Parameter("@SyncFlag", SqlDbType.Bit, syncFlag));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            db.Commands[0].Parameters.Add(new Parameter("@table", SqlDbType.VarChar, cabang));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void UpdateDetail_dv(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double NominalOri, string cabang)
        {

            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_UPDATE_dv"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hrecordID));
            db.Commands[0].Parameters.Add(new Parameter("@NoPerkiraan", SqlDbType.VarChar, noPerkiraan));
            db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            db.Commands[0].Parameters.Add(new Parameter("@Debet", SqlDbType.Money, debet));
            db.Commands[0].Parameters.Add(new Parameter("@Kredit", SqlDbType.Money, kredit));
            db.Commands[0].Parameters.Add(new Parameter("@DK", SqlDbType.VarChar, dk));
            db.Commands[0].Parameters.Add(new Parameter("@MataUangRowID", SqlDbType.UniqueIdentifier, MataUangRowId));
            db.Commands[0].Parameters.Add(new Parameter("@NominalOri", SqlDbType.Money, NominalOri));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            db.Commands[0].Parameters.Add(new Parameter("@table", SqlDbType.VarChar, cabang));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void UpdateDetail(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk, Guid MataUangRowId, double NominalOri)
        {

            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_UPDATE"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hrecordID));
            db.Commands[0].Parameters.Add(new Parameter("@NoPerkiraan", SqlDbType.VarChar, noPerkiraan));
            db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            db.Commands[0].Parameters.Add(new Parameter("@Debet", SqlDbType.Money, debet));
            db.Commands[0].Parameters.Add(new Parameter("@Kredit", SqlDbType.Money, kredit));
            db.Commands[0].Parameters.Add(new Parameter("@DK", SqlDbType.VarChar, dk));
            db.Commands[0].Parameters.Add(new Parameter("@MataUangRowID", SqlDbType.UniqueIdentifier, MataUangRowId));
            db.Commands[0].Parameters.Add(new Parameter("@NominalOri", SqlDbType.Money, NominalOri));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void LinkHeader(Database db, Guid rowID, string recordID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool syncFlag)
        {

            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Journal_LINK"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, tanggal));
            db.Commands[0].Parameters.Add(new Parameter("@NoReff", SqlDbType.VarChar, noReff));
            db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            db.Commands[0].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, src));
            db.Commands[0].Parameters.Add(new Parameter("@KodeGudang", SqlDbType.VarChar, kodeGudang));
            db.Commands[0].Parameters.Add(new Parameter("@SyncFlag", SqlDbType.Bit, syncFlag));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void LinkDetail(Database db, Guid rowID, Guid headerID, string recordID, string hrecordID, string noPerkiraan, string uraian, double debet, double kredit, string dk)
        {

            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_LINK"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hrecordID));
            db.Commands[0].Parameters.Add(new Parameter("@NoPerkiraan", SqlDbType.VarChar, noPerkiraan));
            db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            db.Commands[0].Parameters.Add(new Parameter("@Debet", SqlDbType.Money, debet));
            db.Commands[0].Parameters.Add(new Parameter("@Kredit", SqlDbType.Money, kredit));
            db.Commands[0].Parameters.Add(new Parameter("@DK", SqlDbType.VarChar, dk));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void DeleteHeader(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Journal_DELETE"));
            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].ExecuteNonQuery();
        }

        public static void DeleteDetail_dv(Database db, Guid rowID, string cabang)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_DELETE_dv"));
            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@table", SqlDbType.VarChar, cabang));
            db.Commands[0].ExecuteNonQuery();
        }


        public static void DeleteDetail(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_JournalDetail_DELETE"));
            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].ExecuteNonQuery();
        }

        public static DataTable GetSubJournalHeader(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournal_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@rowID", SqlDbType.UniqueIdentifier, rowID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable ListSubJournalHeader(Database db, Guid journalDetailID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournal_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@JournalDetailID", SqlDbType.UniqueIdentifier, journalDetailID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static void AddSubJournalHeader(Database db, Guid rowID, string recordID, Guid journalDetailID, string journalDetailRecID, string partnerID, string keterangan)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournal_INSERT"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@JournalDetailID", SqlDbType.UniqueIdentifier, journalDetailID));
            db.Commands[0].Parameters.Add(new Parameter("@JournalDetailRecID", SqlDbType.VarChar, journalDetailRecID));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].Parameters.Add(new Parameter("@Keterangan", SqlDbType.VarChar, keterangan));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void UpdateSubJournalHeader(Database db, Guid rowID, string recordID, Guid journalDetailID, string journalDetailRecID, string partnerID, string keterangan)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournal_UPDATE"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@JournalDetailID", SqlDbType.UniqueIdentifier, journalDetailID));
            db.Commands[0].Parameters.Add(new Parameter("@JournalDetailRecID", SqlDbType.VarChar, journalDetailRecID));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].Parameters.Add(new Parameter("@Keterangan", SqlDbType.VarChar, keterangan));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void DeleteSubJournalHeader(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournal_DELETE"));
            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].ExecuteNonQuery();
        }

        public static DataTable GetSubJournalDetail(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournalDetail_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@rowID", SqlDbType.UniqueIdentifier, rowID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable ListSubJournalDetail(Database db, Guid headerID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournalDetail_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static void AddSubJournalDetail(Database db, Guid rowID, Guid headerID, string recordID, string hRecordID, string partnerID, string partnerNo, string NamaPartner, decimal persen, string currency, double amount)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournalDetail_INSERT"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hRecordID));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerNo", SqlDbType.VarChar, partnerNo));
            db.Commands[0].Parameters.Add(new Parameter("@NamaPartner", SqlDbType.VarChar, NamaPartner));
            db.Commands[0].Parameters.Add(new Parameter("@Persen", SqlDbType.Decimal, persen));
            db.Commands[0].Parameters.Add(new Parameter("@Currency", SqlDbType.VarChar, currency));
            db.Commands[0].Parameters.Add(new Parameter("@Amount", SqlDbType.Money, amount));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void UpdateSubJournalDetail(Database db, Guid rowID, Guid headerID, string recordID, string hRecordID, string partnerID, string partnerNo, string NamaPartner, decimal persen, string currency, double amount)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournalDetail_UPDATE"));

            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, headerID));
            db.Commands[0].Parameters.Add(new Parameter("@RecordID", SqlDbType.VarChar, recordID));
            db.Commands[0].Parameters.Add(new Parameter("@HRecordID", SqlDbType.VarChar, hRecordID));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerNo", SqlDbType.VarChar, partnerNo));
            db.Commands[0].Parameters.Add(new Parameter("@NamaPartner", SqlDbType.VarChar, NamaPartner));
            db.Commands[0].Parameters.Add(new Parameter("@Persen", SqlDbType.Decimal, persen));
            db.Commands[0].Parameters.Add(new Parameter("@Currency", SqlDbType.VarChar, currency));
            db.Commands[0].Parameters.Add(new Parameter("@Amount", SqlDbType.Money, amount));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void DeleteSubJournalDetail(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_SubJournalDetail_DELETE"));
            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].ExecuteNonQuery();
        }

        public static DataTable GetPartner(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Partner_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@rowID", SqlDbType.UniqueIdentifier, rowID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable ListPartner(Database db)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Partner_LIST"));
            return db.Commands[0].ExecuteDataTable();
        }

        public static void AddPartner(Database db, string partnerID, string uraian)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Partner_INSERT"));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void UpdatePartner(Database db, string partnerID, string uraian)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Partner_UPDATE"));

            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].Parameters.Add(new Parameter("@Uraian", SqlDbType.VarChar, uraian));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void DeletePartner(Database db, string partnerID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Partner_DELETE"));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].ExecuteNonQuery();
        }

        public static DataTable GetPartnerDetail(Database db, Guid rowID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_PartnerDetail_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@rowID", SqlDbType.UniqueIdentifier, rowID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static DataTable ListPartnerDetail(Database db, string partnerID)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_PartnerDetail_LIST"));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            return db.Commands[0].ExecuteDataTable();
        }

        public static void AddPartnerDetail(Database db, string partnerID, string partnerNo, string nama, bool statusAktif, string dstamp, string catatan)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_PartnerDetail_INSERT"));

            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerNo", SqlDbType.VarChar, partnerNo));
            db.Commands[0].Parameters.Add(new Parameter("@nama", SqlDbType.VarChar, nama));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerNo", SqlDbType.Bit, statusAktif));
            db.Commands[0].Parameters.Add(new Parameter("@DStamp", SqlDbType.VarChar, dstamp));
            db.Commands[0].Parameters.Add(new Parameter("@Catatan", SqlDbType.VarChar, catatan));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void UpdatePartnerDetail(Database db, string partnerID, string partnerNo, string nama, bool statusAktif, string dstamp, string catatan)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_PartnerDetail_UPDATE"));

            db.Commands[0].Parameters.Add(new Parameter("@PartnerID", SqlDbType.VarChar, partnerID));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerNo", SqlDbType.VarChar, partnerNo));
            db.Commands[0].Parameters.Add(new Parameter("@nama", SqlDbType.VarChar, nama));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerNo", SqlDbType.Bit, statusAktif));
            db.Commands[0].Parameters.Add(new Parameter("@DStamp", SqlDbType.VarChar, dstamp));
            db.Commands[0].Parameters.Add(new Parameter("@Catatan", SqlDbType.VarChar, catatan));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));

            db.Commands[0].ExecuteNonQuery();
        }

        public static void DeletePartnerDetail(Database db, string partnerNo)
        {
            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand("usp_Partner_DELETE"));
            db.Commands[0].Parameters.Add(new Parameter("@PartnerNo", SqlDbType.VarChar, partnerNo));
            db.Commands[0].ExecuteNonQuery();
        }

    }

    class clsJournal
    {
        #region FIELDS
        public enum enumState { Empty, New, Update }
        enumState _state = enumState.Empty;
        Guid _perusahaanRowID;
        Guid _rowID;
        string _recordID;
        string _perusahaanID;
        DateTime _tanggal;
        string _noReff;
        string _uraian;
        string _src;
        double _debet;
        double _kredit;
        string _kodeGudang;
        List<clsJournalDetail> _jd = new List<clsJournalDetail>();
        public bool _isValid;
        string _errMsg;
        int _errNo;

        bool _Kodomain = false;
        #endregion

        #region PROPERTIES
        public Guid PerusahaanRowID { get { return _perusahaanRowID; } set { _perusahaanRowID = value; } }
        public Guid RowID { get { return _rowID; } set { _rowID = value; } }
        public string RecordID { get { return _recordID; } set { _recordID = value; } }
        public DateTime Tanggal { get { return _tanggal; } set { _tanggal = value; } }
        public string NoReff { get { return _noReff; } set { _noReff = value; } }
        public string Uraian { get { return _uraian; } set { _uraian = value; } }
        public string Src { get { return _src; } set { _src = value; } }
        public string KodeGudang { get { return _kodeGudang; } set { _kodeGudang = value; } }
        public double Debet { get { return _debet; } }
        public double Kredit { get { return _kredit; } }
        public List<clsJournalDetail> JournalDetail { get { return _jd; } set { _jd = value; } }
        public enumState State { get { return _state; } }
        public int ErrNo { get { return _errNo; } }
        public string ErrMsg { get { return _errMsg; } }

        public bool Kodomain
        {
            get { return _Kodomain; }
            set { _Kodomain = value; }
        }
        #endregion

        #region KONSTRUKTOR
        public clsJournal()
        {
            _isValid = false;
            _rowID = Guid.NewGuid();
            _perusahaanRowID = GlobalVar.PerusahaanRowID;
            _perusahaanID = GlobalVar.PerusahaanID;
            _kodeGudang = GlobalVar.Gudang;
            _debet = 0;
            _kredit = 0;
            _state = enumState.New;
        }

        public clsJournal(Guid _rowID)
        {
            _isValid = false;

            if ((Guid)Tools.isNull(_rowID, Guid.Empty) != Guid.Empty)
            {
                DBGetJournal(_rowID);
            }
        }

        public clsJournal(Guid perusahaanRowID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang)
        {
            _isValid = false;
            _perusahaanRowID = perusahaanRowID;
            _perusahaanID = clsPerusahaan.DBGetInitPerusahaan(perusahaanRowID);
            _tanggal = tanggal;
            _noReff = noReff;
            _uraian = uraian;
            _src = src;
            _kodeGudang = kodeGudang;
            _rowID = Guid.NewGuid();
            _recordID = Tools.CreateFingerPrint();
            _debet = 0;
            _kredit = 0;
            _state = ValidData() ? enumState.New : enumState.Empty;
        }

        public clsJournal(Guid perusahaanRowID, DateTime tanggal, string noReff, string uraian, string src, string kodeGudang, bool Lawan)
        {
            _isValid = false;
            _perusahaanRowID = perusahaanRowID;
            _perusahaanID = clsPerusahaan.DBGetInitPerusahaan(perusahaanRowID);
            _tanggal = tanggal;
            _noReff = noReff;
            _uraian = uraian;
            _src = src;
            _kodeGudang = kodeGudang;
            _rowID = Guid.NewGuid();
            _recordID = Tools.CreateFingerPrint();
            _debet = 0;
            _kredit = 0;
            _state = ValidData() ? enumState.New : enumState.Empty;
            Kodomain = true;
        }
        #endregion

        #region FUNCTIONS
        public void AddDetail(clsJournalDetail jd)
        {
            _jd.Add(jd);
            _debet = _debet + jd.Debet;
            _kredit = _kredit + jd.Kredit;
        }

        public bool ValidData()
        {
            bool result = true;

            _isValid = result;
            return result;
        }

        public bool AddToDataSet(DataTemplates.dsJurnal dsj)
        {
            bool result = ValidData();
            if (_isValid)
            {
                DataRow dr = (DataRow)dsj.Journal.Rows.Add();
                dr["RowID"] = _rowID;
                dr["RecordID"] = _recordID;
                dr["PerusahaanID"] = _perusahaanID;
                dr["Tanggal"] = _tanggal;
                dr["NoReff"] = _noReff;
                dr["Uraian"] = _uraian;
                dr["Src"] = _src;
                dr["KodeGudang"] = _kodeGudang;
                dr["Debet"] = _debet;
                dr["Kredit"] = _kredit;
                dr["status"] = (_state == enumState.Update) ? "Posted" : "Preview";
                foreach (clsJournalDetail jd in _jd)
                {
                    if (result == true) result = jd.AddToDataSet(dsj);
                    if (result == false) break;
                }

            }
            return result;
        }
        #endregion

        #region DBFunctions
        public void DBGetJournal(Guid rowID)
        {
            if ((Guid)Tools.isNull(rowID, Guid.Empty) == Guid.Empty) SetError(1, "IDJournal tidak valid"); else SetError(0, "Ok");

            if (_errNo == 0)
            {
                _state = enumState.Update;
                try
                {
                    List<Parameter> prm = new List<Parameter>();
                    prm.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                    DataTable dt = DBTools.DBGetDataTable("usp_Journal_LIST", prm);
                    if (dt.Rows.Count > 0)
                    {
                        DataRow dr = dt.Rows[0];

                        _perusahaanRowID = (Guid)Tools.isNull(dr["PerusahaanRowID"], Guid.Empty);
                        _rowID = rowID;
                        _recordID = Tools.isNull(dr["RecordID"], "").ToString();
                        _perusahaanID = clsPerusahaan.DBGetInitPerusahaan(_perusahaanRowID);
                        _tanggal = (DateTime)Tools.isNull(dr["Tanggal"], DateTime.MinValue);
                        _noReff = Tools.isNull(dr["NoReff"], "").ToString();
                        _uraian = Tools.isNull(dr["Uraian"], "").ToString();
                        _src = Tools.isNull(dr["Src"], "").ToString();
                        _debet = 0; // double.Parse(Tools.isNull(dr["Debet"], 0).ToString());
                        _kredit = 0; // double.Parse(Tools.isNull(dr["Kredit"], 0).ToString());
                        _kodeGudang = Tools.isNull(dr["KodeGudang"], "").ToString();

                        prm.Clear();
                        prm.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, rowID));
                        dt = DBTools.DBGetDataTable("usp_JournalDetail_LIST", prm);
                        if (dt.Rows.Count > 0)
                            foreach (DataRow d in dt.Rows) AddDetail(new clsJournalDetail(d));
                        //                                _jd.Add(new clsJournalDetail(d));
                        _state = enumState.Update;
                    }
                }
                catch (Exception ex)
                {
                    SetError(1, ex.Message);
                    _state = enumState.Empty;
                }
            }
        }

        public bool DBPostJournal()
        {
            bool result = true;
            using (Database db = new Database())
            {
                db.BeginTransaction();
                if (DBPostJournal(db)) db.CommitTransaction(); else db.RollbackTransaction();
            }
            return result;
        }

        public bool DBPostJournal(Database db)
        {
            _errNo = Journal.AddHeader(db, _perusahaanRowID, _rowID, _recordID, _tanggal, _noReff, _uraian, _src, _kodeGudang, false);

            if (_errNo == 0)
            {
                foreach (clsJournalDetail d in _jd)
                {
                    _errNo = Journal.AddDetail(db, d.RowID, _rowID, d.RecordID, _recordID, d.NoPerkiraan, d.Uraian,
                                                d.Debet, d.Kredit, d.DK, d.MataUangRowID, d.NominalOri, _noReff);
                    if (_errNo != 0)
                    {
                        SetError(_errNo, "GagalUpdate Journal Detail");
                        break;
                    }
                }
            }
            else SetError(1, "Gagal Journal Header");

            return (_errNo == 0);
        }

        void SetError(int errNo, string errMsg)
        {
            _errNo = errNo;
            _errMsg = errMsg;
        }
        #endregion
    }

    class clsJournalDetail
    {
        #region FIELDS
        Guid _rowID;
        Guid _headerID;
        string _recordID;
        //string _hrecordID;
        string _noPerkiraan;
        string _namaPerkiraan;
        string _uraian;
        double _nominal;
        string _dk;
        string _noreff;
        Guid _mataUangRowId;
        double _nominalOri;
        #endregion

        #region PROPERTIES
        public Guid RowID { get { return _rowID; } set { _rowID = value; } }
        public Guid HeaderID { get { return _headerID; } set { _headerID = value; } }
        public string RecordID { get { return _recordID; } set { _recordID = value; } }
        public string NoPerkiraan { get { return _noPerkiraan; } set { _noPerkiraan = value; } }
        public string NamaPerkiraan { get { return _namaPerkiraan; } set { _namaPerkiraan = value; } }
        public string Uraian { get { return _uraian; } set { _uraian = value; } }
        public string DK { get { return _dk; } set { _dk = value; } }
        public double Debet { get { return ((_dk == "D") ? Math.Abs(_nominal) : 0); } }
        public double Kredit { get { return ((_dk == "K") ? Math.Abs(_nominal) : 0); } }
        public double Nominal { get { return _nominal; } set { _nominal = value; } }
        public double NominalOri { get { return _nominalOri; } set { _nominalOri = value; } }
        public Guid MataUangRowID { get { return _mataUangRowId; } set { _mataUangRowId = value; } }
        #endregion

        #region KONSTRUKTOR
        public clsJournalDetail()
        {
        }

        public clsJournalDetail(Guid rowID)
        {
            DBGetJournalDetail(rowID);
        }

        public clsJournalDetail(DataRow dr)
        {
            SetFromDataRow(dr);
        }

        public clsJournalDetail(Guid headerID, string noPerkiraan, string uraian, string dk, double nominal, Guid mataUangRowId, double nominalOri, string noreff)
        {
            _headerID = headerID;
            _noPerkiraan = noPerkiraan;
            DBGetNamaPerkiraan();
            _uraian = uraian;
            _dk = dk;
            _nominal = nominal;
            _mataUangRowId = mataUangRowId;
            _nominalOri = nominalOri;
            _noreff = noreff;
            _recordID = Tools.CreateFingerPrint();
            _rowID = Guid.NewGuid();
        }
        #endregion

        #region FUNCTIONS
        public bool AddToDataSet(DataTemplates.dsJurnal jd)
        {
            bool result = true;

            DataRow dr = jd.JournalDetail.Rows.Add();

            dr["RowID"] = _rowID;
            dr["HeaderID"] = _headerID;
            dr["RecordID"] = _recordID;
            //dr["HRecordID"] = "";
            dr["NoPerkiraan"] = _noPerkiraan;
            dr["NamaPerkiraan"] = _namaPerkiraan;
            dr["Uraian"] = _uraian;
            dr["DK"] = _dk;
            dr["Debet"] = (_dk == "D") ? Math.Abs(_nominal) : 0;
            dr["Kredit"] = (_dk == "K") ? Math.Abs(_nominal) : 0;
            dr["NoReff"] = _noreff;
            //Guid _mataUangRowId;
            //double _nominalOri;
            return result;
        }

        public bool SetFromDataRow(DataRow dr)
        {
            bool result = true;

            _rowID = (Guid)Tools.isNull(dr["RowID"], Guid.Empty);
            _headerID = (Guid)Tools.isNull(dr["HeaderID"], Guid.Empty);
            _recordID = Tools.isNull(dr["RecordID"], "").ToString();
            //dr["HRecordID"] = "";
            _noPerkiraan = Tools.isNull(dr["NoPerkiraan"], "").ToString();
            _namaPerkiraan = Tools.isNull(dr["NamaPerkiraan"], "").ToString();
            _uraian = Tools.isNull(dr["Uraian"], "").ToString();
            _dk = Tools.isNull(dr["DK"], "").ToString();
            _nominal = double.Parse(Tools.isNull(dr["Debet"], 0).ToString()) - double.Parse(Tools.isNull(dr["Kredit"], 0).ToString());
            _noreff = Tools.isNull(dr["NoReff"], "").ToString();
            _mataUangRowId = (Guid)Tools.isNull(dr["MataUangRowID"], Guid.Empty);
            _nominalOri = double.Parse(Tools.isNull(dr["NominalOri"], 0).ToString());
            return result;
        }
        #endregion

        #region DBFunctions
        void DBGetNamaPerkiraan()
        {
            if (Tools.isNull(_noPerkiraan, "").ToString() != "")
            {
                List<Parameter> prm = new List<Parameter>();
                prm.Add(new Parameter("@NoPerkiraan", SqlDbType.VarChar, _noPerkiraan));
                DataTable dt = Tools.DBGetDataTable("usp_Perkiraan_LIST", prm);
                if (dt.Rows.Count > 0) _namaPerkiraan = dt.Rows[0]["NamaPerkiraan"].ToString();
            }
        }

        void DBGetJournalDetail(Guid rowID)
        {
            List<Parameter> prm = new List<Parameter>();

        }
        #endregion
    }

    class AutoJournal : Database
    {
        public static string GetNamaPerkiraan(string NoPerkiraan)
        {
            DataTable dummy = new DataTable();
            using (Database dbfsub = new Database(GlobalVar.DBFinanceOto))
            {
                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_Perkiraan_LIST"));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@noPerkiraan", SqlDbType.VarChar, NoPerkiraan));
                dummy = dbfsub.Commands[0].ExecuteDataTable();
            }
            if (dummy.Rows.Count > 0)
            {
                return Tools.isNull(dummy.Rows[0]["NamaPerkiraan"], "").ToString();
            }
            else
            {
                return "";
            }
        }

        public static string GetMataUangID(Guid MataUangRowID)
        {
            DataTable dummy = new DataTable();
            using (Database dbfsub = new Database(GlobalVar.DBFinanceOto))
            {
                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_MataUang_LIST"));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@MataUangRowID", SqlDbType.UniqueIdentifier, MataUangRowID));
                dummy = dbfsub.Commands[0].ExecuteDataTable();
            }
            if (dummy.Rows.Count > 0)
            {
                return Tools.isNull(dummy.Rows[0]["MataUangID"], "").ToString();
            }
            else
            {
                return "";
            }
        }

        public static string UpdateJournalRowID(Database db, string sql, Guid rowID, Guid journalRowID)
        {
            string sresult = "Ok";

            db.Commands.Clear();
            db.Commands.Add(db.CreateCommand(sql));
            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            db.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, journalRowID));
            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            db.Commands[0].ExecuteNonQuery();

            return sresult;
        }

        public static string JournalPenerimaan(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid penerimaanRowID, ref int error)
        {
            //int nresult = 0;
            string sresult = "Ok";
            Double sumD = 0, sumK = 0;
            if ((penerimaanRowID == null) || (penerimaanRowID == Guid.Empty)) sresult = "1 : ID Penerimaan Kosong";
            else
            {
                Database db = new Database();
                try
                {
                    DataTable dt = new DataTable();
                    //[usp_PenerimaanUang_LIST]
                    db.Commands.Add(db.CreateCommand("[usp_PenerimaanUang_LIST_JOURNAL]"));
                    db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, penerimaanRowID));
                    dt = db.Commands[0].ExecuteDataTable();

                    if (dt.Rows.Count > 0)
                    {
                        DataRow dr = dt.Rows[0];
                        List<Parameter> prm = new List<Parameter>();
                        string noBukti = Tools.isNull(dr["NoBukti"], "").ToString();
                        string cabangDari = Tools.isNull(dr["CabangDari"], "").ToString();
                        string cabangKe = Tools.isNull(dr["CabangKe"], "").ToString();
                        string jnsPenerimaan = Tools.isNull(dr["JnsPenerimaan"], "").ToString();
                        string uraian = Tools.isNull(dr["Uraian"], "").ToString();
                        string UraianLeasing = Tools.isNull(dr["UraianLeasing"], "").ToString();
                        int penerimaanDari = int.Parse(Tools.isNull(dr["PenerimaanDari"], "").ToString());
                        
                        string NoPerkiraan01 = "";
                        string NoPerkiraaTrd = "";
                        string NoPerkiraanAvl = "";

                        Guid perusahaanRowID = (Guid)Tools.isNull(dr["PerusahaanKeRowID"], Guid.Empty);
                        Guid JenisTrans = (Guid)Tools.isNull(dr["JnsTransaksiRowID"], Guid.Empty);
                        Guid PTKE = (Guid)Tools.isNull(dr["PTKE"], Guid.Empty);

                        // kalo isACR 'T' berarti perlu diproses ACR, selain itu ('F') berati ngga perlu
                        String isACR = (String)Tools.isNull(dr["isACR"].ToString().Trim(), 'F');
                        String isGiroTTP = (String)Tools.isNull(dr["isGiroTTP"].ToString().Trim(), 'F');
                        String isSBD = (String)Tools.isNull(dr["isSBD"].ToString().Trim(), 'F');
                        String UnitUsaha = Tools.isNull(dr["UnitUsaha"].ToString(), "").ToString();

                        prm.Clear();
                        switch (jnsPenerimaan)
                        {
                            case "K":
                                {
                                    Guid KasRowID = (Guid)Tools.isNull(dr["KasRowID"], Guid.Empty);
                                    NoPerkiraan01 = GetPerkiraanKas(KasRowID);
                                    NoPerkiraanAvl = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", "06A2"); //Avalis
                                }
                                break;
                            case "B":
                                {
                                    Guid RekeningRowID = (Guid)Tools.isNull(dr["RekeningRowID"], Guid.Empty);
                                    NoPerkiraan01 = GetPerkiraanRekening(RekeningRowID);
                                    NoPerkiraanAvl = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", "06A2"); //Avalis
                                } break;
                            case "G":
                                {
                                    sresult = "Di-jurnal history giro";
                                    NoPerkiraan01 = GetPerkiraanKoneksiDetail("GRMDR");
                                    NoPerkiraanAvl = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", "06A2"); //Avalis
                                } break;
                            default: break;
                        }

                        if (isGiroTTP == "T")
                        {
                            // berarti ini lagi memproses Giro yg dari Showroom, NoPerkiraan01 nya mestinya ke UM Pelanggan
                            NoPerkiraan01 = GetPerkiraanKoneksiDetail("UMPLGN", "SHW", GlobalVar.CabangID);
                        }
                        string NoPerkiraan02 = Tools.isNull(dr["NoPerkiraan01"], "").ToString(); ;

                        switch (penerimaanDari)
                        {
                            case 0:
                                {
                                    Guid perusahaanDariRowID = (Guid)Tools.isNull(dr["PerusahaanDariRowID"], Guid.Empty);
                                    if (GlobalVar.IsNewDNKN)
                                    {
                                        if (perusahaanRowID != perusahaanDariRowID && PTKE == Guid.Empty)
                                        {
                                            NoPerkiraan02 = GetPerkiraanDKNPT_HLL(perusahaanRowID);
                                        }
                                        else if (perusahaanRowID != perusahaanDariRowID)
                                        {
                                            NoPerkiraan02 = GetPerkiraanNewDKNPT(perusahaanRowID, perusahaanDariRowID);
                                        }

                                        if (perusahaanRowID == perusahaanDariRowID && PTKE != Guid.Empty && (JenisTrans == GlobalVar.GetTransaksi.PLL))
                                        {
                                            NoPerkiraan02 = GetPerkiraanNewDKNPT(perusahaanRowID, PTKE);
                                        }
                                    }
                                    else
                                    {
                                        if (perusahaanRowID != perusahaanDariRowID)
                                        {
                                            NoPerkiraan02 = GetPerkiraanDKNPT(perusahaanRowID, perusahaanDariRowID);
                                        }
                                    }

                                }
                                break;
                            case 1:
                                {
                                    if (cabangDari != cabangKe) NoPerkiraan02 = GetPerkiraanDKNCabang(cabangDari);
                                } break;
                            default: break;
                        }

                        Guid journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);

                        if (perusahaanRowID == Guid.Empty) sresult = "3 : Data PT kosong / tidak ditemukan";
                        else if (journalRowID != Guid.Empty) sresult = "4 : Sudah pernah di-posting jurnal";
                        //                        else if (string.IsNullOrEmpty(NoPerkiraan01)) nresult = 5;
                        //                        else if (string.IsNullOrEmpty(NoPerkiraan02)) nresult = 6;

                        // Cegat di sini, cek, kalau misalkan data penerimaan Uang ini berasal dari data UMT
                        // yang di Penjualan_Hist - Kredit - FLT, perlu dilakukan cek untuk menentukan
                        // jenis transaksinya dia sebagai apa
                        DataTable dummy = new DataTable();
                        using (Database dbfsub = new Database())
                        {
                            dbfsub.Commands.Add(dbfsub.CreateCommand("usp_PenjualanHist_LIST_Journal_UMT"));
                            dbfsub.Commands[0].Parameters.Add(new Parameter("@PenerimaanUangRowID", SqlDbType.UniqueIdentifier, penerimaanRowID));
                            dummy = dbfsub.Commands[0].ExecuteDataTable();
                        }
                        String tempNoPerkiraanCheck = "";
                        if (dummy.Rows.Count > 0)
                        {
                            tempNoPerkiraanCheck = Tools.isNull(dummy.Rows[0]["TargetNoPerkiraan"], "").ToString();
                        }

                        if (tempNoPerkiraanCheck == "" || tempNoPerkiraanCheck == null)
                        { // kalo kosong pakai noperkiraan yg biasa
                        }
                        else
                        {
                            // kalo ngga kosong, tiban dengan noPerkiraan yg diambil
                            NoPerkiraan02 = tempNoPerkiraanCheck;
                        }

                        if (sresult == "Ok")
                        //                          if (cabangDari == cabangKe)
                        {
                            string gudangID = AutoJournal.GetGudangIDByPTRowID(perusahaanRowID);
                            db.Commands.Clear();
                            try
                            {
                                Guid rowID = Guid.NewGuid();
                                Guid rowIDTrd = Guid.NewGuid();
                                Guid rowIDAvl = Guid.NewGuid();
                                string recID = Tools.CreateFingerPrint();
                                double nominal = double.Parse(dt.Rows[0]["Nominal"].ToString());
                                double nominalRp = double.Parse(Tools.isNull(dt.Rows[0]["NominalRp"], "0").ToString());
                                double DPNominal = 0;
                                double DPRefund = 0;
                                double DPSelisih = 0;
                                string namaLeasing = "";
                                string NoPerkiraanRefund = "";
                                bool isRefund = false;

                                Guid mataUangRowID = (Guid)Tools.isNull(dt.Rows[0]["MataUangRowID"], Guid.Empty);

                                // kalau iya SBD, perlu cek apakah kelebihan atau tidak dari DP aslinya, kalau iya, berarti
                                // masuk jurnal refund juga!
                                if (isSBD == "T")
                                {
                                    using (Database dbsub = new Database())
                                    {
                                        DataTable dummysub = new DataTable();
                                        dbsub.Commands.Add(dbsub.CreateCommand("usp_PenerimaanUang_SBD_Check_Refund"));
                                        dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, penerimaanRowID));
                                        dummysub = dbsub.Commands[0].ExecuteDataTable();

                                        DPNominal = Convert.ToDouble(Tools.isNull(dummysub.Rows[0]["DPNominal"], 0).ToString());
                                        DPRefund = Convert.ToDouble(Tools.isNull(dummysub.Rows[0]["DPRefund"], 0).ToString());
                                        DPSelisih = Convert.ToDouble(Tools.isNull(dummysub.Rows[0]["DPSelisih"], 0).ToString());
                                        namaLeasing = Tools.isNull(dummysub.Rows[0]["NamaLeasing"], "N/A").ToString();
                                        isRefund = true;
                                    }
                                }

                                if (isSimulate == true)
                                {
                                }
                                else
                                {
                                    db.BeginTransaction();
                                }

                                {

                                    if (isSimulate == true)
                                    {
                                        //ALL
                                        dtHeader.Rows.Add();
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = (DateTime)dt.Rows[0]["Tanggal"];
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRM";
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = "Penerimaaan Kas / Bank";
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";

                                        //TRD
                                        dtHeader.Rows.Add();
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowIDTrd;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = (DateTime)dt.Rows[0]["Tanggal"];
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRM";
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = "Penerimaaan Kas / Bank";
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "TRD";

                                        //AVL
                                        if (!uraian.StartsWith("UM"))
                                        {
                                            dtHeader.Rows.Add();
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowIDAvl;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = (DateTime)dt.Rows[0]["Tanggal"];
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRM";
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = "Penerimaaan Kas / Bank";
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "AVL";
                                        }
                                    }
                                    else
                                    {
                                        if (Journal.AddHeader_ver_4(db, perusahaanRowID, rowID, recID,
                                                                (DateTime)dt.Rows[0]["Tanggal"], noBukti, "Penerimaaan Kas / Bank",
                                                                "TRM", gudangID, false, UnitUsaha) != 0)
                                            sresult = "5 : Gagal menyimpan Header Jurnal";
                                    }

                                    Guid drowID = Guid.NewGuid();
                                    Guid drowIDTrd = Guid.NewGuid();
                                    Guid drowIDAvl = Guid.NewGuid();

                                    // ini bagian kas/bank/giro
                                    if (isRefund == true)
                                    {
                                        // refund, kas/bank nya pakai nilai refund
                                        nominalRp = DPRefund;
                                        nominal = DPRefund;
                                    }
                                    if (sresult == "Ok")
                                    {
                                        if (dr["LeasingRowID"].ToString() != "")
                                        {
                                            uraian = UraianLeasing;
                                            //uraian = "Penerimaan Piutang Belum teriden - " + dr["Leasing"].ToString();
                                        }

                                        if (isSimulate == true)
                                        {

                                            //ALL
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan01;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraan01);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                            sumD = sumD + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;


                                            //penjualan kredit
                                            //TRD
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowIDTrd;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowIDTrd;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan01;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraan01);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                            sumD = sumD + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;

                                                                                    //AVL
                                            if (!uraian.StartsWith("UM"))
                                            {

                                                //AVL - pengurangan piutang
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowIDAvl;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowIDAvl;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraanAvl; //PIUTANG
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraanAvl);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                                sumD = sumD + nominalRp;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                                sumK = sumK + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                                            }

                                        }
                                        else
                                        {
                                            if (Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID, NoPerkiraan01,
                                                                    uraian, nominalRp, 0, "D", mataUangRowID, nominal) != 0)
                                                sresult = "6 : Gagal menyimpan detail debet Jurnal";
                                        }
                                    }

                                    if (isRefund == true)
                                    {
                                        nominalRp = DPNominal;
                                        nominal = DPNominal;
                                    }
                                    // ini bagian NoPerk lain2 nya
                                    if (sresult == "Ok")
                                    {
                                        drowID = Guid.NewGuid();
                                        drowIDAvl  = Guid.NewGuid();
                                        drowIDTrd = Guid.NewGuid();  
                                        if (isSimulate == true)
                                        {
                                            //all
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan02;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = Tools.isNull(GetNamaPerkiraan(NoPerkiraan02), "");
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                            sumK = sumK + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;

                                            //trading
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowIDTrd;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowIDTrd;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan02;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = Tools.isNull(GetNamaPerkiraan(NoPerkiraan02), "");
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                            sumK = sumK + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;

                                            //avalis
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowIDAvl;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowIDAvl;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan02;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = Tools.isNull(GetNamaPerkiraan(NoPerkiraan02), "");
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                            sumK = sumK + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;


                                        }
                                        else
                                        {
                                            if (Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID, NoPerkiraan02,
                                                                uraian, 0, nominalRp, "K", mataUangRowID, nominal) != 0)
                                                sresult = "7 : Gagal menyimpan detail Kredit Journal";
                                        }
                                    }

                                    if (isRefund == true)
                                    {
                                        String tempNoPerkiraan;
                                        if (DPSelisih > 0) // Diskon Penjualan
                                        {
                                            // Discount Penj Motor Baru -- Debet
                                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);

                                            drowID = Guid.NewGuid();
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = "PJL/T/RFD - Disc.PJL - " + uraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Math.Abs(DPSelisih);
                                                sumD = sumD + Math.Abs(DPSelisih);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                                sumK = sumK + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(DPSelisih);
                                            }
                                            else
                                            {
                                                if (Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID, tempNoPerkiraan,
                                                                    "PJL/T/RFD - Disc.PJL - " + uraian, Math.Abs(DPSelisih), 0, "D", mataUangRowID, Math.Abs(DPSelisih)) != 0)
                                                    sresult = "7 : Gagal menyimpan detail Kredit Journal";
                                            }
                                        }
                                        else if (DPSelisih < 0)  // Pendapatan Dari Leasing
                                        {
                                            // Discount Penj Motor Baru -- Debet
                                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("RFLSG", "SHW", GlobalVar.CabangID);

                                            drowID = Guid.NewGuid();

                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = "PJL/T/RFD - PDPT.LSG - " + uraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                                sumD = sumD + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Math.Abs(DPSelisih);
                                                sumK = sumK + Math.Abs(DPSelisih);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(DPSelisih);
                                            }
                                            else
                                            {
                                                if (Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID, tempNoPerkiraan,
                                                                    uraian, 0, Math.Abs(DPSelisih), "K", mataUangRowID, Math.Abs(DPSelisih)) != 0)
                                                    sresult = "7 : Gagal menyimpan detail Kredit Journal";
                                            }
                                        }
                                    }

                                    // untuk Pendapatan Ditangguhkan - 210900130000
                                    if (isACR == "T" && sresult == "Ok")
                                    {
                                        String tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                                        // kalau iya, perlu proses jurnal Accrual
                                        drowID = Guid.NewGuid();
                                        drowIDAvl = Guid.NewGuid();
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                            sumD = sumD + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;

                                            //Avalis
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowIDAvl;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowIDAvl;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                            sumD = sumD + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;

                                        }
                                        else
                                        {
                                            if (Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID, tempNoPerkiraan,
                                                                uraian, nominalRp, 0, "D", mataUangRowID, nominal) != 0)
                                                sresult = "8 : Gagal menyimpan detail untuk Accrual - Pendapatan Ditangguhkan";
                                        }
                                    }

                                    // untuk Piutang Bunga - 110341130300 --- kyknya ini mestinya pend bunga kredit
                                    if (isACR == "T" && sresult == "Ok")
                                    {
                                        String tempNoPerkiraan;
                                        if (GlobalVar.CabangID.Contains("06"))
                                        {
                                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID); // PDTBNGK
                                        }
                                        else
                                        {
                                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                                        }
                                        // kalau iya, perlu proses jurnal Accrual
                                        drowID = Guid.NewGuid();
                                        drowIDAvl = Guid.NewGuid();
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                            sumK = sumK + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;

                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowIDAvl;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowIDAvl;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                            sumK = sumK + nominalRp;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                                        }
                                        else
                                        {
                                            if (Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID, tempNoPerkiraan,
                                                                uraian, 0, nominalRp, "K", mataUangRowID, nominal) != 0)
                                                sresult = "9 : Gagal menyimpan detail untuk Accrual - Piutang Bunga";
                                        }
                                    }

                                    if (isSimulate == true)
                                    {

                                        //set header Debet Kredit.
                                        string hid = dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"].ToString();
                                        sumD = Convert.ToDouble( dtDetail.Compute("SUM(Debet)","HeaderID='" + hid +"'"));
                                        sumK = Convert.ToDouble( dtDetail.Compute("SUM(Kredit)","HeaderID='" + hid +"'"));

                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                                    }
                                    else
                                    {
                                        UpdateJournalRowID(db, "usp_PenerimaanUang_UPDATE_JournalRowID", penerimaanRowID, rowID);
                                        //db.Commands.Clear();
                                        //db.Commands.Add(db.CreateCommand("usp_PenerimaanUang_UPDATE_JournalRowID"));
                                        //db.Commands[0].Parameters.Add(new Parameter("@RowID",SqlDbType.UniqueIdentifier,penerimaanRowID));
                                        //db.Commands[0].Parameters.Add(new Parameter("@JournalRowID",SqlDbType.UniqueIdentifier,rowID));
                                        //db.Commands[0].ExecuteNonQuery();
                                        db.Commands.Clear();
                                    }
                                }
                            }
                            catch (Exception ex)
                            {
                                error++;

                                if (isSimulate == true)
                                {
                                    MessageBox.Show("Eksepsi : \n" + ex.Message);
                                }
                                else
                                {
                                    sresult = "Eksepsi : \n" + ex.Message;
                                    //System.Windows.Forms.MessageBox.Show(ex.Message);
                                }

                            }
                            finally
                            {
                                if (isSimulate == true)
                                {
                                }
                                else
                                {
                                    if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                                }
                            }

                        }
                    }
                    else sresult = "2 : Data Tidak ditemukan";
                }
                catch (Exception ex) { error++; Error.LogError(ex, "Error"); }
            }
            return sresult;
        }

        public static string JournalPengeluaran(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid pengeluaranROwID, ref int error)
        {
            #region Load Data Pembayaran Pembelian Showroom
            // ini bagian untuk data pengeluaran uang dari pembelian di Showroom
            bool isPPB = false;
            String JnsPembelian = "";
            String JnsPembayaran = "";
            Double UangMuka = 0;
            Double NominalBayar = 0;
            Double HargaJadi = 0;
            Double HargaOff = 0;
            String Kondisi = "";
            String FlagSource = "";
            String NoPol = "";
            DataTable dummyppb = new DataTable();

            Double sumD = 0, sumK = 0;

            String UnitUsaha="";

            using (Database dbppb = new Database())
            {
                dbppb.Commands.Add(dbppb.CreateCommand("usp_PengeluaranUang_Link_PembayaranPemb"));
                dbppb.Commands[0].Parameters.Add(new Parameter("@PengeluaranUangRowID", SqlDbType.UniqueIdentifier, pengeluaranROwID));
                dummyppb = dbppb.Commands[0].ExecuteDataTable();
                if (dummyppb.Rows.Count > 0)
                {
                    if (dummyppb.Rows[0]["isPPB"].ToString() == "T")
                    {
                        isPPB = true;
                        JnsPembelian = Tools.isNull(dummyppb.Rows[0]["TipePembelian"], "").ToString();
                        JnsPembayaran = Tools.isNull(dummyppb.Rows[0]["JenisPembayaran"], "").ToString();
                        UangMuka = Convert.ToDouble(Tools.isNull(dummyppb.Rows[0]["UangMuka"], 0).ToString());
                        NominalBayar = Convert.ToDouble(Tools.isNull(dummyppb.Rows[0]["Nominal"], 0).ToString());
                        HargaJadi = Convert.ToDouble(Tools.isNull(dummyppb.Rows[0]["HargaJadi"], 0).ToString());
                        HargaOff = Convert.ToDouble(Tools.isNull(dummyppb.Rows[0]["HargaOff"], 0).ToString());
                        NoPol = Tools.isNull(dummyppb.Rows[0]["NoPol"], "").ToString();
                        Kondisi = Tools.isNull(dummyppb.Rows[0]["Kondisi"], "").ToString(); // "BARU" / "BEKAS"
                        FlagSource = Tools.isNull(dummyppb.Rows[0]["FlagSource"], "").ToString(); // "ORI" / "BARU"
                        UnitUsaha = Tools.isNull(dummyppb.Rows[0]["UnitUsaha"], "").ToString();
                    }
                    else
                    {
                        isPPB = false;
                    }
                }
                else
                {
                    isPPB = false;
                }
            }

            #endregion

            clsPengeluaran _pengeluaran = new clsPengeluaran(pengeluaranROwID);
            string sresult = (_pengeluaran.State == clsPengeluaran.enumState.Empty) ? "1 : Data pengeluaran tidak dapat diambil" : "Ok";
            if (sresult == "Ok")
                //                if (_pengeluaran.CabangDariID != _pengeluaran.CabangKeID) nresult = 2;
                //                else
                if (_pengeluaran.StatusApproval != GlobalVar.enumStatusApproval.Closed) sresult = "3 : Status Approval belum selesai";
                else if (_pengeluaran.Tanggal == DateTime.MinValue) sresult = "4 : Tanggal masih kosong";
                else if ((_pengeluaran.PerusahaanDariRowID == null) || (_pengeluaran.PerusahaanDariRowID == Guid.Empty)) sresult = "5 : Tidak diketahui PT Pembuat Transaksi";
                else if ((_pengeluaran.JournalRowID != null) && (_pengeluaran.JournalRowID != Guid.Empty)) sresult = "8 : Sudah di-Journal";

            //                else if (string.IsNullOrEmpty(_pengeluaran.NoPerkiraan01)) nresult = 6;
            //                else if (string.IsNullOrEmpty(_pengeluaran.NoPerkiraan02)) nresult = 7;
            if (sresult == "Ok")
            {
                using (Database db = new Database())
                {
                    try
                    {
                        Guid rowID = Guid.NewGuid();
                        Guid rowID2 = Guid.Empty;
                        Guid drowID;
                        string recID = Tools.CreateFingerPrint();
                        db.BeginTransaction();
                        int result;
                        #region Journal PPB Pengeluaran
                        if (isPPB == true)
                        // per 8 Oktober 2014 diubah bukan ke persediaan barang tapi ke hutang pembelian / hutang usaha motor jadinya!
                        {
                            DateTime tanggal = (_pengeluaran.JnsPengeluaran == "G") ? _pengeluaran.DueDateGiro : _pengeluaran.Tanggal;
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = tanggal;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = _pengeluaran.NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "KLR";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = "Pengeluaran Kas / Bank - PBL Showroom";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;

                                result = 0;
                            }
                            else
                            {
                                result = Journal.AddHeader_ver_4(db, _pengeluaran.PerusahaanDariRowID, rowID, recID, tanggal, _pengeluaran.NoBukti, "Pengeluaran Kas / Bank - PBL Showroom", "KLR", _pengeluaran.GudangID, false, UnitUsaha);
                            }

                            String tempPerkiraanDebet = "";
                            String tempPerkiraanKredit = "";
                            String tempPerkiraanDebet2 = "";
                            String tempPerkiraanKredit2 = "";
                            String tempUraian = "";

                            if (JnsPembelian.ToUpper() == "TUNAI") // klo tunai langsung ke persediaan barang aja!
                            {
                                if (JnsPembayaran.ToUpper() == "PLS") // ini berarti data Migrasi
                                {
                                    Double nHutangPembelian = NominalBayar;
                                    Double nKasBank = NominalBayar;

                                    // Hutang Usaha -- Debet
                                    if (GlobalVar.CabangID.Contains("06"))
                                    {
                                        if (Kondisi.ToLower() == "baru")
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID); // PSDBRGBR
                                        }
                                        else if (Kondisi.ToLower() == "bekas")
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID); // PSDBRGLM
                                        }
                                    }
                                    else
                                    {
                                        tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID); // PSDBRG masuk ke persediaan barang
                                    }
                                    tempUraian = "PBL/T/PLS - HTG.PBL - " + NoPol + _pengeluaran.Uraian; // PSDBRG.PBL
                                    // DEBETNYA - Persediaan Barang ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangPembelian;
                                            sumD = sumD + nHutangPembelian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangPembelian;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nHutangPembelian, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nHutangPembelian);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/T/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/T/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";
                                }
                                else if (JnsPembayaran.ToUpper() == "ANG") // Ini berarti pelunasan
                                {
                                    Double nHutangPembelian = NominalBayar;
                                    Double nKasBank = NominalBayar;

                                    // Hutang Usaha -- Debet
                                    if (GlobalVar.CabangID.Contains("06"))
                                    {
                                        if (Kondisi.ToLower() == "baru")
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID); // PSDBRGBR
                                        }
                                        else if (Kondisi.ToLower() == "bekas")
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID); // PSDBRGLM
                                        }
                                    }
                                    else
                                    {
                                        tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID); // PSDBRG
                                    }
                                    tempUraian = "PBL/T/PLS - HTG.PBL - " + NoPol + _pengeluaran.Uraian; // PSDBRG.PBL
                                    // DEBETNYA - Persediaan Barang, serius ? ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangPembelian;
                                            sumD = sumD + nHutangPembelian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangPembelian;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nHutangPembelian, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nHutangPembelian);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/T/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/T/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";

                                }
                                else if (JnsPembayaran.ToUpper() == "REP")
                                {
                                    Double nBiayaReparasi = NominalBayar;
                                    Double nKasBank = NominalBayar;

                                    // Biaya Reparasi -- Debet
                                    tempPerkiraanDebet = GetPerkiraanKoneksiDetail("PSBREP", "SHW", GlobalVar.CabangID);  // sebelum GetPerkiraanKoneksiDetail("BYAREP", "SHW", GlobalVar.CabangID)
                                    tempUraian = "PBL/T/REP - B.REPARASI - " + NoPol + _pengeluaran.Uraian;
                                    // DEBETNYA - Biaya Reparasi ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nBiayaReparasi;
                                            sumD = sumD + nBiayaReparasi;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBiayaReparasi;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nBiayaReparasi, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nBiayaReparasi);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/T/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "K") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/T/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";
                                }
                                else if (JnsPembayaran.ToUpper() == "TAM")
                                {
                                    Double nBiayaTambahan = NominalBayar;
                                    Double nKasBank = NominalBayar;

                                    // Biaya Tambahan -- Debet
                                    tempPerkiraanDebet = GetPerkiraanKoneksiDetail("PSBREP", "SHW", GlobalVar.CabangID); //sebelum GetPerkiraanKoneksiDetail("BYATAM", "SHW", GlobalVar.CabangID);
                                    tempUraian = "PBL/T/TAM - B.TAMBAHAN - " + NoPol + _pengeluaran.Uraian;
                                    // DEBETNYA - Biaya Tambahan ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nBiayaTambahan;
                                            sumD = sumD + nBiayaTambahan;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBiayaTambahan;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nBiayaTambahan, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nBiayaTambahan);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/T/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "K") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/T/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";
                                }
                            }
                            else if (JnsPembelian.ToUpper() == "KREDIT")
                            {
                                if (JnsPembayaran.ToUpper() == "PLS") // ini berarti data migrasi
                                {
                                    if (NominalBayar == UangMuka) // anggap bayaran DP
                                    {
                                        Double nHutangPembelian = NominalBayar; // Debet
                                        Double nKasBank = NominalBayar; // Kredit

                                        if (GlobalVar.CabangID.Contains("06"))
                                        {
                                            if (Kondisi.ToLower() == "baru")
                                            {
                                                tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID);
                                            }
                                            else if (Kondisi.ToLower() == "bekas")
                                            {
                                                tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID);
                                            }
                                        }
                                        else
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID);
                                        }
                                        tempUraian = "PBL/K/PLSDP - HTG.PBL - " + NoPol + _pengeluaran.Uraian;
                                        // DEBETNYA - Hutang Pembelian ===============================================================
                                        if (result == 0)
                                        {
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangPembelian;
                                                sumD = sumD + nHutangPembelian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                                sumK = sumK + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangPembelian;
                                                result = 0;
                                            }
                                            else
                                            {
                                                result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                            tempPerkiraanDebet, tempUraian,
                                                                            nHutangPembelian, 0, "D", _pengeluaran.MataUangRowID,
                                                                            nHutangPembelian);
                                            }
                                        }
                                        else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                        // Kas/Bank -- Kredit
                                        if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                        {
                                            tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                            tempUraian = "PBL/K/PLSDP - Kas - " + NoPol + _pengeluaran.Uraian;
                                        }
                                        else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                        {
                                            tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                            tempUraian = "PBL/K/PLSDP - Bank - " + NoPol + _pengeluaran.Uraian;
                                        }
                                        // KREDITNYA Kas/Bank =========================================================================
                                        if (result == 0)
                                        {
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                                sumD = sumD + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                                sumK = sumK + nKasBank;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                                result = 0;
                                            }
                                            else
                                            {
                                                result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                            tempPerkiraanKredit, tempUraian, 0,
                                                                            nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                            nKasBank);
                                                if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                            }
                                        }
                                        else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";
                                    }
                                    else // selain itu anggap pelunasan
                                    {
                                        Double nHutangPembelian = NominalBayar; // Debet
                                        Double nKasBank = NominalBayar; // Kredit

                                        // Hutang Usaha -- Debet
                                        if (GlobalVar.CabangID.Contains("06"))
                                        {
                                            if (Kondisi.ToLower() == "baru")
                                            {
                                                tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID);
                                            }
                                            else if (Kondisi.ToLower() == "bekas")
                                            {
                                                tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID);
                                            }
                                        }
                                        else
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID);
                                        }
                                        tempUraian = "PBL/K/PLS - HTG.PBL - " + NoPol + _pengeluaran.Uraian;
                                        // DEBETNYA - Hutang Pembelian ===============================================================
                                        if (result == 0)
                                        {
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangPembelian;
                                                sumD = sumD + nHutangPembelian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                                sumK = sumK + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangPembelian;
                                                result = 0;
                                            }
                                            else
                                            {
                                                result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                            tempPerkiraanDebet, tempUraian,
                                                                            nHutangPembelian, 0, "D", _pengeluaran.MataUangRowID,
                                                                            nHutangPembelian);
                                            }
                                        }
                                        else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                        // Kas/Bank -- Kredit
                                        if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                        {
                                            tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                            tempUraian = "PBL/K/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                        }
                                        else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                        {
                                            tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                            tempUraian = "PBL/K/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                        }
                                        // KREDITNYA2 Kas/Bank =========================================================================
                                        if (result == 0)
                                        {
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                                sumD = sumD + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                                sumK = sumK + nKasBank;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                                result = 0;
                                            }
                                            else
                                            {
                                                result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                            tempPerkiraanKredit, tempUraian, 0,
                                                                            nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                            nKasBank);
                                                if (result != 0) sresult = "KDT2_SHW : Gagal Journal Kredit2 - jurnal pengeluaran showroom";
                                            }
                                        }
                                        else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";
                                    }
                                }
                                else if (JnsPembayaran.ToUpper() == "UMK") // ini berarti DP
                                {
                                    Double nHutangPembelian = NominalBayar; // Debet
                                    Double nKasBank = NominalBayar; // Kredit

                                    // Hutang Usaha -- Debet
                                    if (GlobalVar.CabangID.Contains("06"))
                                    {
                                        if (Kondisi.ToLower() == "baru")
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID);
                                        }
                                        else if (Kondisi.ToLower() == "bekas")
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID);
                                        }
                                    }
                                    else
                                    {
                                        tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID);
                                    }
                                    tempUraian = "PBL/K/PLSDP - HTG.PBL - " + NoPol + _pengeluaran.Uraian;
                                    // DEBETNYA - Hutang Pembelian ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangPembelian;
                                            sumD = sumD + nHutangPembelian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangPembelian;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nHutangPembelian, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nHutangPembelian);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/K/PLSDP - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/K/PLSDP - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";
                                }
                                else if (JnsPembayaran.ToUpper() == "ANG") // ini berarti pelunasan kredit
                                {
                                    Double nHutangPembelian = NominalBayar; // Debet
                                    Double nKasBank = NominalBayar; // Kredit

                                    // Hutang Usaha -- Debet
                                    if (GlobalVar.CabangID.Contains("06"))
                                    {
                                        if (Kondisi.ToLower() == "baru")
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID);
                                        }
                                        else if (Kondisi.ToLower() == "bekas")
                                        {
                                            tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID);
                                        }
                                    }
                                    else
                                    {
                                        tempPerkiraanDebet = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID);
                                    }
                                    tempUraian = "PBL/K/PLS - HTG.PBL - " + NoPol + _pengeluaran.Uraian;
                                    // DEBETNYA - Hutang Pembelian ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangPembelian;
                                            sumD = sumD + nHutangPembelian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangPembelian;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nHutangPembelian, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nHutangPembelian);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/K/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/K/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA2 Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                    tempPerkiraanKredit, tempUraian, 0,
                                                                    nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                    nKasBank);
                                        if (result != 0) sresult = "KDT2_SHW : Gagal Journal Kredit2 - jurnal pengeluaran showroom";
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";
                                }
                                else if (JnsPembayaran.ToUpper() == "REP")
                                {
                                    Double nBiayaReparasi = NominalBayar;
                                    Double nKasBank = NominalBayar;

                                    // Biaya Reparasi -- Debet
                                    tempPerkiraanDebet = GetPerkiraanKoneksiDetail("BYAREP", "SHW", GlobalVar.CabangID);
                                    tempUraian = "PBL/K/REP - Biaya Reparasi - " + NoPol + _pengeluaran.Uraian;
                                    // DEBETNYA - Biaya Reparasi ===============================================================
                                    if (result == 0)
                                        result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                    tempPerkiraanDebet, tempUraian,
                                                                    nBiayaReparasi, 0, "D", _pengeluaran.MataUangRowID,
                                                                    nBiayaReparasi);
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";


                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/K/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/K/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";

                                }
                                else if (JnsPembayaran.ToUpper() == "TAM")
                                {
                                    Double nBiayaTambahan = NominalBayar;
                                    Double nKasBank = NominalBayar;

                                    // Biaya Tambahan -- Debet
                                    tempPerkiraanDebet = GetPerkiraanKoneksiDetail("BYATAM", "SHW", GlobalVar.CabangID);
                                    tempUraian = "PBL/K/TAM - B.TAMBAHAN - " + NoPol + _pengeluaran.Uraian;
                                    // DEBETNYA - Biaya Reparasi ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nBiayaTambahan;
                                            sumD = sumD + nBiayaTambahan;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBiayaTambahan;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nBiayaTambahan, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nBiayaTambahan);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";


                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/K/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/K/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";

                                }
                            }

                            #region jurnal BKK tarikan by heri
                            else if (JnsPembelian.ToUpper() == "TRK") //tambahan heri utk BKK tarikan, sebelumnya cuma kebentuk header jurnal, detailnya 0 rows
                            {
                                // MessageBox.Show ("Jurnal Tarikan kakak...");
                                if (JnsPembayaran.ToUpper() == "TAM")
                                {
                                    Double nBiayaTambahan = NominalBayar;
                                    Double nKasBank = NominalBayar;

                                    // Biaya Tambahan -- Debet
                                    tempPerkiraanDebet = GetPerkiraanKoneksiDetail("BYATRK", "SHW", GlobalVar.CabangID);
                                    tempUraian = "PBL/K/TAM - B.TAMBAHAN - " + NoPol + _pengeluaran.Uraian;
                                    // DEBETNYA - Biaya Reparasi ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nBiayaTambahan;
                                            sumD = sumD + nBiayaTambahan;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBiayaTambahan;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nBiayaTambahan, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nBiayaTambahan);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";


                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/K/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "B") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/K/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";

                                }
                                else if (JnsPembayaran.ToUpper() == "REP")
                                {
                                    Double nBiayaReparasi = NominalBayar;
                                    Double nKasBank = NominalBayar;

                                    // Biaya Reparasi -- Debet
                                    tempPerkiraanDebet = GetPerkiraanKoneksiDetail("PSBREP", "SHW", GlobalVar.CabangID);  // sebelum GetPerkiraanKoneksiDetail("BYAREP", "SHW", GlobalVar.CabangID)
                                    tempUraian = "PBL/T/REP - B.REPARASI - " + NoPol + _pengeluaran.Uraian;
                                    // DEBETNYA - Biaya Reparasi ===============================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanDebet;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanDebet);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nBiayaReparasi;
                                            sumD = sumD + nBiayaReparasi;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                            sumK = sumK + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBiayaReparasi;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanDebet, tempUraian,
                                                                        nBiayaReparasi, 0, "D", _pengeluaran.MataUangRowID,
                                                                        nBiayaReparasi);
                                        }
                                    }
                                    else sresult = "DBT_SHW : Gagal Journal Debet - jurnal pengeluaran showroom";

                                    // Kas/Bank -- Kredit
                                    if (_pengeluaran.JnsPengeluaran == "K") // berarti kas
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanKas_byName("Kas Besar");
                                        tempUraian = "PBL/T/PLS - Kas - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    else if (_pengeluaran.JnsPengeluaran == "K") // berarti transfer
                                    {
                                        tempPerkiraanKredit = AutoJournal.GetPerkiraanRekening(_pengeluaran._rekeningRowID);
                                        tempUraian = "PBL/T/PLS - Bank - " + NoPol + _pengeluaran.Uraian;
                                    }
                                    // KREDITNYA Kas/Bank =========================================================================
                                    if (result == 0)
                                    {
                                        if (isSimulate == true)
                                        {
                                            dtDetail.Rows.Add();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempPerkiraanKredit;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempPerkiraanKredit);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                            sumD = sumD + 0;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nKasBank;
                                            sumK = sumK + nKasBank;
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nKasBank;
                                            result = 0;
                                        }
                                        else
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                        tempPerkiraanKredit, tempUraian, 0,
                                                                        nKasBank, "K", _pengeluaran.MataUangRowID,
                                                                        nKasBank);
                                            if (result != 0) sresult = "KDT_SHW : Gagal Journal Kredit - jurnal pengeluaran showroom";
                                        }
                                    }
                                    else sresult = "HDR_SHW : Gagal Journal Header - jurnal pengeluaran showroom";
                                }

                            }
                            #endregion
                            //end jurnal tarikan

                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                        }
                        #endregion
                        else
                        {   // ini pengeluaran selain dari pembelian motor yang di showroom
                            DateTime tanggal = (_pengeluaran.JnsPengeluaran == "G") ? _pengeluaran.DueDateGiro : _pengeluaran.Tanggal;

                            if (isSimulate == true)
                            {
                                //Untuk All
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = tanggal;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = _pengeluaran.NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "KLR";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = "Pengeluaran Kas / Bank - PBL Showroom";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = _pengeluaran.UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";

                                result = 0;
                            }
                            else
                            {
                                result = Journal.AddHeader_ver_4(db, _pengeluaran.PerusahaanDariRowID, rowID, recID, tanggal, _pengeluaran.NoBukti, "Pengeluaran Kas / Bank", "KLR", _pengeluaran.GudangID, false, UnitUsaha);
                            }
                            if (result == 0)
                            {
                                drowID = Guid.NewGuid();
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = _pengeluaran.NoPerkiraan01;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(_pengeluaran.NoPerkiraan01);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = _pengeluaran.Uraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = _pengeluaran.NominalRp;
                                    sumD = sumD + _pengeluaran.NominalRp;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = _pengeluaran.NominalRp;
                                    result = 0;
                                }
                                else
                                {
                                    result = Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID,
                                                        _pengeluaran.NoPerkiraan01, _pengeluaran.Uraian, _pengeluaran.NominalRp,
                                                        0, "D", _pengeluaran.MataUangRowID, _pengeluaran.Nominal);
                                }

                                if (result == 0)
                                {
                                    drowID = Guid.NewGuid();
                                    if (isSimulate == true)
                                    {
                                        dtDetail.Rows.Add();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = _pengeluaran.NoPerkiraan02;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(_pengeluaran.NoPerkiraan02);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = _pengeluaran.Uraian;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                        sumD = sumD + 0;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = _pengeluaran.NominalRp;
                                        sumK = sumK + _pengeluaran.NominalRp;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = _pengeluaran.NominalRp;
                                        result = 0;
                                    }
                                    else
                                    {
                                        result = Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID,
                                                            _pengeluaran.NoPerkiraan02, _pengeluaran.Uraian, 0, _pengeluaran.NominalRp,
                                                            "K", _pengeluaran.MataUangRowID, _pengeluaran.Nominal);
                                        if (result != 0) sresult = "11 : Gagal Journal Detail Kredit";
                                    }
                                }
                                else sresult = "10 : Gagal Journal Debet";
                            }
                            else sresult = "9 : Gagal Update Journal Header";

                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }

                            if ((result == 0) && (_pengeluaran.Journal2 == true))
                            {
                                sumD = 0;
                                sumK = 0;
                                rowID2 = Guid.NewGuid();
                                recID = Tools.CreateFingerPrint();
                                string noPenerimaan = _pengeluaran.NoBukti;
                                string src = "KLR";
                                switch (_pengeluaran.PengeluaranKe)
                                {
                                    case 0:
                                        {

                                        } break;
                                    case 2:
                                        {
                                            DataTable dt = clsPenerimaan.DBGetByGroupRowID(_pengeluaran.RowID);
                                            if (dt.Rows.Count > 0) noPenerimaan = Tools.isNull(dt.Rows[0]["NoBukti"], "").ToString();
                                            src = "TRM";
                                        } break;
                                    default: noPenerimaan = _pengeluaran.NoBukti; break;
                                }
                                if (string.IsNullOrEmpty(noPenerimaan)) noPenerimaan = _pengeluaran.NoBukti;


                                if (isSimulate == true)
                                {
                                    dtHeader.Rows.Add();
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID2;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = _pengeluaran.Tanggal;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noPenerimaan;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = _pengeluaran.CabangKeID;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = src;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = _pengeluaran.Uraian;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;

                                    result = 0;
                                }
                                else
                                {
                                    result = Journal.AddHeader_ver_4(db, _pengeluaran.PerusahaanKeRowID, rowID2, recID,
                                                                _pengeluaran.Tanggal, noPenerimaan, _pengeluaran.Uraian, src,
                                                                _pengeluaran.CabangKeID, false, UnitUsaha);
                                }

                                if (result == 0)
                                {
                                    if (isSimulate == true)
                                    {
                                        dtDetail.Rows.Add();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID2;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = _pengeluaran.NoPerkiraan03;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(_pengeluaran.NoPerkiraan03);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = _pengeluaran.Uraian;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = _pengeluaran.NominalRp;
                                        sumD = sumD + _pengeluaran.NominalRp;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                        sumK = sumK + 0;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = _pengeluaran.NominalRp;
                                        result = 0;
                                    }
                                    else
                                    {
                                        result = Journal.AddDetail(db, Guid.NewGuid(), rowID2, Tools.CreateFingerPrint(), recID,
                                                                    _pengeluaran.NoPerkiraan03, _pengeluaran.Uraian,
                                                                    _pengeluaran.NominalRp, 0, "D", _pengeluaran.MataUangRowID,
                                                                    _pengeluaran.Nominal);
                                    }
                                }
                                else sresult = "12 : Gagal Journal ke-2 Detail Debet";

                                if (result == 0)
                                {
                                    if (isSimulate == true)
                                    {
                                        dtDetail.Rows.Add();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID2;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = _pengeluaran.NoPerkiraan04;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(_pengeluaran.NoPerkiraan04);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = _pengeluaran.Uraian;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                        sumD = sumD + 0;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = _pengeluaran.NominalRp;
                                        sumK = sumK + _pengeluaran.NominalRp;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(_pengeluaran.MataUangRowID);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = _pengeluaran.NominalRp;
                                        result = 0;
                                    }
                                    else
                                    {
                                        result = Journal.AddDetail(db, Guid.NewGuid(), rowID2, Tools.CreateFingerPrint(), recID,
                                                                    _pengeluaran.NoPerkiraan04, _pengeluaran.Uraian, 0,
                                                                    _pengeluaran.NominalRp, "K", _pengeluaran.MataUangRowID,
                                                                    _pengeluaran.Nominal);
                                        if (result != 0) sresult = "13 : Gagal Journal ke-2 Detail Kredit";
                                    }
                                }
                                else sresult = "13 : Gagal Journal ke-2 Header";

                                if (isSimulate == true)
                                {
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                                }
                            }
                        }

                        if (isSimulate == true)
                        {
                        }
                        else
                        {
                            if (result == 0)
                            {
                                UpdateJournalRowID(db, "usp_PengeluaranUang_UPDATE_JournalRowID", pengeluaranROwID, rowID);
                                if (rowID2 != Guid.Empty)
                                {
                                    UpdateJournalRowID(db, "usp_PenerimaanUang_UPDATE_JournalRowID", pengeluaranROwID, rowID2);
                                    UpdateJournalRowID(db, "usp_PengeluaranUang_UPDATE_JournalGroupRowID", pengeluaranROwID, rowID2);
                                }
                                db.Commands.Clear();
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        error++;

                        if (isSimulate == true)
                        {
                            MessageBox.Show("Exception Error : " + ex.Message);
                        }
                        else
                        {
                            sresult = "Exception Error : " + ex.Message;
                        }
                    }
                    finally
                    {
                        if (isSimulate == true)
                        {
                        }
                        else
                        {
                            if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                        }
                    }
                }
            }
            return sresult;
        }

        public static string JournalMutasi(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid mutasiRowID, ref int error)
        {
            string sresult = "Ok";

            Double sumD = 0, sumK = 0;

            if ((mutasiRowID != null) && (mutasiRowID != Guid.Empty))
            {
                List<Parameter> prm = new List<Parameter>();
                prm.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, mutasiRowID));
                DataTable dt = Tools.DBGetDataTable("usp_MutasiUang_LIST", prm);
                if (dt.Rows.Count > 0)
                {
                    try
                    {
                        DataRow dr = dt.Rows[0];
                        string noBukti = Tools.isNull(dr["NoBukti"], "").ToString();
                        string uraian = Tools.isNull(dr["Uraian"], "").ToString();
                        double nominalDari = double.Parse(Tools.isNull(dr["NominalDari"], "0").ToString());
                        double nominalKe = double.Parse(Tools.isNull(dr["NominalKe"], "0").ToString());
                        double nominalDariRp = double.Parse(Tools.isNull(dr["NominalDariRp"], nominalDari).ToString());
                        double nominalKeRp = double.Parse(Tools.isNull(dr["NominalKeRp"], nominalKe).ToString());
                        DateTime tanggal = (DateTime)Tools.isNull(dr["Tanggal"], DateTime.MinValue);

                        string jnstrans = Tools.isNull(dr["JnsPenerimaan"], "0").ToString();
                        string transvia = (jnstrans == "0") ? "KasKeRowID" : "RekeningKeRowID";
                        Guid rekRowID = (Guid)Tools.isNull(dr[transvia], Guid.Empty);
                        string noPerkiraan01 = ((jnstrans == "0") ? AutoJournal.GetPerkiraanKas(rekRowID) : AutoJournal.GetPerkiraanRekening(rekRowID));

                        jnstrans = Tools.isNull(dr["JnsPengeluaran"], "0").ToString();
                        transvia = (jnstrans == "0") ? "KasDariRowID" : "RekeningDariRowID";
                        rekRowID = (Guid)Tools.isNull(dr[transvia], Guid.Empty);
                        string noPerkiraan02 = ((jnstrans == "0") ? AutoJournal.GetPerkiraanKas(rekRowID) : AutoJournal.GetPerkiraanRekening(rekRowID));

                        Guid mataUangDariRowID = (Guid)Tools.isNull(dr["MataUangDariRowID"], Guid.Empty);
                        Guid mataUangKeRowID = (Guid)Tools.isNull(dr["MataUangKeRowID"], Guid.Empty);

                        String UnitUsaha = Tools.isNull(dr["UnitUsaha"], "0").ToString();

                        Database db = new Database();
                        if (sresult == "Ok")
                        {
                            try
                            {
                                if (isSimulate == true)
                                {
                                }
                                else
                                {
                                    db.BeginTransaction();
                                }

                                int result = 0;
                                //DateTime tanggal = GlobalVar.GetServerDate;
                                Guid rowID = Guid.NewGuid();
                                string recID = Tools.CreateFingerPrint();
                                //Header
                                if (isSimulate == true)
                                {
                                    dtHeader.Rows.Add();
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = tanggal;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "MTS";
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = uraian;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                                }
                                else
                                {
                                    result = Journal.AddHeader_ver_4(db, GlobalVar.PerusahaanRowID, rowID, recID, tanggal,
                                                        noBukti, uraian, "MTS", GlobalVar.Gudang, false, UnitUsaha);
                                }

                                //Debet
                                if (result == 0)
                                {
                                    if (isSimulate == true)
                                    {
                                        dtDetail.Rows.Add();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan01;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan01);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalDariRp;
                                        sumD = sumD + nominalDariRp;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                        sumK = sumK + 0;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangKeRowID);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalDariRp;
                                    }
                                    else
                                    {
                                        result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                    noPerkiraan01, uraian, nominalDariRp, 0, "D", mataUangKeRowID, nominalDari);
                                    }
                                }
                                else sresult = "Gagal Update Header Journal";

                                //Kredit
                                if (result == 0)
                                {
                                    if (isSimulate == true)
                                    {
                                        dtDetail.Rows.Add();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan02;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan02);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                        sumD = sumD + 0;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalKeRp;
                                        sumK = sumK + nominalKeRp;
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangKeRowID);
                                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalKeRp;
                                    }
                                    else
                                    {
                                        result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                    noPerkiraan02, uraian, 0, nominalKeRp, "K", mataUangDariRowID, nominalKe);
                                        if (result != 0) sresult = "Gagal Update Detail #2";
                                    }
                                }
                                else sresult = "Gagal Update Detail #1";

                                //Update JournalRowID di tabel MutasiUang

                                if (isSimulate == true)
                                {
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                                }
                                else
                                {
                                    if (result == 0)
                                    {
                                        db.Commands.Clear();
                                        db.Commands.Add(db.CreateCommand("usp_MutasiUang_Update_JournalRowID"));
                                        db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, mutasiRowID));
                                        db.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, rowID));
                                        db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                                        db.Commands[0].ExecuteNonQuery();
                                    }
                                }
                            }
                            catch (Exception ex)
                            {
                                error++;
                                if (isSimulate == true)
                                {
                                    MessageBox.Show(ex.Message);
                                }
                                else
                                {
                                    sresult = ex.Message;
                                }
                            }
                            finally
                            {
                                if (isSimulate == true)
                                {
                                }
                                else
                                {
                                    if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                                }
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        error++;

                        if (isSimulate == true)
                        {
                            MessageBox.Show(ex.Message);
                        }
                        else
                        {
                            sresult = ex.Message;
                        }
                    }
                }
            }
            return sresult;
        }

        public static string JournalGiroMasuk(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid giroHistoryRowID, ref int error)
        {
            string sresult = "Ok";
            try
            {
                using (Database db = new Database())
                {
                    db.Commands.Add(db.CreateCommand("usp_GiroHistory_LIST"));
                    db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, giroHistoryRowID));
                    DataTable dt = db.Commands[0].ExecuteDataTable();
                    if (dt.Rows.Count > 0) sresult = JournalGiroMasuk(isSimulate, ref dtHeader, ref dtDetail, dt.Rows[0]);
                }
            }
            catch
            {
                error++;

                if (sresult == "Ok") sresult = "Data Giro tidak ditemukan";
            }
            return sresult;
        }

        public static string JournalGiroMasuk(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, DataRow dr)
        {
            string sresult = "Ok";

            // ganti using nya jadi manual, biar bisa di try catch
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            Double sumD = 0, sumK = 0;
            int counterdb = 0;
            int counterdbf = 0;

            if (isSimulate == true)
            {
            }
            else
            {
                db.BeginTransaction();
                dbf.BeginTransaction();
            }

            try
            {
                #region VARIABLES
                clsHistoryGiro.enumArahGiro arahGiro = (clsHistoryGiro.enumArahGiro)Convert.ToByte(dr["JnsGiro"]);
                string noGiro = dr.Field<string>("NoGiro");
                DateTime tanggal = dr.Field<DateTime>("Tanggal");
                clsHistoryGiroMasuk.enumStatusGiroMasuk statusGiro = (clsHistoryGiroMasuk.enumStatusGiroMasuk)Convert.ToByte(dr["StatusGiro"]);
                Guid giroRowID = dr.Field<Guid>("RowID");
                Guid refID = dr.Field<Guid>("RefID");
                Guid rekeningRowID = dr.Field<Guid>("RekeningRowID");
                Guid mataUangRowID = Guid.Empty;
                Guid journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);
                Guid JnsTransaksiRowID = Guid.Empty;
                List<Parameter> parameters;
                string noPerkiraan = "";
                string noPerkiraan01 = "";
                string noPerkiraan02 = "";
                double nominal = 0;
                double nominalRp = 0;
                Guid perusahaanDariRowID = Guid.Empty;
                Guid perusahaanKeRowID = Guid.Empty;
                string cabangDariID = "";
                string cabangKeID = "";
                string ketStatus = "";
                string noBukti = "";
                string uraian = "";
                int StatusGiro = dr.Field<int>("StatusGiro");

                // tambahan buat tahu sumber tabelnya
                string TBLSRC = dr.Field<String>("TBLSRC");
                string RefIDCair = dr.Field<String>("RefIDCair");
                String OverrideNoPerkiraan = "F";
                Guid PenerimaanUangRowID = Guid.Empty;
                int penerimaanDari = 0;
                string KodeTrans = "";
                string KodeTransPJL = "";
                String tempJnsTransaksi = "";
                Double OverrideNominalPokok = Double.MinValue;
                Double OverrideNominalBunga = Double.MinValue;

                bool doACR = false;
                string NoPerkiraanUMT = "notUMT";
                #endregion

                // else if (statusGiro == clsHistoryGiroMasuk.enumStatusGiroMasuk.Diterima) sresult = "2a : Penerimaan Giro dijurnal di PenerimaanUang";
                if (arahGiro != clsHistoryGiro.enumArahGiro.Masuk) sresult = "2 : Bukan Giro Masuk";
                else if (string.IsNullOrEmpty(noGiro)) sresult = "3 : No. Giro Kosong";
                else if ((tanggal == null) || (tanggal == DateTime.MinValue)) sresult = "4 : Tanggal tidak terisi";

                // khusus kalo baca datanya itu dari yang punya penerimaanTitipan, RefID nya dicuekin aja
                // jadi kalau dari girohistory, ngga boleh kosong refID nya
                else if (((refID == null) || (refID == Guid.Empty)) && (TBLSRC == "GiroHistory")) sresult = "5 : Data Penerimaan tidak diketahui";

                if (sresult == "Ok")
                {
                    bool arahkeTitipan = false;
                    parameters = new List<Parameter>();
                    parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, refID));

                    Guid tempRowIDTitipan = dr.Field<Guid>("RowID");

                    DataTable dt = DBTools.DBGetDataTable("usp_PenerimaanUang_LIST", parameters);
                    if (dt.Rows.Count <= 0 && TBLSRC == "GiroHistory")
                    {
                        // kalo ref nya ngga mengacu ke PEnerimaanUang, coba cek ke PenerimaanTitipan
                        DataTable dtsub = DBTools.DBGetDataTable("usp_PenerimaanTitipan_LIST", parameters);
                        if (dtsub.Rows.Count <= 0)
                        {
                            // kalo sampe di titipan juga ngga ada, baru bener2 ngga ada data
                            sresult = "6 : Data PenerimaanUang maupun Titipan tidak ditemukan!";
                        }
                        else
                        {
                            // kalo ada data penerimaan titipan, berarti arahinnya ke proses dari penerimaan titipan
                            arahkeTitipan = true;
                            tempRowIDTitipan = dr.Field<Guid>("RefID");
                        }
                    }
                    if (sresult == "Ok")
                    {
                        if (((dt == null) || (dt.Rows.Count <= 0) && TBLSRC == "PenerimaanTitipan") || arahkeTitipan == true)
                        {
                            // ini bagian klo datanya dari PenerimaanTitipan
                            DataTable dtsubshow = new DataTable();
                            using (Database dbsubshow = new Database(GlobalVar.DBShowroom))
                            {
                                dbsubshow.Commands.Add(dbsubshow.CreateCommand("usp_PenerimaanTitipan_LIST_Journal"));
                                dbsubshow.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, tempRowIDTitipan)); // Mata Uang ID dari penerimaanTitipannya
                                dtsubshow = dbsubshow.Commands[0].ExecuteDataTable();
                            }; // --> ini itu RowID PenerimaanTitipannya juga

                            perusahaanDariRowID = GlobalVar.PerusahaanRowID; // dibuat sama dulu
                            perusahaanKeRowID = GlobalVar.PerusahaanRowID; // dibuat sama dulu
                            cabangDariID = GlobalVar.CabangID; // dibuat sama dulu
                            cabangKeID = GlobalVar.CabangID; // dibuat sama dulu

                            // Ambil MataUangRowID nya [usp_MataUang_LIST] @MataUangID varchar 3
                            using (Database dbfsub = new Database(GlobalVar.DBFinanceOto))
                            {
                                DataTable dtfsub = new DataTable();
                                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_MataUang_LIST"));
                                dbfsub.Commands[0].Parameters.Add(new Parameter("@MataUangID", SqlDbType.VarChar, dtsubshow.Rows[0]["MataUangID"].ToString())); // Mata Uang ID dari penerimaanTitipannya
                                dtfsub = dbfsub.Commands[0].ExecuteDataTable();
                                mataUangRowID = (Guid)dtfsub.Rows[0]["RowID"];
                            }

                            KodeTransPJL = Tools.isNull(dtsubshow.Rows[0]["KodeTransPJL"].ToString(), "").ToString();
                            PenerimaanUangRowID = (Guid)Tools.isNull(dtsubshow.Rows[0]["PenerimaanUangRowID"], Guid.Empty);
                            nominal = double.Parse(Tools.isNull(dtsubshow.Rows[0]["NominalBGC"].ToString(), "0").ToString()); // nominal dari penerimaantitipannya
                            nominalRp = double.Parse(Tools.isNull(dtsubshow.Rows[0]["NominalBGC"].ToString(), "0").ToString()); // nominal dari penerimaantitipannya
                            noBukti = Tools.isNull(dtsubshow.Rows[0]["NoTrans"].ToString(), "").ToString(); // dari nobukti titipannya
                            uraian = Tools.isNull(dtsubshow.Rows[0]["Uraian"].ToString(), "").ToString(); // dari uraian titipannya

                            // lakukan pencocokan tipe titipan
                            int tempTipeTitipan = int.Parse(dtsubshow.Rows[0]["TipeTitipan"].ToString());

                            switch (tempTipeTitipan)
                            {
                                case 0: // titipan murni ( belum identifikasi )
                                    tempJnsTransaksi = ((int)Class.enumJnsTransaksi.TTP).ToString();
                                    break;
                                case 1: // titipan UMK
                                    tempJnsTransaksi = ((int)Class.enumJnsTransaksi.UMK).ToString();
                                    break;
                                case 2: // titipan Angsuran
                                    tempJnsTransaksi = ((int)Class.enumJnsTransaksi.ANG).ToString();
                                    break;
                                case 3: // titipan Administrasi
                                    tempJnsTransaksi = ((int)Class.enumJnsTransaksi.ADM).ToString();
                                    break;
                                default: break;
                            }

                            // setelah tahu jnstransaksinya, kalau itu UM, atau ANG-FLT, perlu ada proses lanjutan!
                            String isACR;
                            if (tempTipeTitipan == 1) // UMK
                            {
                                KodeTrans = Tools.isNull(dtsubshow.Rows[0]["KodeTrans"].ToString(), "").ToString();

                                if (KodeTrans == "UMT")
                                {
                                    // Cegat di sini, cek, kalau misalkan data penerimaan Uang ini berasal dari data UMT
                                    // yang di Penjualan_Hist - Kredit - FLT, perlu dilakukan cek untuk menentukan
                                    // jenis transaksinya dia sebagai apa
                                    DataTable dummy = new DataTable();
                                    using (Database dbfsub = new Database())
                                    {
                                        dbfsub.Commands.Add(dbfsub.CreateCommand("usp_PenjualanHist_LIST_Journal_UMT"));
                                        // ref id itu rowid penerimaan uang yg dari giro history
                                        dbfsub.Commands[0].Parameters.Add(new Parameter("@PenerimaanUangRowID", SqlDbType.UniqueIdentifier, PenerimaanUangRowID));
                                        dummy = dbfsub.Commands[0].ExecuteDataTable();
                                    }
                                    String tempNoPerkiraanCheck = "";
                                    if (dummy.Rows.Count > 0)
                                    {
                                        tempNoPerkiraanCheck = Tools.isNull(dummy.Rows[0]["TargetNoPerkiraan"], "").ToString();
                                    }

                                    if (tempNoPerkiraanCheck == "" || tempNoPerkiraanCheck == null)
                                    { // kalo kosong pakai noperkiraan yg biasa
                                    }
                                    else
                                    {
                                        // kalo ngga kosong, tiban dengan noPerkiraan yg diambil
                                        NoPerkiraanUMT = tempNoPerkiraanCheck;
                                    }
                                }
                            }
                            else if (tempTipeTitipan == 2) // ANG
                            {
                                KodeTrans = Tools.isNull(dtsubshow.Rows[0]["KodeTrans"].ToString(), "").ToString();
                                if (KodeTransPJL == "FLT" && tempTipeTitipan == 2 && KodeTrans == "ANG")
                                {
                                    doACR = true;
                                }
                            }

                            // berdasarkan JnsTransaksi nya, ambil no perkiraan dan rowidnya
                            DataTable dtpfsub = new DataTable();
                            using (Database dbpfsub = new Database(GlobalVar.DBFinanceOto))
                            {
                                dbpfsub.Commands.Add(dbpfsub.CreateCommand("usp_JnsTransaksi_LIST"));
                                dbpfsub.Commands[0].Parameters.Add(new Parameter("@JnsTransaksi", SqlDbType.VarChar, tempJnsTransaksi)); // Dari JnsTransaksi yg udah diproses
                                dtpfsub = dbpfsub.Commands[0].ExecuteDataTable();
                            }

                            noPerkiraan = Tools.isNull(dtpfsub.Rows[0]["NoPerkiraan01"], "").ToString(); // cari berdasarkan tipetitipannya
                            penerimaanDari = 0; // dibuat default 0
                            JnsTransaksiRowID = (Guid)Tools.isNull(dtpfsub.Rows[0]["RowID"], Guid.Empty); // cari berdasarkan tipetitipannya

                            DataTable dummysub = new DataTable();
                            using (Database dbfsub = new Database())
                            {
                                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_PenerimaanUangxGiroHistory_by_RefIDCair"));
                                dbfsub.Commands[0].Parameters.Add(new Parameter("@RefIDCair", SqlDbType.VarChar, RefIDCair)); // Dari JnsTransaksi yg udah diproses
                                dummysub = dbfsub.Commands[0].ExecuteDataTable();
                            }

                            if (StatusGiro == 3 && dummysub.Rows.Count > 0)
                            {
                                nominal = double.Parse(Tools.isNull(dummysub.Rows[0]["Nominal"], "0").ToString());
                                nominalRp = double.Parse(Tools.isNull(dummysub.Rows[0]["NominalRp"], "0").ToString());
                                JnsTransaksiRowID = (Guid)Tools.isNull(dummysub.Rows[0]["JnsTransaksiRowID"], Guid.Empty);
                                noPerkiraan = Tools.isNull(dummysub.Rows[0]["NoPerkiraan01"], "").ToString();
                                OverrideNoPerkiraan = noPerkiraan;
                            }
                        }
                        else
                        {
                            // ini bagian klo datanya dari GiroHistory
                            PenerimaanUangRowID = refID; // berarti RefIDnya itu RowID dari penerimaanUang
                            perusahaanDariRowID = (Guid)dt.Rows[0]["PerusahaanDariRowID"];
                            perusahaanKeRowID = (Guid)Tools.isNull(dt.Rows[0]["PerusahaanKeRowID"], Guid.Empty);
                            cabangDariID = Tools.isNull(dt.Rows[0]["CabangDari"], "").ToString();
                            cabangKeID = Tools.isNull(dt.Rows[0]["CabangKe"], "").ToString();
                            mataUangRowID = (Guid)Tools.isNull(dt.Rows[0]["MataUangRowID"], Guid.Empty);
                            nominal = double.Parse(Tools.isNull(dt.Rows[0]["Nominal"], "0").ToString());
                            nominalRp = double.Parse(Tools.isNull(dt.Rows[0]["NominalRp"], "0").ToString());
                            JnsTransaksiRowID = (Guid)Tools.isNull(dt.Rows[0]["JnsTransaksiRowID"], Guid.Empty);
                            noPerkiraan = Tools.isNull(dt.Rows[0]["NoPerkiraan01"], "").ToString();
                            noBukti = Tools.isNull(dt.Rows[0]["NoBukti"], "").ToString();
                            uraian = Tools.isNull(dt.Rows[0]["Uraian"], "").ToString();
                            penerimaanDari = int.Parse(Tools.isNull(dt.Rows[0]["PenerimaanDari"], "0").ToString());
                            if (Tools.isNull(dt.Rows[0]["JnsPenerimaan"], "").ToString() == "G")
                            {
                                nominal = nominalRp = double.Parse(Tools.isNull(dt.Rows[0]["NominalGiro"], "0").ToString());
                            }
                        }
                    }
                }

                if (sresult == "Ok") if (perusahaanKeRowID == Guid.Empty) sresult = "6 : Kode Perusahaan tujuan kosong";
                    else if (string.IsNullOrEmpty(cabangKeID.Trim())) sresult = "7 : Kode Cabang tujuan kosong";
                    else if ((perusahaanDariRowID == Guid.Empty) && string.IsNullOrEmpty(cabangDariID.Trim())) sresult = "8 : PT / Cabang Pengirim kosong";
                    else if (mataUangRowID == Guid.Empty) sresult = "9 : Mata Uang tidak diisi";
                    else if ((rekeningRowID == Guid.Empty) && (statusGiro != clsHistoryGiroMasuk.enumStatusGiroMasuk.Diterima)) sresult = "10 : No. Rekening kosong / tidak ditemukan";
                    else if (journalRowID != Guid.Empty) sresult = "11: Sudah dijurnal";

                if (sresult == "Ok")
                {
                    switch (statusGiro)
                    {   // NoPerkiraan01 itu Debet, NoPerkiraan02 itu Kredit
                        case clsHistoryGiroMasuk.enumStatusGiroMasuk.Diterima:
                            {
                                noPerkiraan01 = GetPerkiraanKoneksiDetail("GRMDR", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRMDR");
                                if (TBLSRC == "PenerimaanTitipan" && tempJnsTransaksi == ((int)Class.enumJnsTransaksi.TTP).ToString())
                                {   // kalau dari penerimaan Titipan berarti dari yg ArusBarang/Showroom
                                    noPerkiraan02 = GetPerkiraanKoneksiDetail("UMPLGN", "SHW", GlobalVar.CabangID);
                                }
                                else if (NoPerkiraanUMT != "notUMT")
                                {
                                    noPerkiraan02 = NoPerkiraanUMT;
                                }
                                else
                                {
                                    noPerkiraan02 = ((penerimaanDari == 0) && (perusahaanDariRowID != perusahaanKeRowID)) ? GetPerkiraanDKNPT(perusahaanDariRowID) : ((penerimaanDari == 1) ? GetPerkiraanDKNCabang(cabangDariID) : noPerkiraan);
                                }
                                ketStatus = "Diterima";
                            } break;
                        case clsHistoryGiroMasuk.enumStatusGiroMasuk.Disetor:
                            {
                                noPerkiraan01 = GetPerkiraanKoneksiDetail("GRTTP", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRTTP");
                                noPerkiraan02 = GetPerkiraanKoneksiDetail("GRMDR", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRMDR");
                                ketStatus = "Disetor ke Bank";
                            }
                            break;
                        case clsHistoryGiroMasuk.enumStatusGiroMasuk.BatalSetor:
                            {
                                noPerkiraan01 = GetPerkiraanKoneksiDetail("GRMDR", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRMDR");
                                noPerkiraan02 = GetPerkiraanKoneksiDetail("GRTTP", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRTTP");
                                ketStatus = "Batal Setor";
                            }
                            break;
                        case clsHistoryGiroMasuk.enumStatusGiroMasuk.Cair:
                            {
                                noPerkiraan01 = GetPerkiraanRekening(rekeningRowID);
                                noPerkiraan02 = GetPerkiraanKoneksiDetail("GRTTP", "KSR", GlobalVar.CabangID); //  GetPerkiraanKoneksiDetail("GRTTP");
                                ketStatus = "Pencairan";
                            } break;
                        case clsHistoryGiroMasuk.enumStatusGiroMasuk.BatalCair:
                            {
                                noPerkiraan01 = GetPerkiraanKoneksiDetail("GRTTP", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRTTP");
                                noPerkiraan02 = GetPerkiraanRekening(rekeningRowID);
                                ketStatus = "Batal Cair";
                            } break;
                        case clsHistoryGiroMasuk.enumStatusGiroMasuk.Ditolak:
                            {
                                noPerkiraan01 = GetPerkiraanKoneksiDetail("GRTTP", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRTTP");
                                noPerkiraan02 = GetPerkiraanKoneksiDetail("GRTLK", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRTLK");
                                ketStatus = "Ditolak";
                            } break;
                        case clsHistoryGiroMasuk.enumStatusGiroMasuk.Batal:
                            {
                                if (TBLSRC == "PenerimaanTitipan" && tempJnsTransaksi == ((int)Class.enumJnsTransaksi.TTP).ToString())
                                {   // kalau dari penerimaan Titipan berarti dari yg ArusBarang/Showroom
                                    noPerkiraan01 = GetPerkiraanKoneksiDetail("UMPLGN", "SHW", GlobalVar.CabangID);
                                }
                                else if (NoPerkiraanUMT != "notUMT")
                                {
                                    noPerkiraan01 = NoPerkiraanUMT;
                                }
                                else
                                {
                                    noPerkiraan01 = (perusahaanDariRowID != perusahaanKeRowID) ? GetPerkiraanDKNPT(perusahaanDariRowID) : GetPerkiraanDKNCabang(cabangDariID);
                                }
                                noPerkiraan02 = GetPerkiraanKoneksiDetail("GRMDR", "KSR", GlobalVar.CabangID); // GetPerkiraanKoneksiDetail("GRMDR");
                                ketStatus = "Dibatalkan";
                            } break;
                        default: sresult = "12 : Status Giro Tidak diketahui"; break;
                    }
                }

                if (sresult == "Ok")
                {

                    // kalau status gironya Diterima, berasal dari PenerimaanTitipan, tipenya Angsuran FLT/APD
                    if (sresult == "Ok" && doACR == true && statusGiro == clsHistoryGiroMasuk.enumStatusGiroMasuk.Diterima
                        && KodeTrans == "ANG" && (KodeTransPJL == "FLT" || KodeTransPJL == "APD"))
                    {
                        // ambil data lengkap penerimaan titipannya dulu
                        Guid tempPenjRowID = Guid.Empty, tempPenjHistRowID = Guid.Empty;
                        String tempCabangID = "";
                        using (Database dbshwsub = new Database(GlobalVar.DBShowroom))
                        {
                            DataTable dummyshw = new DataTable();
                            dbshwsub.Commands.Add(dbshwsub.CreateCommand("usp_PenerimaanTitipan_LIST_Journal"));
                            dbshwsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, giroRowID));
                            dummyshw = dbshwsub.Commands[0].ExecuteDataTable();
                            if (dummyshw.Rows.Count > 0)
                            {
                                tempPenjRowID = new Guid(Tools.isNull(dummyshw.Rows[0]["PenjualanRowID"], Guid.Empty).ToString());
                                tempPenjHistRowID = new Guid(Tools.isNull(dummyshw.Rows[0]["PenjHistRowID"], Guid.Empty).ToString());
                                tempCabangID = Tools.isNull(dummyshw.Rows[0]["CabangID"], "").ToString();
                            }
                        }

                        using (Database dbsub = new Database(GlobalVar.DBShowroom))
                        {
                            DataTable dtsub2 = new DataTable();
                            dbsub.Commands.Add(dbsub.CreateCommand("usp_Angsuran_PiutangBerjalan"));
                            dbsub.Commands[0].Parameters.Add(new Parameter("@PenjHistID", SqlDbType.UniqueIdentifier, tempPenjHistRowID));
                            dbsub.Commands[0].Parameters.Add(new Parameter("@PenjRowID", SqlDbType.UniqueIdentifier, tempPenjRowID));
                            dbsub.Commands[0].Parameters.Add(new Parameter("@CabangID", SqlDbType.VarChar, tempCabangID));
                            dbsub.Commands[0].Parameters.Add(new Parameter("@KodeTrans", SqlDbType.VarChar, "ANG"));
                            dbsub.Commands[0].Parameters.Add(new Parameter("@Tanggal", SqlDbType.DateTime, GlobalVar.GetServerDate));
                            dtsub2 = dbsub.Commands[0].ExecuteDataTable();

                            OverrideNominalBunga = Convert.ToDouble(Tools.isNull(dtsub2.Rows[0]["Interest"], 0));
                            OverrideNominalPokok = nominalRp - OverrideNominalBunga; // harusnya nominalbgc dikurang nominal bunga!!! sebelumnya -- Convert.ToDouble(Tools.isNull(dtsub2.Rows[0]["AngsuranPokok"], 0));
                        }
                    }

                    int rslt = 0;
                    Guid rowID = Guid.NewGuid();
                    string recID = Tools.CreateFingerPrint();
                    parameters = new List<Parameter>();
                    string _uraian = "(" + ketStatus + ") Giro No.:" + noGiro;

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = tanggal;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "BGM";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = _uraian;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                    }
                    else
                    {
                        rslt = Journal.AddHeader_ver_2(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, rowID, recID, tanggal, noBukti, _uraian, "BGM", GlobalVar.Gudang, false);
                    }

                    Guid drowID = Guid.NewGuid();
                    if (rslt == 0)
                    {
                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan01;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan01);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                            sumD = sumD + nominalRp;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                        }
                        else
                        {
                            rslt = Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, noPerkiraan01,
                                               uraian, nominalRp, 0, "D", mataUangRowID, nominal);
                        }
                    }
                    else
                        sresult = "13 : Gagal Update Header Journal";
                    if (rslt == 0)
                    {
                        drowID = Guid.NewGuid();

                        if (OverrideNominalBunga != Double.MinValue && OverrideNominalPokok != Double.MinValue)
                        {
                            nominalRp = OverrideNominalBunga; // masukkin bunganya
                        }

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan02;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan02);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                            sumK = sumK + nominalRp;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                        }
                        else
                        {
                            if (Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, noPerkiraan02,
                                                uraian, 0, nominalRp, "K", mataUangRowID, nominal) != 0)
                                sresult = "15 : Gagal Update Detail Journal (Kredit)";
                        }

                        // hanya bisa pas cair / saat batal ACR itu
                        if (sresult == "Ok" && doACR == true && statusGiro == clsHistoryGiroMasuk.enumStatusGiroMasuk.Cair)
                        {
                            // ACR yg saat cair

                            // untuk Pendapatan Ditangguhkan - 210900130000 - DEBET
                            String tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                            drowID = Guid.NewGuid();
                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                sumD = sumD + nominalRp;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                            }
                            else
                            {
                                if (Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, tempNoPerkiraan,
                                                    uraian, nominalRp, 0, "D", mataUangRowID, nominal) != 0)
                                    sresult = "15.1 : Gagal menyimpan detail untuk Accrual - Pendapatan Ditangguhkan";
                            }

                            // untuk Piutang Bunga - 110341130300 - KREDIT
                            if (GlobalVar.CabangID.Contains("06"))
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID);
                            }
                            else
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                            }
                            if (OverrideNoPerkiraan != "F")
                            {
                                tempNoPerkiraan = OverrideNoPerkiraan;
                            }
                            // kalau iya, perlu proses jurnal Accrual
                            drowID = Guid.NewGuid();

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                sumK = sumK + nominalRp;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                            }
                            else
                            {
                                if (Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, tempNoPerkiraan,
                                                    uraian, 0, nominalRp, "K", mataUangRowID, nominal) != 0)
                                    sresult = "15.2 : Gagal menyimpan detail untuk Accrual - Piutang Bunga";
                            }
                        }
                        else if (sresult == "Ok" && doACR == true && statusGiro == clsHistoryGiroMasuk.enumStatusGiroMasuk.BatalCair)
                        {
                            // ACR yg saat batal cair, ini kebalikan dari pas cair

                            // untuk Pendapatan Ditangguhkan - 210900130000 - KREDIT
                            String tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                            drowID = Guid.NewGuid();

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                sumK = sumK + nominalRp;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                            }
                            else
                            {
                                if (Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, tempNoPerkiraan,
                                                    uraian, 0, nominalRp, "K", mataUangRowID, nominal) != 0)
                                    sresult = "15.1 : Gagal menyimpan detail untuk Accrual - Pendapatan Ditangguhkan";
                            }

                            // untuk Piutang Bunga - 110341130300 - DEBET
                            if (GlobalVar.CabangID.Contains("06"))
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID);
                            }
                            else
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                            }
                            if (OverrideNoPerkiraan != "F")
                            {
                                tempNoPerkiraan = OverrideNoPerkiraan;
                            }
                            // kalau iya, perlu proses jurnal Accrual
                            drowID = Guid.NewGuid();
                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                sumD = sumD + nominalRp;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                            }
                            else
                            {
                                if (Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, tempNoPerkiraan,
                                                    uraian, nominalRp, 0, "D", mataUangRowID, nominal) != 0)
                                    sresult = "15.2 : Gagal menyimpan detail untuk Accrual - Piutang Bunga";
                            }
                        }
                        else if (sresult == "Ok" && doACR == true && statusGiro == clsHistoryGiroMasuk.enumStatusGiroMasuk.Diterima
                                 && KodeTrans == "ANG" && (KodeTransPJL == "FLT" || KodeTransPJL == "APD"))
                        {
                            // kalau diterima yg angsuran FLT/APD, ini ngebentuk 2 detil mestinya
                            // di atas tadi bunganya udah, tinggal piutang usaha tetapnya
                            drowID = Guid.NewGuid();
                            nominalRp = OverrideNominalPokok; // masukkin pokoknya
                            noPerkiraan02 = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan02;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan02);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                sumK = sumK + nominalRp;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                            }
                            else
                            {
                                if (Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, noPerkiraan02,
                                                    uraian, 0, nominalRp, "K", mataUangRowID, nominal) != 0)
                                    sresult = "15 : Gagal Update Detail Journal (Kredit)";
                            }

                        }

                    }
                    else sresult = "14 : Gagal Update Detail Journal (Debet)";

                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        if (sresult == "Ok" && TBLSRC == "GiroHistory")
                        {
                            dbf.Commands.Add(dbf.CreateCommand("usp_GiroHistory_UPDATE_JournalRowID"));
                            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, giroRowID));
                            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, rowID));
                            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@lastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                            counterdbf++;
                        }

                        if (sresult == "Ok" && TBLSRC == "PenerimaanTitipan")
                        {
                            db.Commands.Add(db.CreateCommand("usp_PenerimaanTitipan_UPDATE_JournalRowID"));
                            db.Commands[counterdb].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, giroRowID));
                            db.Commands[counterdb].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, rowID));
                            db.Commands[counterdb].Parameters.Add(new Parameter("@lastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                            counterdb++;
                        }
                    }
                    //////////////////////////////////////////////////////////////////////////
                    // Tambahan Giro Kanvaser
                    //////////////////////////////////////////////////////////////////////////
                    if (GlobalVar.PerusahaanRowID == GlobalVar.GetPT.SAP && JnsTransaksiRowID == GlobalVar.GetTransaksi.PWilA)
                    {
                        sumD = 0;
                        sumK = 0;

                        string NoPerkD = string.Empty;
                        string NoPerkK = string.Empty;
                        string UraianD = string.Empty;
                        string UraianK = string.Empty;

                        switch (statusGiro)
                        {
                            case clsHistoryGiroMasuk.enumStatusGiroMasuk.Cair:
                                {
                                    NoPerkD = "110351130100";   // Piutang Belum Teridantifikasi sebelumnya -- 1103.51.100
                                    NoPerkK = "110342130100";  // untuk sementara jadiin Piutang Giro   // sebelumnya itu Piutang Usaha Wil A -- 1103.41.010
                                    UraianD = string.Empty;
                                    UraianK = string.Empty;
                                    DataTable dtPP = new DataTable();
                                    dtPP = GL.JournalGiro.dtPenerimaan(refID);
                                    foreach (DataRow drr in dtPP.Rows)
                                    {
                                        rowID = Guid.NewGuid();
                                        recID = Tools.CreateFingerPrint();
                                        nominalRp = Convert.ToDouble(drr["Kredit"]);
                                        _uraian = "Identifikasi Giro Cair Nota :" + drr["NoNota"].ToString() + " Untuk Giro : " + noBukti;
                                        drowID = Guid.NewGuid();
                                        noBukti = drr["NoTrans"].ToString();

                                        if (isSimulate == true)
                                        {
                                            dtHeader.Rows.Add();
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = tanggal;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "BGM";
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = _uraian;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                                        }
                                        else
                                        {
                                            rslt = Journal.AddHeader_ver_2(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, rowID, recID, tanggal, noBukti, _uraian, "BGM", GlobalVar.Gudang, false);
                                        }

                                        if (rslt == 0)
                                        {
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkD;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkD);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                                sumD = sumD + nominalRp;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                                sumK = sumK + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                                            }
                                            else
                                            {
                                                rslt = Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, NoPerkD,
                                                                   uraian, nominalRp, 0, "D", mataUangRowID, nominalRp);
                                            }
                                        }
                                        else
                                            sresult = "13 : Gagal Add Header Journal";
                                        if (rslt == 0)
                                        {
                                            drowID = Guid.NewGuid();
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkK;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkK);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                                sumD = sumD + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                                sumK = sumK + nominalRp;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                                            }
                                            else
                                            {
                                                if (Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, NoPerkK,
                                                                    uraian, 0, nominalRp, "K", mataUangRowID, nominalRp) != 0)
                                                    sresult = "15 : Gagal Update Detail Journal (Kredit)";
                                            }

                                        }
                                        else sresult = "14 : Gagal Update Detail Journal (Debet)";

                                        if (isSimulate == true)
                                        {
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                                        }
                                        else
                                        {
                                            GL.JournalGiro.UpdateTrans_ver_2(ref dbf, ref counterdbf, rowID, (Guid)drr["RowID"]);
                                        }
                                    }

                                } break;
                            case clsHistoryGiroMasuk.enumStatusGiroMasuk.BatalCair:
                                {
                                    NoPerkD = "110342130100";  // untuk sementara jadiin Piutang Giro   // sebelumnya itu Piutang Usaha Wil A -- 1103.41.010
                                    NoPerkK = "110351130100"; // Piutang Belum Teridantifikasi sebelumnya -- 1103.51.100

                                    UraianD = string.Empty;
                                    UraianK = string.Empty;
                                    DataTable dtPP = new DataTable();
                                    dtPP = GL.JournalGiro.dtPenerimaan(refID);
                                    foreach (DataRow drr in dtPP.Rows)
                                    {
                                        rowID = Guid.NewGuid();
                                        recID = Tools.CreateFingerPrint();
                                        nominalRp = Convert.ToDouble(drr["Kredit"]);
                                        _uraian = "Identifikasi Giro Batal Cair Nota :" + drr["NoNota"].ToString() + "Untuk Giro : " + noBukti;
                                        drowID = Guid.NewGuid();
                                        noBukti = drr["NoTrans"].ToString();

                                        if (isSimulate == true)
                                        {
                                            dtHeader.Rows.Add();
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = tanggal;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "BGM";
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = _uraian;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                                        }
                                        else
                                        {
                                            rslt = Journal.AddHeader_ver_2(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, rowID, recID, tanggal, noBukti, _uraian, "BGM", GlobalVar.Gudang, false);
                                        }

                                        if (rslt == 0)
                                        {
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkD;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkD);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominalRp;
                                                sumD = sumD + nominalRp;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                                sumK = sumK + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                                            }
                                            else
                                            {
                                                rslt = Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, NoPerkD,
                                                                   uraian, nominalRp, 0, "D", mataUangRowID, nominalRp);
                                            }
                                        }
                                        else
                                            sresult = "13 : Gagal Add Header Journal";
                                        if (rslt == 0)
                                        {
                                            drowID = Guid.NewGuid();
                                            drowID = Guid.NewGuid();
                                            if (isSimulate == true)
                                            {
                                                dtDetail.Rows.Add();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkK;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkK);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                                sumD = sumD + 0;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominalRp;
                                                sumK = sumK + nominalRp;
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominalRp;
                                            }
                                            else
                                            {
                                                if (Journal.AddDetail_ver_2(ref dbf, ref counterdbf, drowID, rowID, Tools.CreateFingerPrint(), recID, NoPerkK,
                                                                    uraian, 0, nominalRp, "K", mataUangRowID, nominalRp) != 0)
                                                    sresult = "15 : Gagal Update Detail Journal (Kredit)";
                                            }
                                        }
                                        else sresult = "14 : Gagal Update Detail Journal (Debet)";

                                        if (isSimulate == true)
                                        {
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                                        }
                                        else
                                        {
                                            GL.JournalGiro.UpdateTrans_ver_2(ref dbf, ref counterdbf, rowID, (Guid)drr["RowID"]);
                                        }
                                    }
                                } break;
                        }

                    }
                }

                if (isSimulate == true)
                {
                }
                else
                {
                    // kalau sampai sini, mestinya aman dan bisa mulai eksekusi perintah
                    int looper = 0;
                    for (looper = 0; looper < counterdb; looper++)
                    {
                        db.Commands[looper].ExecuteNonQuery();
                    }
                    for (looper = 0; looper < counterdbf; looper++)
                    {
                        dbf.Commands[looper].ExecuteNonQuery();
                    }
                    db.CommitTransaction();
                    dbf.CommitTransaction();
                }
            }
            catch (Exception ex)
            {
                if (isSimulate == true)
                {
                    MessageBox.Show("Eksepsi : " + ex.Message);
                }
                else
                {
                    db.RollbackTransaction();
                    dbf.RollbackTransaction();
                    sresult = "Eksepsi : " + ex.Message;
                }
            }
            return sresult;
        }

        public static string JournalIdenNonNota(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid IdenNonNotaRowID, ref int error)
        {
            //int nresult = 0;
            string sresult = "Ok";
            Double sumD = 0, sumK = 0;
            if ((IdenNonNotaRowID == null) || (IdenNonNotaRowID == Guid.Empty)) sresult = "1 : ID IdenNonNota Kosong";
            else
            {
                Database db = new Database();
                try
                {
                    DataTable dt = new DataTable();
                    //[usp_PenerimaanUang_LIST]
                    db.Commands.Add(db.CreateCommand("[usp_PenerimaanLeasingDetailNonPNJ]"));
                    db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, IdenNonNotaRowID));
                    dt = db.Commands[0].ExecuteDataTable();

                    if (dt.Rows.Count > 0)
                    {
                        DataRow dr = dt.Rows[0];
                        List<Parameter> prm = new List<Parameter>();
                        //DateTime Tanggal = Convert.ToDateTime(Tools.isNull(dr["Tanggal"], "1900-01-01").ToString());
                        string noBukti = Tools.isNull(dr["NoBukti"], "").ToString();
                        Double Nominal = Double.Parse(Tools.isNull(dr["Nominal"], "0").ToString());
                        string Keterangan = Tools.isNull(dr["Keterangan"], "").ToString();
                        string NoPerkiraan01 = "";
                        string NoPerkiraan02 = "";
                        Guid PenerimaanLeasingNonPNJRowID = (Guid)Tools.isNull(dr["RowID"], Guid.Empty);
                        Guid JenisTrans = (Guid)Tools.isNull(dr["JnsTransaksiRowID"], Guid.Empty);
                        Guid mataUangRowID = (Guid)Tools.isNull(dr["MataUangRowID"], Guid.Empty);

                        try
                        {
                            prm.Clear();
                            Guid PenerimaanRowID = (Guid)Tools.isNull(dr["PenerimaanIdenRowID"], Guid.Empty);
                            NoPerkiraan01 = GetPerkiraanKoneksiDetail("PIUTLSGBI", "SHW", GlobalVar.CabangID);
                            NoPerkiraan02 = Tools.isNull(dr["NoPerkiraan01"], "").ToString();

                            if (isSimulate == true)
                            {
                            }
                            else
                            {
                                db.BeginTransaction();
                            }

                            Guid rowID = Guid.NewGuid();
                            string recID = Tools.CreateFingerPrint();

                            if (sresult == "Ok")
                            {

                                if (isSimulate == true)
                                {
                                    dtHeader.Rows.Add();
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = (DateTime)dt.Rows[0]["Tanggal"];
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "IdenNonNota";
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Keterangan;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                                }
                                else
                                {
                                    if (Journal.AddHeader(db, GlobalVar.PerusahaanRowID, rowID, recID,
                                                            (DateTime)dt.Rows[0]["Tanggal"], noBukti, Keterangan,
                                                            "IdenNonNota", GlobalVar.Gudang, false) != 0)
                                        sresult = "3 : Gagal menyimpan Header Jurnal";
                                }



                                Guid drowID = Guid.NewGuid();
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan01;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraan01);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = Keterangan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Nominal;
                                    sumD = sumD + Nominal;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                                }
                                else
                                {
                                    if (Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID, NoPerkiraan01,
                                                            Keterangan, Nominal, 0, "D", mataUangRowID, Nominal) != 0)
                                        sresult = "4 : Gagal menyimpan detail debet Jurnal";
                                }



                                drowID = Guid.NewGuid();
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = drowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan02;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = Tools.isNull(GetNamaPerkiraan(NoPerkiraan02), "");
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = Keterangan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Nominal;
                                    sumK = sumK + Nominal;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                                }
                                else
                                {
                                    if (Journal.AddDetail(db, drowID, rowID, Tools.CreateFingerPrint(), recID, NoPerkiraan02,
                                                        Keterangan, 0, Nominal, "K", mataUangRowID, Nominal) != 0)
                                        sresult = "7 : Gagal menyimpan detail Kredit Journal";
                                }
                            }
                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                UpdateJournalRowID(db, "usp_PenerimaanIdenNonNota_UPDATE_JournalRowID", PenerimaanLeasingNonPNJRowID, rowID);
                                db.Commands.Clear();
                            }
                        }
                        catch (Exception ex)
                        {
                            error++;

                            if (isSimulate == true)
                            {
                                MessageBox.Show("Eksepsi : \n" + ex.Message);
                            }
                            else
                            {
                                sresult = "Eksepsi : \n" + ex.Message;
                                //System.Windows.Forms.MessageBox.Show(ex.Message);
                            }

                        }
                        finally
                        {
                            if (isSimulate == true)
                            {
                            }
                            else
                            {
                                if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                            }
                        }
                    }
                    else
                    {
                        sresult = "2 : Data Tidak ditemukan";
                    }

                }
                catch (Exception ex)
                {
                    error++;
                    Error.LogError(ex, "Error");
                }
            }
            return sresult;
        }


        // DI Coding Proses Journal Browse, Giro Keluar dialihkan ke Proses Pengeluaran Uang,
        // untuk sementara fungsi di bawah ini di comment dulu
        /*  Journal Giro Keluar
        #region Journal Giro Keluar
        public static string JournalGiroKeluar(Guid giroHistoryRowID)
        {
            string sresult = "Ok";
            List<Parameter> prm = new List<Parameter>();
            prm.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, giroHistoryRowID));
            try
            {
                DataTable dt = Tools.DBGetDataTable("usp_GiroHistory_LIST", prm);
                if (dt.Rows.Count > 0)
                {
                    #region Variables
                    DataRow dr = dt.Rows[0];
                    Guid pengeluaranRowID = dr.Field<Guid>("RefID");
                    Guid perusahaanDariRowID = Guid.Empty;
                    Guid perusahaanKeRowID = Guid.Empty;
                    Guid mataUangRowID = Guid.Empty;
                    Guid rekeningRowID = dr.Field<Guid>("RekeningRowID");
                    string cabangDariID = "";
                    string cabangKeID = "";
                    string cabangOriID = "";
                    int arusGiro = int.Parse(Tools.isNull(dr["JnsGiro"],"9").ToString());
                    DateTime tanggal = dr.Field<DateTime>("Tanggal");
                    int statusGiro = int.Parse(Tools.isNull(dr["StatusGiro"],"99").ToString());
                    double nominal = 0;
                    double nominalRp = 0;
                    if (nominalRp == 0) nominalRp = nominal;
                    int pengeluaranKe = 0;
                    string noPerkiraan = "";
                    string noPerkiraan1 = "";
                    string noPerkiraan2 = "";
                    string noPerkiraan3 = "";
                    string noPerkiraan4 = "";
                    string noGiro = dr.Field<string>("NoGiro");
                    string noBukti = "";
                    string uraian = "";
                    #endregion

                    #region validasi #1
                    if ((pengeluaranRowID == null) || (pengeluaranRowID == Guid.Empty)) sresult = "Data Pengeluaran tidak ada";
                    else if (arusGiro != 0) sresult = "Bukan Giro Keluar";
                    else if (statusGiro == 0) sresult = "Penyerahan Giro Keluar dijurnal di PengeluaranUang";
                    else if ((tanggal == null) || (tanggal == DateTime.MinValue)) sresult = "Tanggal belum diisi";
                    #endregion

                    #region Data Table Pengeluaran
                    if (sresult=="Ok")
                    {
                        prm.Clear();
                        dt.Clear();
                        prm.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, pengeluaranRowID));
                        dt = Tools.DBGetDataTable("usp_PengeluaranUang_LIST", prm);
                        if (dt.Rows.Count > 0)
                        {
                            perusahaanDariRowID = (Guid)Tools.isNull(dt.Rows[0]["PerusahaanDariRowID"], Guid.Empty);
                            perusahaanKeRowID = (Convert.IsDBNull(dt.Rows[0]["PerusahaanKeRowID"]) ? Guid.Empty : (Guid)dt.Rows[0]["PerusahaanKeRowID"]);
                            pengeluaranKe = int.Parse(Tools.isNull(dt.Rows[0]["PengeluaranKe"],"0").ToString());
                            cabangDariID = Tools.isNull(dt.Rows[0]["CabangDariID"], "").ToString();
                            cabangKeID = Tools.isNull(dt.Rows[0]["CabangKeID"], "").ToString();
                            cabangOriID = (Convert.IsDBNull(dt.Rows[0]["CabangIDOri"]) ? cabangKeID : dt.Rows[0]["CabangIDOri"].ToString());
                            mataUangRowID = (Guid)(Tools.isNull(dt.Rows[0]["MataUangRowID"], Guid.Empty));
                            rekeningRowID = (Guid)(Tools.isNull(dt.Rows[0]["RekeningRowID"],Guid.Empty));
                            nominal = double.Parse(Tools.isNull(dt.Rows[0]["Nominal"],"0").ToString());
                            nominalRp = double.Parse(Tools.isNull(dt.Rows[0]["NominalRp"],"0").ToString());
                            noPerkiraan = Tools.isNull(dt.Rows[0]["NoPerkiraan01"], "").ToString();
                            noBukti = Tools.isNull(dt.Rows[0]["NoBukti"], "").ToString();
                            if (nominalRp == 0) nominalRp = nominal;
                        }
                        else sresult = "Data Pengeluaran Kasir tidak ditemukan";

                        if ((perusahaanDariRowID == null) || (perusahaanDariRowID == Guid.Empty))
                            sresult = "Kode PT kosong ";
                        else if (string.IsNullOrEmpty(cabangDariID)) sresult = "Cabang tidak diisi";
                        else if ((mataUangRowID == null) || (mataUangRowID == Guid.Empty)) sresult = "Mata Uang belum diisi";
                        else if (statusGiro!=1) sresult = "Sementara hanya memproses pencairan";

                    }
                    #endregion

                    #region set No. Perkiraan
                    if (sresult == "Ok")
                    {
                        // cari NoPerkiraan
                        switch (statusGiro)
                        {
                            case 0:
                                {
                                    if (pengeluaranKe==2)
                                        noPerkiraan1 = AutoJournal.GetPerkiraanDKNPT(perusahaanKeRowID);
                                    noPerkiraan2 = AutoJournal.GetPerkiraanKoneksiDetail("HUTBG");
                                    uraian = "Giro Keluar : Pembatalan";
                                    if (cabangKeID != cabangOriID)
                                    {
                                        noPerkiraan3 = AutoJournal.GetPerkiraanDKNCabang(cabangOriID);
                                        noPerkiraan4 = AutoJournal.GetPerkiraanDKNPT(perusahaanDariRowID);
                                    }
                                } break;
                            case 1:
                                {
                                    noPerkiraan1 = noPerkiraan; //AutoJournal.GetPerkiraanKoneksiDetail("HUTBG");
                                    noPerkiraan2 = AutoJournal.GetPerkiraanRekening(rekeningRowID);
                                    uraian = "Giro Keluar : Pencairan ";
                                } break;
                            case 2:
                                {
                                    noPerkiraan1 = AutoJournal.GetPerkiraanRekening(rekeningRowID);
                                    noPerkiraan2 = AutoJournal.GetPerkiraanKoneksiDetail("HUTBG");
                                    uraian = "Giro Keluar : Batal Cair";
                                } break;
                            case 3:
                                {
                                    noPerkiraan1 = AutoJournal.GetPerkiraanKoneksiDetail("HUTBG");
                                    if ((perusahaanKeRowID!=Guid.Empty) && (perusahaanKeRowID!=perusahaanDariRowID))
                                        noPerkiraan2 = AutoJournal.GetPerkiraanDKNPT(perusahaanKeRowID);
                                    uraian = "Giro Keluar : Pembatalan";
                                    if (cabangKeID != cabangOriID)
                                    {
                                        noPerkiraan3 = AutoJournal.GetPerkiraanDKNPT(perusahaanDariRowID);
                                        noPerkiraan4 = AutoJournal.GetPerkiraanDKNCabang(cabangOriID);
                                    }
                                } break;
                            case 4: goto case 3;
                            default: sresult = "Status Giro tidak ada / tidak diketahui";
                                break;
                        }
                    }
                    #endregion

                    #region Proses posting Jurnal
                    if (sresult == "Ok")
                    {
                        int result = 0;
                        Guid rowID = Guid.NewGuid();
                        string recID = Tools.CreateFingerPrint(GlobalVar.PerusahaanID, SecurityManager.UserID);
                        string gudangID = AutoJournal.GetGudangIDByPTRowID(perusahaanDariRowID);
                        using (Database db = new Database())
                        {
                            try
                            {
                                db.BeginTransaction();
                                result = Journal.AddHeader(db, perusahaanDariRowID, rowID, recID, tanggal, noBukti, uraian,
                                                            "BGK", gudangID, false);
                                if (result == 0)
                                {
                                    result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                noPerkiraan1, uraian, nominalRp, 0, "D", mataUangRowID, nominal);
                                    if (result == 0)
                                    {
                                        result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                        noPerkiraan2, uraian, 0, nominalRp, "K", mataUangRowID, nominal);
                                        if (result != 0) sresult = "Gagal menyimpan detail K, NoGiro : " + noGiro;
                                    }
                                    else sresult = "Gagal menyimpan detail D, NoGiro : " + noGiro;
                                }
                                else sresult = "Gagal menyimpan header Journal, NoGiro : " + noGiro;

                                if ((result == 0) && ((statusGiro==3) || (statusGiro==4)) && (cabangKeID != cabangOriID))
                                {
                                    rowID = Guid.NewGuid();
                                    recID = Tools.CreateFingerPrint();
                                    result = Journal.AddHeader(db, perusahaanDariRowID, rowID, recID, tanggal, noBukti, uraian, "BGK", cabangDariID, false);
                                    if (result == 0)
                                    {
                                        result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                    noPerkiraan3, uraian, nominalRp, 0, "D", mataUangRowID, nominal);
                                        if (result == 0)
                                        {
                                            result = Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                            noPerkiraan4, uraian, 0, nominalRp, "K", mataUangRowID, nominal);
                                            if (result != 0) sresult = "Gagal menyimpan detail K, NoGiro : " + noGiro;
                                        }
                                        else sresult = "Gagal menyimpan detail D, NoGiro : " + noGiro;
                                    }
                                    else sresult = "Gagal menyimpan header Journal, NoGiro : " + noGiro;
                                }

                                if (result == 0)
                                {
                                    db.Commands.Clear();
                                    db.Commands.Add(db.CreateCommand("usp_GiroHistory_UPDATE_JournalRowID"));
                                    db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, giroHistoryRowID));
                                    db.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, rowID));
                                    db.Commands[0].Parameters.Add(new Parameter("@lastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                                    db.Commands[0].ExecuteNonQuery();
                                }
                            }
                            catch (Exception ex1)
                            {
                                result = 999;
                                sresult = ex1.Message;
                            }
                            finally
                            {
                                if (result == 0) db.CommitTransaction(); else db.RollbackTransaction();
                            }
                        }
                    }
                    #endregion
                }
                else sresult = "Data Proses Giro tidak ditemukan...";
            }
            catch (Exception ex)
            {
                sresult = "Eksepsi : " + ex.Message;
            }

            return sresult;
        }
        #endregion
        */



        public static string GetPerkiraanKoneksiDetail(string kodeTrn)
        {
            List<Parameter> parameters = new List<Parameter>();
            parameters.Add(new Parameter("@kodeTrn", SqlDbType.VarChar, kodeTrn));
            parameters.Add(new Parameter("@Mdl", SqlDbType.VarChar, "KSR"));
            parameters.Add(new Parameter("@KodeCabang", SqlDbType.VarChar, "1101"));
            string noPerkiraan = Tools.isNull(DBTools.DBGetScalar("usp_GetPerkiraanKoneksiDetail", parameters), "").ToString();
            return noPerkiraan;
        }
        public static string GetPerkiraanKoneksiDetail(string kodeTrn, string Mdl, string kodeCabang)
        {
            DataTable dummy = new DataTable();
            using (Database dbfsub = new Database(GlobalVar.DBFinanceOto))
            {
                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_GetPerkiraanKoneksiDetail"));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@kodeTrn", SqlDbType.VarChar, kodeTrn));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@Mdl", SqlDbType.VarChar, Mdl));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@KodeCabang", SqlDbType.VarChar, kodeCabang));
                dummy = dbfsub.Commands[0].ExecuteDataTable();
            }

            return dummy.Rows[0]["NoPerkiraan"].ToString();
        }

        public static string GetPerkiraanTransaksi(Guid transRowID)
        {
            List<Parameter> parameters = new List<Parameter>();
            parameters.Add(new Parameter("@RowID", SqlDbType.VarChar, transRowID));
            string noPerkiraan = Tools.isNull(DBTools.DBGetScalar("usp_GetPerkiraanTransaksi", parameters), "").ToString();
            return noPerkiraan;
        }

        // Ambil NoPerkiraan dari Tabel Bank (Beda dari yang Rekening)
        public static string GetPerkiraanBank(Guid rowID)
        {
            List<Parameter> parameters = new List<Parameter>();
            parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            DataTable dt = DBTools.DBGetDataTable("usp_Bank_LIST", parameters);
            string s = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraan"], "").ToString() : "";
            return s;
        }

        // Ambil No Perkiraan dari Tabel Kas
        public static string GetPerkiraanKas(Guid rowID)
        {
            List<Parameter> parameters = new List<Parameter>();
            parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            DataTable dt = DBTools.DBGetDataTable("usp_Kas_LIST", parameters);
            string s = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraan"], "").ToString() : "";
            return s;
        }

        public static string GetPerkiraanKas_byName(String Nama)
        {
            List<Parameter> parameters = new List<Parameter>();
            parameters.Add(new Parameter("@Nama", SqlDbType.VarChar, Nama));
            DataTable dt = DBTools.DBGetDataTable("usp_Kas_LIST", parameters);
            string s = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraan"], "").ToString() : "";
            return s;
        }

        // Ambil No Perkiraan dari Tabel Rekening
        public static string GetPerkiraanRekening(Guid rowID)
        {
            string s = "";
            if ((rowID != null) && (rowID != Guid.Empty))
            {
                List<Parameter> parameters = new List<Parameter>();
                parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                DataTable dt = DBTools.DBGetDataTable("usp_Rekening_LIST", parameters);
                s = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraan"], "").ToString() : "";
            }
            return s;
        }

        public static string GetPerkiraanDKNPT(Guid ownPtRowID, Guid perusahaanRowID)
        {
            string rslt = null;
            clsPerusahaan prs = new clsPerusahaan(ownPtRowID);
            rslt = (prs.InitPerusahaan == "HTS") ? GetPerkiraanDKNHTS(perusahaanRowID) : GetPerkiraanDKNPT(perusahaanRowID);
            return rslt;
        }

        public static string GetPerkiraanNewDKNPT(Guid ownPtRowID, Guid perusahaanRowID)
        {
            string rslt = null;
            clsPerusahaan prs = new clsPerusahaan(ownPtRowID);
            rslt = GetPerkiraanNewDKNPT(perusahaanRowID);
            return rslt;
        }

        public static string GetPerkiraanDKNPT(Guid rowID)
        {
            //List<Parameter> parameters = new List<Parameter>();
            //parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            //DataTable dt = DBTools.DBGetDataTable("usp_Perusahaan_LIST", parameters);
            DataTable dt = DBTools.DBGetDataTableByRowID("usp_Perusahaan_LIST", rowID);
            string rslt = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraanDKN"], "").ToString() : "";
            return rslt;
        }

        public static string GetPerkiraanNewDKNPT(Guid rowID)
        {
            //List<Parameter> parameters = new List<Parameter>();
            //parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            //DataTable dt = DBTools.DBGetDataTable("usp_Perusahaan_LIST", parameters);
            DataTable dt = DBTools.DBGetDataTableByRowID("usp_Perusahaan_LIST", rowID);
            string rslt = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraanNewDKN"], "").ToString() : "";
            return rslt;
        }

        public static string GetPerkiraanDKNPT_PLL(Guid rowID)
        {
            //List<Parameter> parameters = new List<Parameter>();
            //parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            //DataTable dt = DBTools.DBGetDataTable("usp_Perusahaan_LIST", parameters);
            DataTable dt = DBTools.DBGetDataTableByRowID("usp_Perusahaan_LIST", rowID);
            string rslt = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraanPLL"], "").ToString() : "";
            return rslt;
        }

        public static string GetPerkiraanDKNPT_HLL(Guid rowID)
        {
            //List<Parameter> parameters = new List<Parameter>();
            //parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            //DataTable dt = DBTools.DBGetDataTable("usp_Perusahaan_LIST", parameters);
            DataTable dt = DBTools.DBGetDataTableByRowID("usp_Perusahaan_LIST", rowID);
            string rslt = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraanHLL"], "").ToString() : "";
            return rslt;
        }

        public static string GetPerkiraanDKNHTS(Guid rowID)
        {
            //List<Parameter> parameters = new List<Parameter>();
            //parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
            //DataTable dt = DBTools.DBGetDataTable("usp_Perusahaan_LIST", parameters);
            DataTable dt = DBTools.DBGetDataTableByRowID("usp_Perusahaan_LIST", rowID);
            string s = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraanHTS"], "").ToString() : "";
            return s;
        }

        public static Guid GetMataUangRowID(string mataUangID)
        {
            List<Parameter> parameters = new List<Parameter>();
            parameters.Add(new Parameter("@MataUangID", SqlDbType.VarChar, mataUangID));
            //Guid mt = (Guid)Tools.isNull(DBTools.DBGetScalar("usp_GetMataUangRowID", parameters),Guid.Empty);
            DataTable dt = DBTools.DBGetDataTable("usp_GetMataUangRowID", parameters);
            Guid rowID = ((dt != null) && (dt.Rows.Count > 0)) ? (Guid)Tools.isNull(dt.Rows[0]["RowID"], Guid.Empty) : Guid.Empty;
            return rowID;
        }

        public static string GetPerkiraanDKNCabang(string CabangID)
        {
            List<Parameter> parameters = new List<Parameter>();
            parameters.Add(new Parameter("@CabangID", SqlDbType.VarChar, CabangID));
            DataTable dt = DBTools.DBGetDataTable("usp_Cabang_LIST", parameters);
            string s = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraanDKN"], "").ToString() : "";
            return s;
        }

        public static string GetPerkiraanNewDKNCabang(string CabangID)
        {
            List<Parameter> parameters = new List<Parameter>();
            parameters.Add(new Parameter("@CabangID", SqlDbType.VarChar, CabangID));
            DataTable dt = DBTools.DBGetDataTable("usp_Cabang_LIST", parameters);
            string s = ((dt != null) && (dt.Rows.Count > 0)) ? Tools.isNull(dt.Rows[0]["NoPerkiraanNewDKN"], "").ToString() : "";
            return s;
        }

        public static string GetGudangIDByPTRowID(Guid rowID)
        {
            string _cabangID = "";
            try
            {
                using (Database db = new Database())
                {
                    db.Commands.Add(db.CreateCommand("usp_Perusahaan_LIST"));
                    db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, rowID));
                    DataTable dt = db.Commands[0].ExecuteDataTable();
                    if (dt.Rows.Count > 0)
                    {
                        _cabangID = dt.Rows[0]["InitGudang"].ToString();
                    }
                }
            }
            catch { }
            return _cabangID;
        }

        public static string JournalDKN(Guid DKNrowID)
        {
            string sresult = "Ok";

            clsDKN _dkn = new clsDKN(DKNrowID);

            if (_dkn.State == clsDKN.enumState.Empty)
                sresult = _dkn.ErrorMsg;
            else if (_dkn.DBPostJournal() != "Ok")
                sresult = _dkn.ErrorMsg;
            return sresult;
        }

        public static string JournalDKN(Guid DKNrowID, bool Pembalik)
        {
            string sresult = "Ok";

            clsDKN _dkn = new clsDKN(DKNrowID);

            if (_dkn.State == clsDKN.enumState.Empty)
                sresult = _dkn.ErrorMsg;
            else if (_dkn.DBPostJournal() != "Ok")
                sresult = _dkn.ErrorMsg;
            return sresult;
        }


        public static string JournalBSPengajuan(Guid BSRowID)
        {
            string sresult = "Ok";
            List<Parameter> prm = new List<Parameter>();

            prm.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, BSRowID));
            DataTable dt = Tools.DBGetDataTable("usp_KasBon_LIST_NoSum", prm);

            if (dt.Rows.Count > 0)
            {
                try
                {
                    DataRow dr = dt.Rows[0];
                    string noBukti = Tools.isNull(dr["No_bukti"], "").ToString();
                    Guid journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);
                    Guid kasRowID = (Guid)Tools.isNull(dr["KasRowID"], Guid.Empty);
                    DateTime tanggal = (DateTime)(Convert.IsDBNull(dr.Field<DateTime>("Tanggal")) ? DateTime.MinValue : dr["Tanggal"]);
                    string uraian = Tools.isNull(dr["Uraian"], "").ToString();
                    double nominal = dr.Field<double>("Nominal");
                    Guid mataUangRowID = AutoJournal.GetMataUangRowID("IDR");
                    string noPerkiraan1 = AutoJournal.GetPerkiraanKoneksiDetail("BS", "KSR", GlobalVar.CabangID); // AutoJournal.GetPerkiraanKoneksiDetail("BS");
                    string noPerkiraan2 = AutoJournal.GetPerkiraanKas(kasRowID);

                    if ((journalRowID != null) && (journalRowID != Guid.Empty)) sresult = "2 : Sudah pernah dijournal";
                    else if (tanggal == DateTime.MinValue) sresult = "3 : Belum Realisasi";
                    else if (noBukti == "") sresult = "4 : No. Bukti kosong";

                    if (sresult == "Ok")
                    {
                        // Journal Penyerahan / Pencairan KasBon
                        if ((journalRowID == null) || (journalRowID == Guid.Empty))
                        {
                            using (Database db = new Database())
                            {
                                try
                                {
                                    db.BeginTransaction();
                                    Guid rowID = Guid.NewGuid();
                                    string recID = Tools.CreateFingerPrint();
                                    if (Journal.AddHeader(db, GlobalVar.PerusahaanRowID, rowID, recID, tanggal,
                                                                    noBukti, uraian, "BS", GlobalVar.Gudang, false) != 0)
                                        sresult = "Gagal Journal : Menyimpan Header Journal";
                                    if (sresult == "Ok")
                                        if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                noPerkiraan1, uraian, nominal, 0, "D", mataUangRowID, nominal) != 0)
                                            sresult = "Gagal Journal : Menyimpan Detail Debet";
                                    if (sresult == "Ok")
                                        if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                                noPerkiraan2, uraian, 0, nominal, "K", mataUangRowID, nominal) != 0)
                                            sresult = "Gagal Journal : Menyimpan Detail Kredit";

                                    if (sresult == "Ok")
                                    {
                                        db.Commands.Clear();
                                        db.Commands.Add(db.CreateCommand("usp_KasBon_UPDATE_JournalRowID"));
                                        db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, BSRowID));
                                        db.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, rowID));
                                        db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                                        db.Commands[0].ExecuteNonQuery();
                                    }
                                }
                                catch (Exception ex1)
                                {
                                    sresult = "Gagal Jurnal : \n" + ex1.Message;
                                }
                                finally
                                {
                                    if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                                }
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    sresult = "Eksepsi 1 : \n" + ex.Message;
                }
            }
            else sresult = "1 : Data Kas Bon tidak ditemukan";

            return sresult;
        }

        public static string JournalBSPemakaian(DataRow drH, DateTime fromDate, DateTime toDate)
        {
            string sresult = "Ok";
            DataTable dt = new DataTable();
            List<Parameter> prm = new List<Parameter>();
            Guid BSRowID = (Guid)Tools.isNull(drH["RowID"], Guid.Empty);
            string noBS = Tools.isNull(drH["No_bukti"], "").ToString();
            Guid mataUangRowID = AutoJournal.GetMataUangRowID("IDR");

            if ((BSRowID == null) || (BSRowID == Guid.Empty)) sresult = "ID BS kosong";
            else if (fromDate == null) sresult = "Tanggal awal belum diisi";
            else if ((toDate == null) || (toDate == DateTime.MinValue)) sresult = "Tanggal akhir kosong";
            if (sresult == "Ok")
            {
                if (toDate < fromDate) toDate = fromDate;
                try
                {
                    prm.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, BSRowID));
                    prm.Add(new Parameter("@fromDate", SqlDbType.Date, fromDate));
                    prm.Add(new Parameter("@toDate", SqlDbType.Date, toDate));
                    dt = Tools.DBGetDataTable("usp_KasBonVJU_LIST_Posting", prm);
                    if (dt.Rows.Count <= 0) sresult = "Tidak ada data pemakaian BS yang dijurnal";
                }
                catch (Exception ex)
                {
                    sresult = "Eksepsi : \n" + ex.Message;
                }
            }

            if (sresult == "Ok")
            {
                var _tanggal = (from r in dt.AsEnumerable() select r["Tanggal"]).Distinct().ToList();
                foreach (var t in _tanggal)
                {
                    using (Database db = new Database())
                    {
                        try
                        {
                            db.BeginTransaction();
                            Guid rowID = Guid.NewGuid();
                            string recID = Tools.CreateFingerPrint();
                            string uraianH = Tools.isNull(drH["Uraian"], "").ToString();
                            string noBukti, noPerkiraan, uraian;
                            double nominal;
                            double total = 0;
                            Guid dRowID, journalRowID;
                            if (Journal.AddHeader(db, GlobalVar.PerusahaanRowID, rowID, recID, (DateTime)t,
                                                  noBS, "Pemakaian BS : " + uraianH, "BSR", GlobalVar.Gudang, false) != 0)
                                sresult = "Gagal Simpan Journal Header";
                            foreach (DataRow dr in dt.Rows)
                            {
                                if ((sresult == "Ok") && ((DateTime)Tools.isNull(dr["Tanggal"], DateTime.MinValue) == (DateTime)t))
                                {
                                    dRowID = (Guid)Tools.isNull(dr["RowID"], Guid.Empty);
                                    journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);
                                    noBukti = Tools.isNull(dr["No_bukti"], "").ToString();
                                    noPerkiraan = Tools.isNull(dr["NoPerkiraan"], "").ToString();
                                    uraian = Tools.isNull(dr["Uraian"], "").ToString();
                                    nominal = double.Parse(Tools.isNull(dr["Kredit"], "0").ToString());
                                    total += nominal;
                                    if ((journalRowID != null) && (journalRowID != Guid.Empty)) sresult = "Sudah Pernah dijurnal";
                                    else if (nominal == 0) sresult = "Nominal 0 ";
                                    if (sresult == "Ok")
                                        if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                         noPerkiraan, uraian, nominal, 0, "D", mataUangRowID, nominal) != 0)
                                            sresult = "Gagal Update detail Jurnal";
                                    if (sresult == "Ok")
                                    {
                                        db.Commands.Clear();
                                        db.Commands.Add(db.CreateCommand("usp_KasbonVJU_UPDATE_JournalRowID"));
                                        db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, dRowID));
                                        db.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, rowID));
                                        db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                                        db.Commands[0].ExecuteNonQuery();
                                        db.Commands.Clear();
                                    }
                                }
                            }
                            if (sresult == "Ok")
                            {
                                noPerkiraan = AutoJournal.GetPerkiraanKoneksiDetail("BS", "KSR", GlobalVar.CabangID); // AutoJournal.GetPerkiraanKoneksiDetail("BS");
                                if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID, noPerkiraan,
                                                        uraianH, 0, total, "K", mataUangRowID, total) != 0)
                                    sresult = "Gagal Update Detail Journal debet";

                            }
                        }
                        catch (Exception ex)
                        {
                            sresult = "Error Journal : \n" + ex.Message;
                        }
                        finally
                        {
                            if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                        }
                    }
                }
            }
            return sresult;
        }

        public static string JournalBSPenyelesaian(Guid BSRowID)
        {
            string sresult = ((BSRowID == null) || (BSRowID == Guid.Empty)) ? "ID BS kosong" : "Ok";
            List<Parameter> prm = new List<Parameter>();
            DataTable dt = new DataTable();
            Guid mataUangRowID = AutoJournal.GetMataUangRowID("IDR");

            if (sresult == "Ok")
            {
                prm.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, BSRowID));
                dt = Tools.DBGetDataTable("usp_KasBonPenyelesaian_LIST", prm);
                if (dt.Rows.Count <= 0) sresult = "Data tidak ditemukan";
            }

            if (sresult == "Ok")
            {
                DataRow dr = dt.Rows[0];
                string noBukti = dr["No_bukti"].ToString();
                string uraian = dr["Uraian"].ToString();
                double debet = double.Parse(Tools.isNull(dr["Debet"], 0).ToString());
                double kredit = (debet == 0) ? double.Parse(Tools.isNull(dr["Kredit"], 0).ToString()) : 0;
                double nominal = (debet == 0) ? kredit : debet;
                Guid kasRowID = (Guid)Tools.isNull(dr["KasRowID"], Guid.Empty);
                Guid dRowID = (Guid)Tools.isNull(dr["RowID"], Guid.Empty);
                Guid journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);
                string noPerkiraan1 = (debet == 0) ? AutoJournal.GetPerkiraanKoneksiDetail("BS", "KSR", GlobalVar.CabangID) : AutoJournal.GetPerkiraanKas(kasRowID);
                string noPerkiraan2 = (debet == 0) ? AutoJournal.GetPerkiraanKas(kasRowID) : AutoJournal.GetPerkiraanKoneksiDetail("BS", "KSR", GlobalVar.CabangID);

                DateTime tanggal = (Convert.IsDBNull(dr["Tanggal"]) ? DateTime.MinValue : (DateTime)dr["Tanggal"]);
                if (tanggal == DateTime.MinValue) sresult = "Belum Penyelesaian";
                else if (nominal == 0) sresult = "Penyelesaian BS tidak perlu dijurnal";
                else if ((journalRowID != null) && (journalRowID != Guid.Empty)) sresult = "Penyelesaian BS Sudah Pernah dijurnal";

                using (Database db = new Database())
                {
                    try
                    {
                        db.BeginTransaction();
                        Guid rowID = Guid.NewGuid();
                        string recID = Tools.CreateFingerPrint();
                        if (Journal.AddHeader(db, GlobalVar.PerusahaanRowID, rowID, recID, tanggal,
                                                        noBukti, uraian, "BS", GlobalVar.Gudang, false) != 0)
                            sresult = "Gagal Journal : Menyimpan Header Journal";
                        if (sresult == "Ok")
                            if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                    noPerkiraan1, uraian, nominal, 0, "D", mataUangRowID, nominal) != 0)
                                sresult = "Gagal Journal : Menyimpan Detail Debet";
                        if (sresult == "Ok")
                            if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                    noPerkiraan2, uraian, 0, nominal, "K", mataUangRowID, nominal) != 0)
                                sresult = "Gagal Journal : Menyimpan Detail Kredit";

                        if (sresult == "Ok")
                        {
                            db.Commands.Clear();
                            db.Commands.Add(db.CreateCommand("usp_KasBonPenyelesaian_UPDATE_JournalRowID"));
                            db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, dRowID));
                            db.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, rowID));
                            db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                            db.Commands[0].ExecuteNonQuery();
                        }
                    }
                    catch (Exception ex)
                    {
                        sresult = "Journal Error : \n" + ex.Message;
                    }
                    finally
                    {
                        if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                    }
                }
            }
            return sresult;
        }

        public static string JournalBS(DataRow dr, DateTime fromDate, DateTime toDate, ref int error)
        {
            string sresult = "Ok";
            Guid bsRowID = (Guid)Tools.isNull(dr["RowID"], Guid.Empty);
            string noBukti = Tools.isNull(dr["No_bukti"], "").ToString();
            Guid journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);
            double nRealisasi = double.Parse(Tools.isNull(dr["Realisasi"], 0).ToString());
            double nPenyelesaian = double.Parse(Tools.isNull(dr["Penyelesaian"], 0).ToString());
            string tipeTrx = Tools.isNull(dr["Transaksi"], "").ToString(); //heri

            if (fromDate == null) fromDate = DateTime.MinValue;
            if (toDate < fromDate) toDate = fromDate;

            if (sresult == "Ok")
            {
                if (bsRowID == Guid.Empty) sresult = "ID Kosong";
                else if (toDate == null) sresult = "Range tanggal salah";
            }



            if (sresult == "Ok")
            {
                if ((journalRowID == null) || (journalRowID == Guid.Empty)) sresult = JournalBSPengajuan(bsRowID);
                if ((sresult == "Ok") && (nRealisasi != 0)) JournalBSPemakaian(dr, fromDate, toDate);
                if ((sresult == "Ok") && (nPenyelesaian != 0)) JournalBSPenyelesaian(bsRowID);
            }
            return sresult;
        }

        public static string JournalPiutangKaryawan(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, DataRow dr, DateTime fromDate, DateTime toDate, ref int error)
        {
            string sresult = "Ok";
            Guid PKRowID = (Guid)Tools.isNull(dr["RowID"], Guid.Empty);
            string noBukti = Tools.isNull(dr["NoBukti"], "").ToString();
            Guid journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);
            double nominal = double.Parse(Tools.isNull(dr["Nominal"], "0").ToString());
            string tipeTrx = Tools.isNull(dr["Transaksi"], "").ToString();
            //double nPinjaman = double.Parse(Tools.isNull(dr["NominalPinjaman"], "0").ToString());
            //double nPembayaran = double.Parse(Tools.isNull(dr["NominalPembayaran"], "0").ToString());

            if ((PKRowID != null) && (PKRowID != Guid.Empty))
            {
                //if ((journalRowID == null) || (journalRowID == Guid.Empty)) sresult = JournalPKPinjam(dr);
                //if ((sresult == "Ok") && (nPembayaran != 0)) sresult = JournalPKBayar(dr,fromDate,toDate);
                switch (tipeTrx)
                {
                    case "Pinjam": sresult = JournalPKPinjam(isSimulate, ref dtHeader, ref dtDetail, dr); break;
                    case "Bayar ": sresult = JournalPKBayar(isSimulate, ref dtHeader, ref dtDetail, dr, fromDate, toDate); break;
                    default: break;
                }
            }
            return sresult;
        }

        public static string JournalPKPinjam(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, DataRow dr)
        {
            string sresult = "Ok";
            Guid PKRowID = (Guid)Tools.isNull(dr["RowID"], Guid.Empty);
            Guid journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);
            DateTime tanggal = (DateTime)(Tools.isNull(dr["Tanggal"], DateTime.MinValue));
            string noBukti = Tools.isNull(dr["NoBukti"], "").ToString();
            string uraianH = Tools.isNull(dr["Uraian"], "").ToString();
            string noPerkiraan01 = AutoJournal.GetPerkiraanKoneksiDetail("PIUTPGW", "KSR", GlobalVar.CabangID); // AutoJournal.GetPerkiraanKoneksiDetail("PIUTPGW");
            string noPerkiraan02 = Tools.isNull(dr["NoPerkiraan"], "").ToString();
            double nominal = double.Parse(Tools.isNull(dr["Nominal"], "0").ToString());
            Guid mataUangRowID = AutoJournal.GetMataUangRowID("IDR");

            Double sumD = 0, sumK = 0;

            String UnitUsaha = Tools.isNull(dr["UnitUsaha"], "").ToString();

            if (PKRowID == Guid.Empty) sresult = "ID kosong";
            else if (nominal == 0) sresult = "Nominal Pinjaman 0";

            if (sresult == "Ok")
            {
                using (Database db = new Database())
                {
                    try
                    {
                        Guid rowID = Guid.NewGuid();
                        string recID = Tools.CreateFingerPrint();

                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = tanggal;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PK";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = uraianH;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                        }
                        else
                        {
                            if (Journal.AddHeader_ver_4(db, GlobalVar.PerusahaanRowID, rowID, recID, tanggal,
                                                  noBukti, uraianH, "PK", GlobalVar.Gudang, false, UnitUsaha) != 0)
                                sresult = "Gagal Journal : Simpan Header";
                        }

                        if (sresult == "Ok")
                        {
                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan01;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan01);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraianH;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominal;
                                sumD = sumD + nominal;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominal;
                            }
                            else
                            {
                                if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                            noPerkiraan01, uraianH, nominal, 0, "D", mataUangRowID, nominal) != 0)
                                    sresult = "Gagal Journal : Detail Debet";
                            }
                        }
                        if (sresult == "Ok")
                        {
                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan02;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan02);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraianH;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominal;
                                sumK = sumK + nominal;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominal;
                            }
                            else
                            {
                                if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                            noPerkiraan02, uraianH, 0, nominal, "K", mataUangRowID, nominal) != 0)
                                    sresult = "Gagal Journal : Detail Kredit";
                            }
                        }

                        if (isSimulate == true)
                        {
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                        }
                        else
                        {
                            if (sresult == "Ok")
                            {
                                db.Commands.Clear();
                                db.Commands.Add(db.CreateCommand("usp_PiutangKaryawan_UPDATE_JournalRowID"));
                                db.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, PKRowID));
                                db.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, rowID));
                                db.Commands[0].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
                                db.Commands[0].ExecuteNonQuery();
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        if (isSimulate == true)
                        {
                            MessageBox.Show("Eksepsi : \n" + ex.Message);
                        }
                        else
                        {
                            sresult = "Eksepsi : \n" + ex.Message;
                        }
                    }
                    finally
                    {
                        if (isSimulate == true)
                        {
                        }
                        else
                        {
                            if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                        }
                    }
                }
            }

            return sresult;
        }

        public static string JournalPKBayar(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, DataRow drH, DateTime fromDate, DateTime toDate)
        {
            string sresult = "Ok";

            Guid PKRowID = (Guid)Tools.isNull(drH["RowID"], Guid.Empty);
            DataTable dt = new DataTable();
            List<Parameter> prm = new List<Parameter>();

            Double sumD = 0, sumK = 0;

            if (PKRowID == Guid.Empty) sresult = "ID Kosong";
            else
            {
                try
                {
                    prm.Add(new Parameter("RowID", SqlDbType.UniqueIdentifier, PKRowID));
                    dt = Tools.DBGetDataTable("usp_PiutangKaryawanPembayaran_LIST", prm);
                    if (dt.Rows.Count <= 0) sresult = "Tidak ada data Pembayaran Piutang Karyawan yang dijurnal";
                }
                catch (Exception ex)
                {
                    sresult = "Eksepsi : \n" + ex.Message;
                }
            }

            if (sresult == "Ok")
            {
                //foreach(DataRow dr in dt.Rows)
                DataRow dr = dt.Rows[0];
                using (Database db = new Database())
                {
                    try
                    {
                        if (isSimulate == true)
                        {
                        }
                        else
                        {
                            db.BeginTransaction();
                        }

                        Guid rowID = Guid.NewGuid();
                        Guid PKBRowID = (Guid)Tools.isNull(dr["RowID"], Guid.Empty);
                        Guid journalRowID = (Guid)Tools.isNull(dr["JournalRowID"], Guid.Empty);
                        string recID = Tools.CreateFingerPrint();
                        DateTime tanggal = (DateTime)Tools.isNull(dr["TanggalBayar"], DateTime.MinValue);
                        string noBukti = Tools.isNull(dr["NoBukti"], "").ToString();
                        string uraian = Tools.isNull(dr["Keterangan"], "").ToString();
                        string kdTrans = Tools.isNull(dr["KdTransaksi"], "").ToString();
                        string noPerkiraan01 = Tools.isNull(dr["NoPerkiraan"], "").ToString();
                        string noPerkiraan02 = AutoJournal.GetPerkiraanKoneksiDetail("PIUTPGW", "KSR", GlobalVar.CabangID); // AutoJournal.GetPerkiraanKoneksiDetail("PIUTPGW");
                        double nominal = double.Parse(Tools.isNull(dr["Nominal"], "0").ToString());
                        Guid mataUangRowID = AutoJournal.GetMataUangRowID("IDR");

                        String UnitUsaha = Tools.isNull(dr["UnitUsaha"], "").ToString();

                        if ((journalRowID != null) && (journalRowID != Guid.Empty)) sresult = "Sudah pernah dijurnal";
                        else if ((tanggal < fromDate) || (tanggal > toDate)) sresult = "Diluar tanggal";
                        else if (nominal == 0) sresult = "Nominal Pembayaran kosong";

                        if (sresult == "Ok")
                        {
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = rowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = recID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = tanggal;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = noBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                            }
                            else
                            {
                                if (Journal.AddHeader_ver_4(db, GlobalVar.PerusahaanRowID, rowID, recID, tanggal, noBukti,
                                                        uraian, "PK", GlobalVar.Gudang, false, UnitUsaha) != 0)
                                    sresult = "Gagal Journal : Simpan Header";
                            }

                            if (sresult == "Ok")
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan01;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan01);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nominal;
                                    sumD = sumD + nominal;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominal;
                                }
                                else
                                {
                                    if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                            noPerkiraan01, uraian, nominal, 0, "D", mataUangRowID, nominal) != 0)
                                        sresult = "Gagal Journal : Simpan Detail Debet";
                                }
                            }

                            if (sresult == "Ok")
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = rowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = recID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = noPerkiraan02;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(noPerkiraan02);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nominal;
                                    sumK = sumK + nominal;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(mataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nominal;
                                }
                                else
                                {
                                    if (Journal.AddDetail(db, Guid.NewGuid(), rowID, Tools.CreateFingerPrint(), recID,
                                                            noPerkiraan02, uraian, 0, nominal, "K", mataUangRowID, nominal) != 0)
                                        sresult = "Gagal Journal : Simpan Detail Kredit";
                                }
                            }

                            if (sresult == "Ok")
                            {
                                if (isSimulate == true)
                                {
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                                }
                                else
                                {
                                    AutoJournal.UpdateJournalRowID(db, "usp_PiutangKaryawanPembayaran_UPDATE_JournalRowID",
                                                                                 PKBRowID, rowID);
                                }
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        if (isSimulate == true)
                        {
                            MessageBox.Show("Eksepsi Jurnal : \n" + ex.Message);
                        }
                        else
                        {
                            sresult = "Eksepsi Jurnal : \n" + ex.Message;
                        }
                    }
                    finally
                    {
                        if (isSimulate == true)
                        {
                        }
                        else
                        {
                            if (sresult == "Ok") db.CommitTransaction(); else db.RollbackTransaction();
                        }
                    }
                }

            }

            return sresult;
        }


    }

    class AutoJournalShowroom : Database
    {
        public static string GetPerkiraanKoneksiDetail(string kodeTrn, string Mdl, string kodeCabang)
        {
            DataTable dummy = new DataTable();
            using (Database dbfsub = new Database(GlobalVar.DBFinanceOto))
            {
                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_GetPerkiraanKoneksiDetail"));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@kodeTrn", SqlDbType.VarChar, kodeTrn));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@Mdl", SqlDbType.VarChar, Mdl));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@KodeCabang", SqlDbType.VarChar, kodeCabang));
                dummy = dbfsub.Commands[0].ExecuteDataTable();
            }
            return dummy.Rows[0]["NoPerkiraan"].ToString();
        }

        public static string GetNoPerkiraan(string NamaPerkiraan)
        {
            DataTable dummy = new DataTable();
            using (Database dbfsub = new Database(GlobalVar.DBFinanceOto))
            {
                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_GetNoPerkiraan"));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@NamaPerkiraan", SqlDbType.VarChar, NamaPerkiraan));
                dummy = dbfsub.Commands[0].ExecuteDataTable();
            }
            return dummy.Rows[0]["NoPerkiraan"].ToString();
        }

        public static string GetNamaPerkiraan(string NoPerkiraan)
        {
            DataTable dummy = new DataTable();
            using (Database dbfsub = new Database(GlobalVar.DBFinanceOto))
            {
                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_Perkiraan_LIST"));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@noPerkiraan", SqlDbType.VarChar, NoPerkiraan));
                dummy = dbfsub.Commands[0].ExecuteDataTable();
            }
            if (dummy.Rows.Count > 0)
            {
                return Tools.isNull(dummy.Rows[0]["NamaPerkiraan"], "").ToString();
            }
            else
            {
                return "";
            }
        }

        public static string GetMataUangID(Guid MataUangRowID)
        {
            DataTable dummy = new DataTable();
            using (Database dbfsub = new Database(GlobalVar.DBShowroom))
            {
                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_MataUang_LIST"));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, MataUangRowID));
                dummy = dbfsub.Commands[0].ExecuteDataTable();
            }
            if (dummy.Rows.Count > 0)
            {
                return Tools.isNull(dummy.Rows[0]["MataUangID"], "").ToString();
            }
            else
            {
                return "";
            }
        }

        public static Guid GetMataUangRowID(string MataUangID)
        {
            DataTable dummy = new DataTable();
            using (Database dbfsub = new Database(GlobalVar.DBShowroom))
            {
                dbfsub.Commands.Add(dbfsub.CreateCommand("usp_MataUang_LIST"));
                dbfsub.Commands[0].Parameters.Add(new Parameter("@MataUangID", SqlDbType.VarChar, MataUangID));
                dummy = dbfsub.Commands[0].ExecuteDataTable();
            }
            if (dummy.Rows.Count > 0)
            {
                return (Guid)new Guid(Tools.isNull(dummy.Rows[0]["RowID"], Guid.Empty).ToString());
            }
            else
            {
                return Guid.Empty;
            }
        }



        public static void JournalPenjualanAccrual_INSERT(ref Database dbf, ref int counterdbf, Guid PenjRowID, Guid PenjHistRowID, Guid JournalRowID, DateTime Tanggal)
        {
            dbf.Commands.Add(dbf.CreateCommand("usp_JournalPenjualanAccrual_INSERT"));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@PenjRowID", SqlDbType.UniqueIdentifier, PenjRowID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@PenjHistRowID", SqlDbType.UniqueIdentifier, PenjHistRowID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, JournalRowID));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@Tanggal", SqlDbType.Date, Tanggal.Date));
            dbf.Commands[counterdbf].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            counterdbf++;
        }

        public static void JournalRowID_UPDATE(ref Database db, ref int counterdb, String sp_name, Guid RowID, Guid JournalRowID)
        {
            db.Commands.Add(db.CreateCommand(sp_name));
            db.Commands[counterdb].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, RowID));
            db.Commands[counterdb].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, JournalRowID));
            db.Commands[counterdb].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            counterdb++;
        }

        public static string JournalRecalcUM(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid penjualanRowID, Guid LogRowID)
        {
            #region dtPenjualan Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String MataUangID;
            String NoBukti;
            String NoTrans;
            DateTime Tanggal;

            String CabangID;
            String Uraian;
            String NamaCustomer;
            String NoPol, NoMesin, NoRangka;
            String Beli_or_Gadai;
            String KodeTrans;
            String FlagSource = "ORI";

            Double SBDLama = 0, SBDBaru = 0, SBDSelisih = 0;
            Double BungaLama = 0, BungaBaru = 0, BungaSelisih = 0;
            Double PokokLama = 0, PokokBaru = 0, PokokSelisih = 0;
            Double UMLama = 0, UMBaru = 0, UMSelisih = 0;

            String Penjualan = "";
            String UnitUsaha;

            #endregion
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;
            Double sumD = 0, sumK = 0;
            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            String tempUraian;
            String tempNoPerkiraan;

            // ambil data penjualannya dulu
            DataTable dtPenjualan = new DataTable();
            DataTable dtPenjualanHist = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(db.CreateCommand("usp_PenjualanLog_LIST_JournalUM"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PenjualanRowID", SqlDbType.UniqueIdentifier, penjualanRowID));
                dbsub.Commands[0].Parameters.Add(new Parameter("@LogRowID", SqlDbType.UniqueIdentifier, LogRowID));
                dtPenjualan = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtPenjualan.Rows.Count < 1) ? "1. Data penjualan tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    PerusahaanRowID = GlobalVar.PerusahaanRowID;
                    MataUangRowID = new Guid(Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty).ToString());
                    MataUangID = Tools.isNull(dtPenjualan.Rows[0]["MataUangID"], "").ToString();
                    NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], "").ToString();
                    NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], "").ToString();
                    Tanggal = Convert.ToDateTime(Tools.isNull(dtPenjualan.Rows[0]["Tanggal"], DateTime.MinValue).ToString());

                    CabangID = GlobalVar.CabangID;
                    NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], "").ToString();
                    NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], "").ToString();
                    NoRangka = Tools.isNull(dtPenjualan.Rows[0]["NoRangka"], "").ToString();
                    NoMesin = Tools.isNull(dtPenjualan.Rows[0]["NoMesin"], "").ToString();
                    KodeTrans = Tools.isNull(dtPenjualan.Rows[0]["KodeTrans"], "").ToString();
                    FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                    Penjualan = Tools.isNull(dtPenjualan.Rows[0]["Penjualan"], "").ToString();

                    SBDLama = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["SBDLama"], 0).ToString());
                    SBDBaru = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["SBDNew"], 0).ToString());
                    SBDSelisih = SBDBaru - SBDLama;

                    BungaLama = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BungaLama"], 0).ToString());
                    BungaBaru = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BungaNew"], 0).ToString());
                    BungaSelisih = BungaBaru - BungaLama;

                    PokokLama = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["PokokLama"], 0).ToString());
                    PokokBaru = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["PokokNew"], 0).ToString());
                    PokokSelisih = PokokBaru - PokokLama;

                    UMLama = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UMLama"], 0).ToString());
                    UMBaru = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UMNew"], 0).ToString());
                    UMSelisih = UMBaru - UMLama;

                    Uraian = "Jurnal Recalculate UM Penjualan - " + NoTrans + "|" + NoBukti;
                    UnitUsaha = Tools.isNull(dtPenjualan.Rows[0]["UnitUsaha"], "").ToString();

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = Tanggal;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                    }
                    else
                    {
                        Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                Tanggal, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                    }
                    // cek dulu yang lagi diproses yg T apa K
                    if (Penjualan == "T")
                    {
                        if (KodeTrans == "LSG")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTPKLSG", "SHW", GlobalVar.CabangID);
                            tempUraian = "PJL/T-LSG/RUM - PIUTANG LSG - " + NamaCustomer + "-" + NoTrans + "|" + NoBukti;

                            // karena ngga ada piutang pokok, harga pokoknya ngikutin!
                            PokokSelisih = (UMSelisih + SBDSelisih) * -1;

                            if (PokokSelisih > 0) // kalau + berarti ada balikin um
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = PokokSelisih;
                                    sumD = sumD + PokokSelisih;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PokokSelisih;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, PokokSelisih, 0, "D", MataUangRowID, PokokSelisih);
                                }
                            }
                            else if (PokokSelisih < 0) // kalau - berarti ada nambah um
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Math.Abs(PokokSelisih);
                                    sumK = sumK + Math.Abs(PokokSelisih);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(PokokSelisih);
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, Math.Abs(PokokSelisih), "K", MataUangRowID, Math.Abs(PokokSelisih));
                                }
                            }

                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTUM", "SHW", GlobalVar.CabangID);
                            tempUraian = "PJL/T-LSG/RUM - PIUTANG UM - " + NamaCustomer + "-" + NoTrans + "|" + NoBukti;
                            if (UMSelisih > 0) // kalau + berarti ada nambah um
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = UMSelisih;
                                    sumD = sumD + UMSelisih;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = UMSelisih;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, UMSelisih, 0, "D", MataUangRowID, UMSelisih);
                                }
                            }
                            else if (UMSelisih < 0) // kalau - berarti ada balikin um
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Math.Abs(UMSelisih);
                                    sumK = sumK + Math.Abs(UMSelisih);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(UMSelisih);
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, Math.Abs(UMSelisih), "K", MataUangRowID, Math.Abs(UMSelisih));
                                }
                            }

                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTLSG", "SHW", GlobalVar.CabangID);
                            tempUraian = "PJL/T-LSG/RUM - PIUTANG DP LSG - " + NamaCustomer + "-" + NoTrans + "|" + NoBukti;
                            if (SBDSelisih > 0) // kalau + berarti ada nambah um/dpsubsidi
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = SBDSelisih;
                                    sumD = sumD + SBDSelisih;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = SBDSelisih;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, SBDSelisih, 0, "D", MataUangRowID, SBDSelisih);
                                }
                            }
                            else if (SBDSelisih < 0) // kalau - berarti ada balikin um/dpsubsidi
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Math.Abs(SBDSelisih);
                                    sumK = sumK + Math.Abs(SBDSelisih);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(SBDSelisih);
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, Math.Abs(SBDSelisih), "K", MataUangRowID, Math.Abs(SBDSelisih));
                                }
                            }
                        }
                        else
                        {
                            sresult = "Tidak perlu diproses.";
                        }
                    }
                    else if (Penjualan == "K")
                    {
                        if (KodeTrans == "FLT")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                            tempUraian = "PJL/T-LSG/RUM - PIUTANG ANG - " + NamaCustomer + "-" + NoTrans + "|" + NoBukti;
                            if (PokokSelisih > 0) // kalau + berarti ada balikin um
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = PokokSelisih;
                                    sumD = sumD + PokokSelisih;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PokokSelisih;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, PokokSelisih, 0, "D", MataUangRowID, PokokSelisih);
                                }
                            }
                            else if (PokokSelisih < 0) // kalau - berarti ada nambah um
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Math.Abs(PokokSelisih);
                                    sumK = sumK + Math.Abs(PokokSelisih);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(PokokSelisih);
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, Math.Abs(PokokSelisih), "K", MataUangRowID, Math.Abs(PokokSelisih));
                                }
                            }

                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                            tempUraian = "PJL/T-LSG/RUM - PIUTANG UM - " + NamaCustomer + "-" + NoTrans + "|" + NoBukti;
                            if (UMSelisih > 0) // kalau + berarti ada nambah um
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = UMSelisih;
                                    sumD = sumD + UMSelisih;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = UMSelisih;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, UMSelisih, 0, "D", MataUangRowID, UMSelisih);
                                }
                            }
                            else if (UMSelisih < 0) // kalau - berarti ada balikin um
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Math.Abs(UMSelisih);
                                    sumK = sumK + Math.Abs(UMSelisih);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(UMSelisih);
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, Math.Abs(UMSelisih), "K", MataUangRowID, Math.Abs(UMSelisih));
                                }
                            }

                            if (GlobalVar.CabangID.Contains("06"))
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID);
                            }
                            else
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                            }
                            tempUraian = "PJL/T-LSG/RUM - PIUTANG BNG - " + NamaCustomer + "-" + NoTrans + "|" + NoBukti;
                            if (BungaSelisih > 0) // kalau + berarti ada balikin um / cicilannya dinaikkin karena piutang bunga naik
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = BungaSelisih;
                                    sumD = sumD + BungaSelisih;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = BungaSelisih;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, BungaSelisih, 0, "D", MataUangRowID, BungaSelisih);
                                }
                            }
                            else if (BungaSelisih < 0) // kalau - berarti ada nerima um / cicilannya diturunkan karena piutang bunga turun
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Math.Abs(BungaSelisih);
                                    sumK = sumK + Math.Abs(BungaSelisih);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(BungaSelisih);
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, Math.Abs(BungaSelisih), "K", MataUangRowID, Math.Abs(BungaSelisih));
                                }
                            }

                            // ini pasti lawannya yg PBNGTTP
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                            tempUraian = "PJL/T-LSG/RUM - EST. PDPT K (DTGHK) - " + NamaCustomer + "-" + NoTrans + "|" + NoBukti;
                            if (BungaSelisih > 0) // kalau + berarti ada balikin um / cicilannya dinaikkin karena piutang bunga naik
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = BungaSelisih;
                                    sumK = sumK + BungaSelisih;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = BungaSelisih;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, BungaSelisih, "K", MataUangRowID, BungaSelisih);
                                }
                            }
                            else if (BungaSelisih < 0) // kalau - berarti ada nerima um / cicilannya diturunkan karena piutang bunga turun
                            {
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Math.Abs(BungaSelisih);
                                    sumD = sumD + Math.Abs(BungaSelisih);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Math.Abs(BungaSelisih);
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, Math.Abs(BungaSelisih), 0, "D", MataUangRowID, Math.Abs(BungaSelisih));
                                }
                            }
                        }
                    }

                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        if (sresult == "Ok")
                        {
                            JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_Update_Journal", LogRowID, newJournalHeaderRowID);
                        }

                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error : " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error : " + ex.Message;
                    }
                }
            }

            return sresult;
        }



        // mestinya jurnal yg penjualan deket sama yg jurnal penerimaan
        public static string JournalPenjualan(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid penjualanRowID, String Penjualan, Guid PenjHistRowID)
        {
            return JournalPenjualan(isSimulate, ref dtHeader, ref dtDetail, "Normal", GlobalVar.GetServerDate, Guid.Empty, penjualanRowID, Penjualan, PenjHistRowID);
        }

        public static string JournalPenjualan(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, String mode, DateTime TglLog, Guid LogRowID, Guid penjualanRowID, String Penjualan, Guid PenjHistRowID)
        {
            #region dtPenjualan Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String MataUangID;
            String NoBukti;
            String NoTrans;
            DateTime TglJual;
            Double UangMuka;
            String UnitUsaha;

            // ini dua di bawah dipakai di rumus lama (HargaJadi + BBN)
            Double BBN;
            Double HargaJadi;

            // dua di bawah ini yg dipakai ( hargaOff - ADM)
            Double BiayaADM;
            Double HargaOff;

            Double PiutangPokok;
            Double PiutangBunga;
            Double Discount;
            Double DPSubsidi;

            String CabangID;
            String Uraian;
            String NamaCustomer;
            String NoPol;
            String Beli_or_Gadai;
            String KodeTrans;
            String FlagSource = "ORI";

            #endregion

            Double sumK = 0, sumD = 0;

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            Guid newJournalHeaderRowIDTrd = Guid.NewGuid();
            Guid newJournalHeaderRowIDAvl = Guid.NewGuid();


            String newRecID = Tools.CreateFingerPrint();

            String tempUraian;
            String tempNoPerkiraan;

            String uraianAvalis="";
            String NoPerkiraanAvalis="";

            String uraianTrading="";
            String NoPerkiraanTrading="";

            // ambil data penjualannya dulu
            DataTable dtPenjualan = new DataTable();
            DataTable dtPenjualanHist = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(db.CreateCommand("usp_Penjualan_LIST_JOURNAL"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, penjualanRowID));
                dtPenjualan = dbsub.Commands[0].ExecuteDataTable();
            }

            if (Penjualan == "K" && PenjHistRowID != Guid.Empty)
            {
                // kalo tipenya kredit dan ada penjhistrowidnya, ambil datanya
                using (Database dbsub = new Database(GlobalVar.DBShowroom))
                {
                    dbsub.Commands.Add(dbsub.CreateCommand("usp_Penjualan_Hist_LIST_JOURNAL"));
                    dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, PenjHistRowID));
                    dtPenjualanHist = dbsub.Commands[0].ExecuteDataTable();
                }
            }

            string sresult = (dtPenjualan.Rows.Count < 1) ? "1. Data penjualan tidak dapat diambil" : "Ok";
            if (Penjualan == "K" && PenjHistRowID != Guid.Empty)
            {
                sresult = (dtPenjualanHist.Rows.Count < 1) ? "2. Data historis penjualan tidak dapat diambil" : "Ok";
            }

            if (sresult == "Ok")
            {
                try
                {
                    // masukkan ke variabel sementara

                    // cek datanya itu dari Pembelian atau Pegadaian
                    if (string.IsNullOrEmpty(dtPenjualan.Rows[0]["nopolDariPembelian"].ToString()) == false)
                    {
                        // kalo ngga null/empty berarti dari pembelian
                        Beli_or_Gadai = "Beli";
                    }
                    if (string.IsNullOrEmpty(dtPenjualan.Rows[0]["nopolDariPegadaian"].ToString()) == false)
                    {
                        // kalo ngga null/empty berarti dari pegadaian
                        Beli_or_Gadai = "Gadai";
                    }

                    // cek dulu yang lagi diproses yg T apa K
                    if (Penjualan == "T")
                    {
                        // kalo penjualannya T, hanya proses yg CTP kodeTransnya
                        KodeTrans = dtPenjualan.Rows[0]["KodeTrans"].ToString();
                        UnitUsaha = Tools.isNull(dtPenjualan.Rows[0]["UnitUsaha"], String.Empty).ToString();
                        
                        if (KodeTrans == "CTP")
                        {
                            // kalo tunai rata2 data nya dari yg dtPenjualan cukup
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }

                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();

                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"].ToString(), 0));
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"].ToString(), 0));

                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));

                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));

                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UangMuka"].ToString(), 0));
                            Uraian = "Penerimaan Penjualan - Tunai(CTP)" + NoPol + " - " + NamaCustomer;

                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN; // diganti bukan harga jadi + bbn lagi, tapi jadi HargaOff - BiayaADM // Kredit
                            Double nBBN = BBN; // Kredit
                            Double nUangMukaPenjualan = UangMuka; // Debet
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR; // Debet

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }
                            // masukkan ke JournalDetail
                            // kalo Penjualan Tunai - Cash Tempo, prosesnya Mirip sama APD

                            if (nUangMukaPenjualan > 0)
                            {
                                // Uang Muka Penjualan (210500130200/UMPJLN) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/CTP - UM - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }

                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/CTP - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    // kalau di TLA masuknya piutang UM
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTUM", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/CTP - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06")) // ORI - ADS
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/CTP - Penjualan - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/CTP - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }
                            // lakukan update JournalRowID ke tabel Penjualan


                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else if (KodeTrans == "TUN")
                        {
                            // kalo tunai rata2 data nya dari yg dtPenjualan cukup
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();

                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"].ToString(), 0));
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"].ToString(), 0));

                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));

                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));

                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UangMuka"].ToString(), 0));
                            Uraian = "Penerimaan Penjualan - Tunai(TUN)" + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN; // diganti bukan harga jadi + bbn lagi, tapi jadi HargaOff - BiayaADM // Kredit
                            Double nBBN = BBN; // Kredit
                            Double nUangMukaPenjualan = UangMuka; // Debet
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR; // Debet

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }
                            // masukkan ke JournalDetail
                            // kalo Penjualan Tunai - Cash Keras, prosesnya Mirip sama CTP sih
                            if (nUangMukaPenjualan > 0)
                            {
                                // Uang Muka Penjualan (210500130200/UMPJLN) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/TUN - UM - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }

                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/TUN - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    // kalau di TLA masuknya piutang UM
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTUM", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/TUN - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/TUN - Penjualan - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/TUN - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }
                            // lakukan update JournalRowID ke tabel Penjualan
                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else if (KodeTrans == "LSG")
                        {
                            // kalo tunai rata2 data nya dari yg dtPenjualan cukup
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();

                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"].ToString(), 0));
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"].ToString(), 0));

                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));

                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));
                            DPSubsidi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["DPSubsidi"].ToString(), 0));

                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UangMuka"].ToString(), 0));
                            Uraian = "Penerimaan Penjualan - Tunai(LSG)" + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN; // diganti bukan harga jadi + bbn lagi, tapi jadi HargaOff - BiayaADM // Kredit
                            Double nBBN = BBN;
                            Double nUangMukaPenjualan = UangMuka - DPSubsidi; // Debet
                            Double nDPSubsidi = DPSubsidi; // Debet
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR - DPSubsidi; // Debet

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }
                            // masukkan ke JournalDetail
                            // kalo Penjualan Tunai - Leasing, prosesnya beda sedikit, karena ada Leasing - DPSubsidi
                            if (nUangMukaPenjualan > 0)
                            {
                                // Uang Muka Penjualan (210500130200/UMPJLN) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/LSG - UM - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }

                            if (nDPSubsidi > 0)
                            {
                                // Piutang Subsidi MPM/Leasing (110599060103/PIUTLSG) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTLSG", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/LSG - Piut. Subs. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDPSubsidi;
                                    sumD = sumD + nDPSubsidi;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDPSubsidi;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDPSubsidi, 0, "D", MataUangRowID, nDPSubsidi);
                                }
                            }

                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/LSG - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    // kalau di TLA masuknya piutang UM
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTPKLSG", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/LSG - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06")) // ORI - ADS
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/LSG - Penjualan - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06")) // ORI - ADS
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/LSG - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }
                            // lakukan update JournalRowID ke tabel Penjualan

                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else if (KodeTrans == "BKS")
                        {
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();
                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi2"].ToString(), 0));
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"].ToString(), 0));
                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));
                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));
                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UangMuka"].ToString(), 0));
                            Uraian = "Penerimaan Penjualan - Tunai(TUN)" + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN;
                            Double nBBN = BBN;
                            Double nUangMukaPenjualan = UangMuka;
                            Double nDiscountMBR = Discount;
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR;
                            Double PRR = HargaJadi - nPiutangUsahaTetap;

                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    // kalau di TLA masuknya piutang UM
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTUM", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/BKS - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/BKS - PENJUALAN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = HargaJadi;
                                    sumK = sumK + HargaJadi;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = HargaJadi;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, HargaJadi, "K", MataUangRowID, HargaJadi);
                                }
                            }

                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("CPPRR", "SHW", GlobalVar.CabangID);
                            tempUraian = "PJL/T/BKS - CADANGAN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = PRR;
                                sumD = sumD + PRR;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PRR;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, PRR, 0, "D", MataUangRowID, PRR);
                            }
                            // lakukan update JournalRowID ke tabel Penjualan
                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else
                        {
                            sresult = "Tidak perlu diproses.";
                        }

                    }

                    #region Penjualan Kredit
                    else if (Penjualan == "K")
                    {
                        // kalo penjualannya K, lihat KodeTrans - nya itu APD apa FLT
                        KodeTrans = dtPenjualan.Rows[0]["KodeTrans"].ToString();
                        UnitUsaha = Tools.isNull(dtPenjualan.Rows[0]["UnitUsaha"], String.Empty).ToString();

                        if (KodeTrans == "APD")
                        {
                            // kalo APD, proses jurnalnya menyerupai yang CTP
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();

                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"], 0).ToString());
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"], 0).ToString());

                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));
                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));

                            PiutangPokok = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["PiutangPokok"], 0).ToString());
                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["UangMuka"], 0).ToString());
                            Uraian = "Penerimaan Penjualan - Kredit(APD)" + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN; // tadinya HargaJadi + BBN // Kredit
                            Double nBBN = BBN;
                            Double nUangMukaPenjualan = UangMuka; // Debet
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR; // Debet

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                //untuk all
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";

                                //untuk trd
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowIDTrd;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "TRD";

                                //untuk avalis
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowIDAvl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "AVL";

                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }
                            // masukkan ke JournalDetail
                            // kalo Penjualan Kredit - APD, prosesnya Mirip sama Tunai - CTP

                            // Uang Muka Penjualan (210500130200/UMPJLN) -- Debet
                            if (nUangMukaPenjualan > 0)
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/APD - UM - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //untuk all
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                
                                    //untuk trd
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;

                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }
                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/APD - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/APD - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //untuk all.
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;

                                    //untuk trading.
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;

                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/APD - Penjualan - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //untuk all
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                
                                    //untuk trd
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/APD - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //untuk all
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                
                                    //untuk trd
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }

                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                // lakukan update JournalRowID ke tabel Penjualan_Hist
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanHist_UPDATE_Journal", PenjHistRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else if (KodeTrans == "FLT")
                        {
                            // kalo kredit selain dtPenjualan, dtPenjHist juga kepake
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            NoTrans = Tools.isNull(dtPenjualanHist.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualanHist.Rows[0]["NoBukti"], String.Empty).ToString();
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();
                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["UangMuka"], 0).ToString());
                            PiutangPokok = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["PiutangPokok"], 0).ToString());
                            PiutangBunga = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["PiutangBunga"], 0).ToString());
                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"], 0).ToString());
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"], 0).ToString());
                            Uraian = "Penerimaan Penjualan - Kredit(FLT)" + NoPol + " - " + NamaCustomer;
                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";

                                
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowIDTrd;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "TRD";

                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowIDAvl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "AVL";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }

                            // masukkan ke JournalDetail
                            // kalo Penjualan K -- Tipe FLT

                            Double nUangMukaPenjualan = UangMuka; // D
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = PiutangPokok /* - nDiscountMBR*/; // D
                            Double nPendapatanDitangguhkan = PiutangBunga; // K
                            Double nPiutangBunga = PiutangBunga; // D
                            Double nPenjualan = nUangMukaPenjualan + nPiutangUsahaTetap + nDiscountMBR - BBN; // K
                            Double nBBN = BBN; // K

                            if (nUangMukaPenjualan > 0)
                            {
                                // Uang Muka Penjualan -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/FLT - UM - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //for all
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;

                                    //for trd
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;

                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }

                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/FLT - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/FLT - PIUTANG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //all
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;

                                    //piutang angsuran avalis
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDAvl;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPendapatanDitangguhkan > 0)
                            {
                                // Pendapatan Ditangguhkan -- Kredit
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/FLT - PDPT DTGHK - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPendapatanDitangguhkan;
                                    sumK = sumK + nPendapatanDitangguhkan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanDitangguhkan;

                                    //Avalis
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDAvl;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPendapatanDitangguhkan;
                                    sumK = sumK + nPendapatanDitangguhkan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanDitangguhkan;

                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPendapatanDitangguhkan, "K", MataUangRowID, nPendapatanDitangguhkan);
                                }
                            }

                            if (nPiutangBunga > 0)
                            {
                                // Piutang Bunga -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/FLT - PIUTANG BNG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //all
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangBunga;
                                    sumD = sumD + nPiutangBunga;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangBunga;

                                //avl
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDAvl ;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangBunga;
                                    sumD = sumD + nPiutangBunga;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangBunga;

                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangBunga, 0, "D", MataUangRowID, nPiutangBunga);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan -- Kredit
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", GlobalVar.CabangID);
                                    NoPerkiraanAvalis = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", "06A2"); //Trading
                                    NoPerkiraanTrading = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", "06A1"); //Avalis
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/FLT - Penjualan - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                uraianAvalis = "PJL/K/FLT - Hutang - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                uraianTrading = "PJL/K/FLT - Piutang - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //all
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;

                                    //Trading
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraianTrading;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;

                                    //hutang piutang di Trading penjualan kredit, check kalau penjuala tunai gimana.
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraanTrading;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraanTrading);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = PiutangPokok;
                                    sumD = sumD + PiutangPokok;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PiutangPokok;
                                    
                                    //dan Avalis
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDAvl;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraanAvalis;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraanAvalis);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = uraianAvalis;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = PiutangPokok;
                                    sumK = sumK + PiutangPokok;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PiutangPokok;
                                
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/FLT - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    //all
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;

                                    //trading
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }

                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                // lakukan update JournalRowID ke tabel Penjualan_Hist
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanHist_UPDATE_Journal", PenjHistRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                    }
                    #endregion
                    if (isSimulate == false)
                    {
                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error : " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error : " + ex.Message;
                    }
                }
            }

            return sresult;
        }


        public static string JournalPenjualan_ori(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, String mode, DateTime TglLog, Guid LogRowID, Guid penjualanRowID, String Penjualan, Guid PenjHistRowID)
        {
            #region dtPenjualan Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String MataUangID;
            String NoBukti;
            String NoTrans;
            DateTime TglJual;
            Double UangMuka;
            String UnitUsaha;

            // ini dua di bawah dipakai di rumus lama (HargaJadi + BBN)
            Double BBN;
            Double HargaJadi;

            // dua di bawah ini yg dipakai ( hargaOff - ADM)
            Double BiayaADM;
            Double HargaOff;

            Double PiutangPokok;
            Double PiutangBunga;
            Double Discount;
            Double DPSubsidi;

            String CabangID;
            String Uraian;
            String NamaCustomer;
            String NoPol;
            String Beli_or_Gadai;
            String KodeTrans;
            String FlagSource = "ORI";

            #endregion

            Double sumK = 0, sumD = 0;

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            String tempUraian;
            String tempNoPerkiraan;

            // ambil data penjualannya dulu
            DataTable dtPenjualan = new DataTable();
            DataTable dtPenjualanHist = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(db.CreateCommand("usp_Penjualan_LIST_JOURNAL"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, penjualanRowID));
                dtPenjualan = dbsub.Commands[0].ExecuteDataTable();
            }

            if (Penjualan == "K" && PenjHistRowID != Guid.Empty)
            {
                // kalo tipenya kredit dan ada penjhistrowidnya, ambil datanya
                using (Database dbsub = new Database(GlobalVar.DBShowroom))
                {
                    dbsub.Commands.Add(dbsub.CreateCommand("usp_Penjualan_Hist_LIST_JOURNAL"));
                    dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, PenjHistRowID));
                    dtPenjualanHist = dbsub.Commands[0].ExecuteDataTable();
                }
            }

            string sresult = (dtPenjualan.Rows.Count < 1) ? "1. Data penjualan tidak dapat diambil" : "Ok";
            if (Penjualan == "K" && PenjHistRowID != Guid.Empty)
            {
                sresult = (dtPenjualanHist.Rows.Count < 1) ? "2. Data historis penjualan tidak dapat diambil" : "Ok";
            }

            if (sresult == "Ok")
            {
                try
                {
                    // masukkan ke variabel sementara

                    // cek datanya itu dari Pembelian atau Pegadaian
                    if (string.IsNullOrEmpty(dtPenjualan.Rows[0]["nopolDariPembelian"].ToString()) == false)
                    {
                        // kalo ngga null/empty berarti dari pembelian
                        Beli_or_Gadai = "Beli";
                    }
                    if (string.IsNullOrEmpty(dtPenjualan.Rows[0]["nopolDariPegadaian"].ToString()) == false)
                    {
                        // kalo ngga null/empty berarti dari pegadaian
                        Beli_or_Gadai = "Gadai";
                    }

                    // cek dulu yang lagi diproses yg T apa K
                    if (Penjualan == "T")
                    {
                        // kalo penjualannya T, hanya proses yg CTP kodeTransnya
                        KodeTrans = dtPenjualan.Rows[0]["KodeTrans"].ToString();
                        UnitUsaha = Tools.isNull(dtPenjualan.Rows[0]["UnitUsaha"], String.Empty).ToString();

                        if (KodeTrans == "CTP")
                        {
                            // kalo tunai rata2 data nya dari yg dtPenjualan cukup
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }

                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();

                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"].ToString(), 0));
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"].ToString(), 0));

                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));

                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));

                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UangMuka"].ToString(), 0));
                            Uraian = "Penerimaan Penjualan - Tunai(CTP)" + NoPol + " - " + NamaCustomer;

                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN; // diganti bukan harga jadi + bbn lagi, tapi jadi HargaOff - BiayaADM // Kredit
                            Double nBBN = BBN; // Kredit
                            Double nUangMukaPenjualan = UangMuka; // Debet
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR; // Debet

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }
                            // masukkan ke JournalDetail
                            // kalo Penjualan Tunai - Cash Tempo, prosesnya Mirip sama APD

                            if (nUangMukaPenjualan > 0)
                            {
                                // Uang Muka Penjualan (210500130200/UMPJLN) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/CTP - UM - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }

                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/CTP - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    // kalau di TLA masuknya piutang UM
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTUM", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/CTP - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06")) // ORI - ADS
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/CTP - Penjualan - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/CTP - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }
                            // lakukan update JournalRowID ke tabel Penjualan


                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else if (KodeTrans == "TUN")
                        {
                            // kalo tunai rata2 data nya dari yg dtPenjualan cukup
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();

                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"].ToString(), 0));
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"].ToString(), 0));

                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));

                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));

                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UangMuka"].ToString(), 0));
                            Uraian = "Penerimaan Penjualan - Tunai(TUN)" + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN; // diganti bukan harga jadi + bbn lagi, tapi jadi HargaOff - BiayaADM // Kredit
                            Double nBBN = BBN; // Kredit
                            Double nUangMukaPenjualan = UangMuka; // Debet
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR; // Debet

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }
                            // masukkan ke JournalDetail
                            // kalo Penjualan Tunai - Cash Keras, prosesnya Mirip sama CTP sih
                            if (nUangMukaPenjualan > 0)
                            {
                                // Uang Muka Penjualan (210500130200/UMPJLN) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/TUN - UM - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }

                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/TUN - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    // kalau di TLA masuknya piutang UM
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTUM", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/TUN - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/TUN - Penjualan - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/TUN - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }
                            // lakukan update JournalRowID ke tabel Penjualan
                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else if (KodeTrans == "LSG")
                        {
                            // kalo tunai rata2 data nya dari yg dtPenjualan cukup
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();

                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"].ToString(), 0));
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"].ToString(), 0));

                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));

                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));
                            DPSubsidi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["DPSubsidi"].ToString(), 0));

                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UangMuka"].ToString(), 0));
                            Uraian = "Penerimaan Penjualan - Tunai(LSG)" + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN; // diganti bukan harga jadi + bbn lagi, tapi jadi HargaOff - BiayaADM // Kredit
                            Double nBBN = BBN;
                            Double nUangMukaPenjualan = UangMuka - DPSubsidi; // Debet
                            Double nDPSubsidi = DPSubsidi; // Debet
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR - DPSubsidi; // Debet

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }
                            // masukkan ke JournalDetail
                            // kalo Penjualan Tunai - Leasing, prosesnya beda sedikit, karena ada Leasing - DPSubsidi
                            if (nUangMukaPenjualan > 0)
                            {
                                // Uang Muka Penjualan (210500130200/UMPJLN) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/LSG - UM - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }

                            if (nDPSubsidi > 0)
                            {
                                // Piutang Subsidi MPM/Leasing (110599060103/PIUTLSG) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTLSG", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/LSG - Piut. Subs. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDPSubsidi;
                                    sumD = sumD + nDPSubsidi;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDPSubsidi;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDPSubsidi, 0, "D", MataUangRowID, nDPSubsidi);
                                }
                            }

                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/T/LSG - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    // kalau di TLA masuknya piutang UM
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTPKLSG", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/LSG - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06")) // ORI - ADS
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/LSG - Penjualan - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06")) // ORI - ADS
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/LSG - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }
                            // lakukan update JournalRowID ke tabel Penjualan

                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else if (KodeTrans == "BKS")
                        {
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();
                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi2"].ToString(), 0));
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"].ToString(), 0));
                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));
                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));
                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["UangMuka"].ToString(), 0));
                            Uraian = "Penerimaan Penjualan - Tunai(TUN)" + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN;
                            Double nBBN = BBN;
                            Double nUangMukaPenjualan = UangMuka;
                            Double nDiscountMBR = Discount;
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR;
                            Double PRR = HargaJadi - nPiutangUsahaTetap;

                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    // kalau di TLA masuknya piutang UM
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTUM", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/BKS - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLTUN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/T/BKS - PENJUALAN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = HargaJadi;
                                    sumK = sumK + HargaJadi;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = HargaJadi;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, HargaJadi, "K", MataUangRowID, HargaJadi);
                                }
                            }

                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("CPPRR", "SHW", GlobalVar.CabangID);
                            tempUraian = "PJL/T/BKS - CADANGAN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = PRR;
                                sumD = sumD + PRR;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PRR;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, PRR, 0, "D", MataUangRowID, PRR);
                            }
                            // lakukan update JournalRowID ke tabel Penjualan
                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else
                        {
                            sresult = "Tidak perlu diproses.";
                        }

                    }
                    else if (Penjualan == "K")
                    {
                        // kalo penjualannya K, lihat KodeTrans - nya itu APD apa FLT
                        KodeTrans = dtPenjualan.Rows[0]["KodeTrans"].ToString();
                        UnitUsaha = Tools.isNull(dtPenjualan.Rows[0]["UnitUsaha"], String.Empty).ToString();

                        if (KodeTrans == "APD")
                        {
                            // kalo APD, proses jurnalnya menyerupai yang CTP
                            FlagSource = Tools.isNull(dtPenjualan.Rows[0]["FlagSource"], "ORI").ToString();
                            NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], String.Empty).ToString();
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();

                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"], 0).ToString());
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"], 0).ToString());

                            HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaOff"].ToString(), 0));
                            BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BiayaADM"].ToString(), 0));
                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));

                            PiutangPokok = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["PiutangPokok"], 0).ToString());
                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["UangMuka"], 0).ToString());
                            Uraian = "Penerimaan Penjualan - Kredit(APD)" + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            Double nPenjualan = HargaOff - BiayaADM + Discount - BBN; // tadinya HargaJadi + BBN // Kredit
                            Double nBBN = BBN;
                            Double nUangMukaPenjualan = UangMuka; // Debet
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = (nPenjualan + nBBN) - nUangMukaPenjualan - nDiscountMBR; // Debet

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }
                            // masukkan ke JournalDetail
                            // kalo Penjualan Kredit - APD, prosesnya Mirip sama Tunai - CTP

                            // Uang Muka Penjualan (210500130200/UMPJLN) -- Debet
                            if (nUangMukaPenjualan > 0)
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/APD - UM - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }
                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/APD - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap (110341130102/PUTTP) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/APD - PIUTANG - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan (419900130100/PJLN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/APD - Penjualan - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/APD - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }

                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                // lakukan update JournalRowID ke tabel Penjualan_Hist
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanHist_UPDATE_Journal", PenjHistRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                        else if (KodeTrans == "FLT")
                        {
                            // kalo kredit selain dtPenjualan, dtPenjHist juga kepake
                            MataUangRowID = (Guid)Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty);
                            NoTrans = Tools.isNull(dtPenjualanHist.Rows[0]["NoTrans"], String.Empty).ToString();
                            NoBukti = Tools.isNull(dtPenjualanHist.Rows[0]["NoBukti"], String.Empty).ToString();
                            if (mode == "Koreksi")
                            {
                                TglJual = TglLog;
                            }
                            else
                            {
                                TglJual = DateTime.Parse(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], DateTime.MinValue).ToString());
                            }
                            NamaCustomer = Tools.isNull(dtPenjualan.Rows[0]["Nama"], String.Empty).ToString();
                            NoPol = Tools.isNull(dtPenjualan.Rows[0]["Nopol"], String.Empty).ToString();
                            UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["UangMuka"], 0).ToString());
                            PiutangPokok = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["PiutangPokok"], 0).ToString());
                            PiutangBunga = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["PiutangBunga"], 0).ToString());
                            HargaJadi = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["HargaJadi"], 0).ToString());
                            BBN = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["BBN"], 0).ToString());
                            Uraian = "Penerimaan Penjualan - Kredit(FLT)" + NoPol + " - " + NamaCustomer;
                            Discount = Convert.ToDouble(Tools.isNull(dtPenjualan.Rows[0]["Discount"].ToString(), 0));

                            // masukkin ke Journal dulu
                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PJL";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TglJual, NoBukti, Uraian, "PJL", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Penjualan itu PJL
                            }

                            // masukkan ke JournalDetail
                            // kalo Penjualan K -- Tipe FLT

                            Double nUangMukaPenjualan = UangMuka; // D
                            Double nDiscountMBR = Discount; // Debet
                            Double nPiutangUsahaTetap = PiutangPokok /* - nDiscountMBR*/; // D
                            Double nPendapatanDitangguhkan = PiutangBunga; // K
                            Double nPiutangBunga = PiutangBunga; // D
                            Double nPenjualan = nUangMukaPenjualan + nPiutangUsahaTetap + nDiscountMBR - BBN; // K
                            Double nBBN = BBN; // K

                            if (nUangMukaPenjualan > 0)
                            {
                                // Uang Muka Penjualan -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/FLT - UM - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nUangMukaPenjualan;
                                    sumD = sumD + nUangMukaPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nUangMukaPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nUangMukaPenjualan, 0, "D", MataUangRowID, nUangMukaPenjualan);
                                }
                            }

                            if (nDiscountMBR > 0)
                            {
                                // Discount Penjualan Motor Baru (440200060000/DSCMBR) -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/FLT - Disc. - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nDiscountMBR;
                                    sumD = sumD + nDiscountMBR;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nDiscountMBR;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nDiscountMBR, 0, "D", MataUangRowID, nDiscountMBR);
                                }
                            }

                            if (nPiutangUsahaTetap > 0)
                            {
                                // Piutang Usaha Tetap -- Debet
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/FLT - PIUTANG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                                    sumD = sumD + nPiutangUsahaTetap;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                                }
                            }

                            if (nPendapatanDitangguhkan > 0)
                            {
                                // Pendapatan Ditangguhkan -- Kredit
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                                tempUraian = "PJL/K/FLT - PDPT DTGHK - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPendapatanDitangguhkan;
                                    sumK = sumK + nPendapatanDitangguhkan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanDitangguhkan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPendapatanDitangguhkan, "K", MataUangRowID, nPendapatanDitangguhkan);
                                }
                            }

                            if (nPiutangBunga > 0)
                            {
                                // Piutang Bunga -- Debet
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/FLT - PIUTANG BNG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangBunga;
                                    sumD = sumD + nPiutangBunga;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangBunga;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPiutangBunga, 0, "D", MataUangRowID, nPiutangBunga);
                                }
                            }

                            if (nPenjualan > 0)
                            {
                                // Penjualan -- Kredit
                                if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/FLT - Penjualan - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPenjualan;
                                    sumK = sumK + nPenjualan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPenjualan;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPenjualan, "K", MataUangRowID, nPenjualan);
                                }
                            }

                            if (nBBN > 0)
                            {
                                // Hutang BBN (210220060008/HTGBBN) -- Kredit
                                if (GlobalVar.CabangID.Contains("06") && FlagSource == "BARU")
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else if (GlobalVar.CabangID.Contains("06"))
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGBBN", "SHW", GlobalVar.CabangID);
                                }
                                else
                                {
                                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PJLN", "SHW", GlobalVar.CabangID);
                                }
                                tempUraian = "PJL/K/FLT - BBN - " + NoPol + " - " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nBBN;
                                    sumK = sumK + nBBN;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nBBN;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nBBN, "K", MataUangRowID, nBBN);
                                }
                            }

                            if (isSimulate == true)
                            {
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                            }
                            else
                            {
                                // lakukan update JournalRowID ke tabel Penjualan_Hist
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);
                                JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanHist_UPDATE_Journal", PenjHistRowID, newJournalHeaderRowID);
                                if (mode == "Koreksi")
                                {
                                    JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLNew", LogRowID, newJournalHeaderRowID);
                                }
                            }
                        }
                    }

                    if (isSimulate == false)
                    {
                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error : " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error : " + ex.Message;
                    }
                }
            }

            return sresult;
        }


        // mestinya jurnal yg penjualan deket sama yg jurnal penerimaan
        public static string JournalKoreksiPJL(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid penjualanRowID, Guid LogRowID)
        {
            #region dtPenjualan Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String MataUangID;
            String NoBukti;
            String NoTrans;
            DateTime TglJual;
            DateTime TglLog;
            Double UangMuka;

            // ini dua di bawah dipakai di rumus lama (HargaJadi + BBN)
            Double BBN;
            Double HargaJadi;

            // dua di bawah ini yg dipakai ( hargaOff - ADM)
            Double BiayaADM;
            Double HargaOff;

            Double PiutangPokok;
            Double PiutangBunga;
            Double Discount;
            Double DPSubsidi;

            Guid JournalRowIDOld;
            Guid PenjHistRowID;
            String Penjualan;

            String CabangID;
            String Uraian;
            String NamaCustomer;
            String NoPol;
            String Beli_or_Gadai;
            String KodeTrans;
            String FlagSource = "ORI";
            String UnitUsaha;

            #endregion
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();
            String sresult = "Ok";
            String tempUraian;
            String tempNoPerkiraan;

            DataTable dtPenjualan = new DataTable();

            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PenjualanLog_LIST_JournalKoreksiPJL"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PenjRowID", SqlDbType.UniqueIdentifier, penjualanRowID));
                dbsub.Commands[0].Parameters.Add(new Parameter("@LogRowID", SqlDbType.UniqueIdentifier, LogRowID));
                dtPenjualan = dbsub.Commands[0].ExecuteDataTable();

                if (dtPenjualan.Rows.Count > 0)
                {
                    JournalRowIDOld = (Guid)new Guid(Tools.isNull(dtPenjualan.Rows[0]["JournalRowID"], Guid.Empty).ToString());
                    TglJual = Convert.ToDateTime(Tools.isNull(dtPenjualan.Rows[0]["TglJual"], Guid.Empty).ToString());
                    TglLog = Convert.ToDateTime(Tools.isNull(dtPenjualan.Rows[0]["LogCreatedOn"], Guid.Empty).ToString());
                    MataUangRowID = (Guid)new Guid(Tools.isNull(dtPenjualan.Rows[0]["MataUangRowID"], Guid.Empty).ToString());
                    NoBukti = Tools.isNull(dtPenjualan.Rows[0]["NoBukti"], Guid.Empty).ToString();
                    NoTrans = Tools.isNull(dtPenjualan.Rows[0]["NoTrans"], Guid.Empty).ToString();
                    PenjHistRowID = (Guid)new Guid(Tools.isNull(dtPenjualan.Rows[0]["PenjHistRowID"], Guid.Empty).ToString());
                    Penjualan = Tools.isNull(dtPenjualan.Rows[0]["Penjualan"], Guid.Empty).ToString().ToUpper().Trim();
                    UnitUsaha = Tools.isNull(dtPenjualan.Rows[0]["UnitUsaha"], Guid.Empty).ToString();
                }
                else
                {
                    sresult = "Tidak ada data Penjualan - Penjualan Log ditemukan untuk diproses!";
                    return sresult;
                }
            }
            DataTable dtJurnal = new DataTable();
            using (Database dbsub = new Database())
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_JournalDetail_LIST"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@HeaderID", SqlDbType.UniqueIdentifier, JournalRowIDOld));
                dtJurnal = dbsub.Commands[0].ExecuteDataTable();
            }
            // ambil data penjualannya dulu
            try
            {
                if (dtJurnal.Rows.Count > 0)
                {
                    int i = 0;
                    Double Nominal = 0, Debet = 0, Kredit = 0;
                    String UraianDet = "", DK = "", DKX = "", NoPerkiraan = "";
                    // berarti ada baris data ditemukan, mulai masukkin ke variabel2 -- jurnal Reversal
                    UraianDet = "PJL-RVS- " + NoTrans + "|" + NoBukti + " Koreksi PJL-Reversal";

                    Double sumD = 0, sumK = 0;

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglLog;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "RVS";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = UraianDet;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                    }
                    else
                    {
                        Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID,
                                                newRecID, TglLog, NoBukti, UraianDet, "RVS", GlobalVar.Gudang, false, UnitUsaha);
                    }
                    for (i = 0; i < dtJurnal.Rows.Count; i++)
                    {
                        Nominal = Convert.ToDouble(Tools.isNull(dtJurnal.Rows[i]["NominalOri"], 0).ToString());
                        UraianDet = "RVS-" + Tools.isNull(dtJurnal.Rows[i]["Uraian"], "").ToString();
                        DK = Tools.isNull(dtJurnal.Rows[i]["DK"], "").ToString().Trim().ToUpper();
                        NoPerkiraan = Tools.isNull(dtJurnal.Rows[i]["NoPerkiraan"], "").ToString().Trim().ToUpper();
                        if (DK == "D") // Dibalik
                        {
                            Debet = 0;
                            Kredit = Nominal;
                            DKX = "K";
                        }
                        else if (DK == "K") // dibalik
                        {
                            Debet = Nominal;
                            Kredit = 0;
                            DKX = "D";
                        }

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = UraianDet;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = DKX;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Debet;
                            sumD = sumD + Debet;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Kredit;
                            sumK = sumK + Kredit;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID,
                                NoPerkiraan,
                                UraianDet,
                                Debet,
                                Kredit,
                                DKX,
                                MataUangRowID,
                                Nominal);
                        }
                    }
                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                        JournalPenjualan(isSimulate, ref dtHeader, ref dtDetail, "Koreksi", TglLog, LogRowID, penjualanRowID, Penjualan, PenjHistRowID);
                    }
                    else
                    {
                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        JournalPenjualan(isSimulate, ref dtHeader, ref dtDetail, "Koreksi", TglLog, LogRowID, penjualanRowID, Penjualan, PenjHistRowID);
                        JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalReversal", LogRowID, newJournalHeaderRowID);
                        JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanLog_UPDATE_JournalPJLOld", LogRowID, JournalRowIDOld);
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                else
                {
                    sresult = "Tidak ada data Jurnal untuk diproses!";
                    return sresult;
                }

            }
            catch (Exception ex)
            {
                if (isSimulate == true)
                {
                    MessageBox.Show("Pesan error : " + ex.Message);
                }
                else
                {
                    db.RollbackTransaction();
                    dbf.RollbackTransaction();
                    sresult = "Pesan error : " + ex.Message;
                }
            }
            return sresult;
        }


        public static string JournalIdenMPM(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid idenRowID)
        {
            #region dtIden Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String MataUangID;
            String NoBukti;
            String NoTrans;
            DateTime Tgliden;


            Guid JournalIdenRowID;
            Guid PengeluaranUangRowID;
            String Pembelian;


            String NoPol="";

            String UnitUsaha;
            string Nominal = "0";

            #endregion
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();
            String sresult = "Ok";
            String tempUraian;
            String tempNoPerkiraan="";

            String Kondisi = "", NoRangka = "", NoTransPem = "", NoFaktur = "", Keterangan="";

            DataTable dtIdenMPM = new DataTable();

            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_IdenMPM_LIST_JournalIdenMPM"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, idenRowID));
                dtIdenMPM = dbsub.Commands[0].ExecuteDataTable();

                if (dtIdenMPM.Rows.Count > 0)
                {
                    JournalIdenRowID = (Guid)new Guid(Tools.isNull(dtIdenMPM.Rows[0]["JournalIdenRowID"], Guid.Empty).ToString());
                    Tgliden = Convert.ToDateTime(Tools.isNull(dtIdenMPM.Rows[0]["Tanggal"], Guid.Empty).ToString());
                    MataUangRowID = (Guid)new Guid(Tools.isNull(dtIdenMPM.Rows[0]["MataUangRowID"], Guid.Empty).ToString());
                    NoBukti = Tools.isNull(dtIdenMPM.Rows[0]["NoBukti"], Guid.Empty).ToString();
                    NoTrans = Tools.isNull(dtIdenMPM.Rows[0]["NoTrans"], Guid.Empty).ToString();
                    PengeluaranUangRowID = (Guid)new Guid(Tools.isNull(dtIdenMPM.Rows[0]["PengeluaranUangRowID"], Guid.Empty).ToString());
                    Pembelian = Tools.isNull(dtIdenMPM.Rows[0]["PembRowID"], Guid.Empty).ToString().ToUpper().Trim();
                    Nominal = Tools.isNull(dtIdenMPM.Rows[0]["Nominal"], Guid.Empty).ToString().ToUpper().Trim();
                    Kondisi=Tools.isNull(dtIdenMPM.Rows[0]["Kondisi"], Guid.Empty).ToString().ToUpper().Trim();
                    NoRangka=Tools.isNull(dtIdenMPM.Rows[0]["NoRangka"], Guid.Empty).ToString().ToUpper().Trim();
                    NoFaktur = Tools.isNull(dtIdenMPM.Rows[0]["NoFaktur"], Guid.Empty).ToString().ToUpper().Trim();
                    NoTransPem = Tools.isNull(dtIdenMPM.Rows[0]["NoTransPem"], Guid.Empty).ToString().ToUpper().Trim();
                    NoPol = Tools.isNull(dtIdenMPM.Rows[0]["Nopol"], Guid.Empty).ToString().ToUpper().Trim();
                    Keterangan = Tools.isNull(dtIdenMPM.Rows[0]["Keterangan"], Guid.Empty).ToString().ToUpper().Trim();
                    UnitUsaha = Tools.isNull(dtIdenMPM.Rows[0]["UnitUsaha"], Guid.Empty).ToString();
                }
                else
                {
                    sresult = "Tidak ada data Penjualan - Penjualan Log ditemukan untuk diproses!";
                    return sresult;
                }
            }


            try
            {
                    int i = 0;
                    String UraianDet = "", NoPerkiraan = "";
                    UraianDet = " Iden Pembayaran MPM" + "BYMHD- " + NoTrans + "|" + NoBukti ;

                    NoPerkiraan= GetPerkiraanKoneksiDetail("BYMHD", "SHW", GlobalVar.CabangID);;
                    Double sumD = 0, sumK = 0;

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = Tgliden;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoTrans;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "IDN";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Keterangan;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = Nominal;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = Nominal;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                    }
                    else
                    {
                        Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID,
                                                newRecID, Tgliden, NoBukti, UraianDet, "IDN", GlobalVar.Gudang, false, UnitUsaha);
                    }

                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID);

                        //tempUraian = "Hutang Pembelian - "  + NoTransPem + "|" + NoFaktur;
                    tempUraian = UraianDet;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = Keterangan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Nominal;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            Keterangan, Double.Parse(Nominal), 0, "D", MataUangRowID, Double.Parse(Nominal));
                        }


                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = Keterangan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Nominal;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                        }

                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, NoPerkiraan,
                            Keterangan, 0, Double.Parse(Nominal), "K", MataUangRowID, Double.Parse(Nominal));
                        }


                        if (isSimulate == true)
                        {
                        }
                        else
                        {
                            db.BeginTransaction();
                            dbf.BeginTransaction();
                            int looper = 0;
                            for (looper = 0; looper < counterdb; looper++)
                            {
                                db.Commands[looper].ExecuteNonQuery();
                            }
                            for (looper = 0; looper < counterdbf; looper++)
                            {
                                dbf.Commands[looper].ExecuteNonQuery();
                            }
                            db.CommitTransaction();
                            dbf.CommitTransaction();


                            using (Database dbid = new Database(GlobalVar.DBShowroom))
                            {
                                dbid.Commands.Add(dbid.CreateCommand("usp_IdenMPM_InsertJournal"));
                                dbid.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, idenRowID));
                                dbid.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, newJournalHeaderRowID));
                                dbid.Commands[0].ExecuteNonQuery();
                            }

                        }

            }
            catch (Exception ex)
            {
                if (isSimulate == true)
                {
                    MessageBox.Show("Pesan error : " + ex.Message);
                }
                else
                {
                    db.RollbackTransaction();
                    dbf.RollbackTransaction();
                    sresult = "Pesan error : " + ex.Message;
                }
            }
            return sresult;
        }

        // mestinya yang pembelian mendekati yang jurnal pengeluaran, ini malahan ngga jadi dipake
        // karena dimasukkin di bagian jurnal pengeluaran uang yg kasir!

        public static string JournalPembelian(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid pembelianRowID)
        {
            #region dtPembelian Variables
            // variabel2 untuk simpan data pembelian sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            Guid RekeningRowID;
            String MataUangID;
            String NoFaktur;
            String NoTrans;
            String NoPol;
            String Pembelian;
            DateTime TglBeli;
            String NoRangka;
            String NoMesin;
            Double HargaJadi;
            Double UangMuka;
            Double Nominal;
            int BentukPembayaran;
            String CabangID;
            String Uraian;
            String Jenis;
            String Kondisi;
            String FlagSource = "ORI";
            Double EstimasiBiayaTRK;
            Double BiayaTRK;
            Double NominalPokok, NominalPembulatan;
            String UnitUsaha;

            #endregion
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Double sumD = 0, sumK = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            String tempNoPerkiraan = "";
            String tempUraian = "";

            // ambil data pembeliannya dulu
            DataTable dtPembelian = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_Pembelian_LIST_Journal"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PembRowID", SqlDbType.UniqueIdentifier, pembelianRowID));
                dtPembelian = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtPembelian.Rows.Count < 1) ? "1. Data pembelian tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    // Cek dulu Jenis Pembeliannya sebelum diproses
                    Kondisi = Tools.isNull(dtPembelian.Rows[0]["Kondisi"], String.Empty).ToString();
                    FlagSource = Tools.isNull(dtPembelian.Rows[0]["FlagSource"], String.Empty).ToString();
                    Pembelian = Tools.isNull(dtPembelian.Rows[0]["Pembelian"], String.Empty).ToString(); // hanya bisa tunai/kredit
                    NoFaktur = Tools.isNull(dtPembelian.Rows[0]["NoFaktur"], String.Empty).ToString();
                    NoTrans = Tools.isNull(dtPembelian.Rows[0]["NoTrans"], String.Empty).ToString();
                    HargaJadi = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["HargaJadi"].ToString(), 0));
                    UangMuka = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["UangMuka"].ToString(), 0));
                    TglBeli = DateTime.Parse(Tools.isNull(dtPembelian.Rows[0]["TglBeli"].ToString(), DateTime.MinValue).ToString());
                    MataUangRowID = (Guid)Tools.isNull(dtPembelian.Rows[0]["MataUangRowID"], Guid.Empty);
                    NoPol = Tools.isNull(dtPembelian.Rows[0]["NoPol"], String.Empty).ToString();
                    NoRangka = Tools.isNull(dtPembelian.Rows[0]["NoRangka"], String.Empty).ToString();
                    NoMesin = Tools.isNull(dtPembelian.Rows[0]["NoMesin"], String.Empty).ToString();
                    Uraian = "Jurnal Pembelian - " + Pembelian + " - " + NoPol + "|" + NoRangka;
                    EstimasiBiayaTRK = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["EstimasiBiayaTarikan"].ToString(), 0));
                    BiayaTRK = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["TarikanBiayaLainLain"].ToString(), 0));
                    NominalPokok = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["NominalPokok"].ToString(), 0));
                    NominalPembulatan = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["NominalPembulatan"].ToString(), 0));
                    UnitUsaha = Tools.isNull(dtPembelian.Rows[0]["UnitUsaha"], String.Empty).ToString();

                    // berarti ada baris data ditemukan, mulai masukkin ke variabel2

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglBeli;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoFaktur;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PBL";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                    }
                    else
                    {
                        Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID,
                                                newRecID, TglBeli, NoFaktur, Uraian, "PBL", GlobalVar.Gudang, false, UnitUsaha); // Src Pembelian itu PBL
                    }
                    if (Pembelian.ToUpper().Trim() == "TUNAI")
                    {
                        Double nHutangMotor = HargaJadi;
                        Double nPersediaanBarang = HargaJadi;

                        // Persediaan Barang -- Debet

                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            if (Kondisi.ToLower() == "baru")
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGBR", "SHW", GlobalVar.CabangID);
                            }
                            else if (Kondisi.ToLower() == "bekas")
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                            }
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "PBL/T/PSD - PERSEDIAAN - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangMotor;
                            sumD = sumD + nHutangMotor;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangMotor;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            tempUraian, nHutangMotor, 0, "D", MataUangRowID, nHutangMotor);
                        }

                        // Hutang Usaha/Hutang Pembelian -- Kredit
                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            if (Kondisi.ToLower() == "baru")
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID);
                            }
                            else if (Kondisi.ToLower() == "bekas")
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID);
                            }
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "PBL/T/HUM - H.U. Motor - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPersediaanBarang;
                            sumK = sumK + nPersediaanBarang;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanBarang;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            tempUraian, 0, nPersediaanBarang, "K", MataUangRowID, nPersediaanBarang);
                        }
                    }
                    else if (Pembelian.ToUpper().Trim() == "KREDIT")
                    {
                        Double nHutangMotor = HargaJadi;
                        Double nPersediaanBarang = HargaJadi;

                        // Persediaan Barang -- Debet

                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            if (Kondisi.ToLower() == "baru")
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGBR", "SHW", GlobalVar.CabangID);
                            }
                            else if (Kondisi.ToLower() == "bekas")
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                            }
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "PBL/K/PSD - PERSEDIAAN - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangMotor;
                            sumD = sumD + nHutangMotor;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangMotor;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            tempUraian, nHutangMotor, 0, "D", MataUangRowID, nHutangMotor);
                        }

                        // Hutang Usaha/Hutang Pembelian -- Kredit
                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            if (Kondisi.ToLower() == "baru")
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID);
                            }
                            else if (Kondisi.ToLower() == "bekas")
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID);
                            }
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGPBL", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "PBL/K/HUM - H.U. Motor - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPersediaanBarang;
                            sumK = sumK + nPersediaanBarang;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanBarang;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            tempUraian, 0, nPersediaanBarang, "K", MataUangRowID, nPersediaanBarang);
                        }

                    }

                    //jika pembelian berasal dari tarikan
                    else if (Pembelian.ToUpper().Trim() == "TRK")
                    {
                        Double nPersediaanMotorBekas = HargaJadi;
                        Double nPersediaanMotorTarik = NominalPokok+EstimasiBiayaTRK;
                        Double nPembulatan = NominalPembulatan;
                        Double nSelisihBiaya = EstimasiBiayaTRK - BiayaTRK;

                        // Persediaan Motor Bekas -- Debet
                        if (EstimasiBiayaTRK > BiayaTRK) //jika biaya tarikan real lebih kecil dr estimasi biaya
                        {
                            if (GlobalVar.CabangID.Contains("06"))
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                            }
                            else
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                            }
                            tempUraian = "PBL/K/PSD - PERSEDIAAN - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPersediaanMotorBekas;
                                sumD = sumD + nPersediaanMotorBekas;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanMotorBekas;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                tempUraian, nPersediaanMotorBekas, 0, "D", MataUangRowID, nPersediaanMotorBekas);
                            }

                            // keluarkan selisih antara estimasi biaya dengan biaya tarikan dari hutang lainnya
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HUTLL", "SHW", GlobalVar.CabangID);

                            tempUraian = "PBL/K/PSD - Selisih Biaya vs Estimasi - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nSelisihBiaya;
                                sumD = sumD + nSelisihBiaya;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nSelisihBiaya;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                tempUraian, nSelisihBiaya, 0, "D", MataUangRowID, nSelisihBiaya);
                            }

                        }
                        else //jika biaya tarikan real = estimasi biaya tarikan
                        {
                            if (GlobalVar.CabangID.Contains("06"))
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                            }
                            else
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                            }
                            tempUraian = "PBL/K/PSD - PERSEDIAAN - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPersediaanMotorBekas;
                                sumD = sumD + nPersediaanMotorBekas;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanMotorBekas;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                tempUraian, nPersediaanMotorBekas, 0, "D", MataUangRowID, nPersediaanMotorBekas);
                            }
                        }
                        // KREDITNYA

                            //persediaan motor tarikan -- Kredit per sept 2016 karena tarikan 2 tahap
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGTR", "SHW", GlobalVar.CabangID);
                            tempUraian = "PBL/K/PSD - Persediaan Motor Tarik - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPersediaanMotorTarik;
                                sumK = sumK + nPersediaanMotorTarik;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanMotorTarik;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                tempUraian, 0, nPersediaanMotorTarik, "K", MataUangRowID, nPersediaanMotorTarik);
                            }
                            //pendapatan lainnya -- pembulatan
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("RFMPM", "SHW", GlobalVar.CabangID);
                            tempUraian = "PBL/K/PSD - Pembulatan Motor Tarik - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPembulatan;
                                sumK = sumK + nPembulatan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPembulatan;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                tempUraian, 0, nPembulatan, "K", MataUangRowID, nPembulatan);
                            }
                    }

                    // lakukan update JournalRowID ke tabel PembayaranPemb

                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        JournalRowID_UPDATE(ref db, ref counterdb, "usp_Pembelian_UPDATE_Journal", pembelianRowID, newJournalHeaderRowID);

                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error: " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error: " + ex.Message;
                    }
                }
            }

            return sresult;
        }

        public static string JournalPotonganPembelian(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid pembelianRowID, Guid pembayaranPembRowID)
        {
            #region dtPembelian Variables
            // variabel2 untuk simpan data pembelian sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            Guid RekeningRowID;
            String MataUangID;
            String NoFaktur;
            String NoRangka;
            String NoMesin;
            String NoTrans;
            String NoPol;
            String Pembelian;
            DateTime TglBeli;
            DateTime TanggalPembayaran;
            Double HargaJadi;
            Double UangMuka;
            Double Nominal;
            int BentukPembayaran;
            String CabangID;
            String Uraian;
            String Jenis;
            String Kondisi;
            String FlagSource = "ORI";
            String UnitUsaha;

            #endregion
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;
            Double sumD = 0, sumK = 0;
            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            String tempNoPerkiraan = "";
            String tempUraian = "";

            // ambil data pembeliannya dulu
            DataTable dtPembelian = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PembayaranPemb_LIST_JOURNAL"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PembRowID", SqlDbType.UniqueIdentifier, pembelianRowID));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PembayaranPembRowID", SqlDbType.UniqueIdentifier, pembayaranPembRowID));
                dtPembelian = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtPembelian.Rows.Count < 1) ? "1. Data pembelian tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    // Cek dulu Jenis Pembeliannya sebelum diproses
                    Kondisi = Tools.isNull(dtPembelian.Rows[0]["Kondisi"], String.Empty).ToString();
                    FlagSource = Tools.isNull(dtPembelian.Rows[0]["FlagSource"], String.Empty).ToString();
                    Jenis = Tools.isNull(dtPembelian.Rows[0]["Jenis"], String.Empty).ToString(); // hanya bisa PLS/ANG/UMK
                    Pembelian = Tools.isNull(dtPembelian.Rows[0]["Pembelian"], String.Empty).ToString(); // hanya bisa tunai/kredit
                    NoFaktur = Tools.isNull(dtPembelian.Rows[0]["NoFaktur"], String.Empty).ToString();
                    NoTrans = Tools.isNull(dtPembelian.Rows[0]["NoTransPembelian"], String.Empty).ToString();
                    HargaJadi = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["HargaJadi"].ToString(), 0));
                    UangMuka = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["UangMuka"].ToString(), 0));
                    Nominal = Convert.ToDouble(Tools.isNull(dtPembelian.Rows[0]["Nominal"].ToString(), 0));
                    TglBeli = DateTime.Parse(Tools.isNull(dtPembelian.Rows[0]["TglBeli"].ToString(), DateTime.MinValue).ToString());
                    TanggalPembayaran = DateTime.Parse(Tools.isNull(dtPembelian.Rows[0]["TanggalPembayaran"].ToString(), DateTime.MinValue).ToString());
                    MataUangRowID = (Guid)Tools.isNull(dtPembelian.Rows[0]["MataUangRowID"], Guid.Empty);
                    NoPol = Tools.isNull(dtPembelian.Rows[0]["NoPol"], String.Empty).ToString();
                    NoMesin = Tools.isNull(dtPembelian.Rows[0]["NoMesin"], String.Empty).ToString();
                    NoRangka = Tools.isNull(dtPembelian.Rows[0]["NoRangka"], String.Empty).ToString();

                    BentukPembayaran = Convert.ToInt32(Tools.isNull(dtPembelian.Rows[0]["BentukPembayaran"].ToString(), 0));
                    RekeningRowID = (Guid)Tools.isNull(dtPembelian.Rows[0]["RekeningRowID"], Guid.Empty);

                    Uraian = "Potongan Pembelian - " + Pembelian + " - " + NoPol + "|" + NoRangka;
                    UnitUsaha = Tools.isNull(dtPembelian.Rows[0]["UnitUsaha"], String.Empty).ToString();

                    // berarti ada baris data ditemukan, mulai masukkin ke variabel2

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TanggalPembayaran;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoFaktur;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PBL";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                    }
                    else
                    {
                        Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID,
                                                newRecID, TanggalPembayaran, NoFaktur, Uraian, "PBL", GlobalVar.Gudang, false, UnitUsaha); // Src Pembelian itu PBL // bukan tgl beli tapi tgl bayarnya yg mau
                    }
                    Double nHutangMotor = Nominal;
                    Double nPotongan = Nominal;

                    // Persediaan Barang -- Debet
                    if (GlobalVar.CabangID.Contains("06"))
                    {
                        if (Kondisi.ToLower() == "baru")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGUMBR", "SHW", GlobalVar.CabangID);
                        }
                        else if (Kondisi.ToLower() == "bekas")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HTGUMBK", "SHW", GlobalVar.CabangID);
                        }
                    }
                    else
                    {
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                    }
                    tempUraian = "PBL/POT/HUM - H.U. Motor (POT) - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                    if (isSimulate == true)
                    {
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nHutangMotor;
                        sumD = sumD + nHutangMotor;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                        sumK = sumK + 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangMotor;
                    }
                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                tempUraian, nHutangMotor, 0, "D", MataUangRowID, nHutangMotor);
                    }

                    // Potongan Pembelian -- Kredit
                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("POTPBL", "SHW", GlobalVar.CabangID);
                    tempUraian = "PBL/POT/POTPBL - PDPT LAIN (POT) - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                    if (isSimulate == true)
                    {
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                        sumD = sumD + 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPotongan;
                        sumK = sumK + nPotongan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPotongan;
                    }
                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                tempUraian, 0, nPotongan, "K", MataUangRowID, nPotongan);
                    }

                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        // lakukan update JournalRowID ke tabel PembayaranPemb
                        JournalRowID_UPDATE(ref db, ref counterdb, "usp_PembayaranPemb_UPDATE_Journal", pembayaranPembRowID, newJournalHeaderRowID);

                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error: " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error: " + ex.Message;
                    }
                }
            }

            return sresult;
        }

        // yg accrual ngga jadi dipakai nampaknya
        public static string JournalAccrual(Guid penjualanRowID, Guid PenjHistRowID, int procMonth, int procYear)
        {
            #region dtPenjualanAccrual Variables
            // variabel2 untuk simpan data accrual sementaranya
            // sebenernya yg kepake hanya Interest nya aja untuk jurnalnya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String NoBukti;
            String NoTrans;
            String NoPol;
            int TglJT;
            Double Interest;
            String CabangID;
            String NamaCustomer;
            String Uraian = "";
            String Beli_or_Gadai = "";
            #endregion

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            String tempUraian;
            String tempNoPerkiraan;

            // ambil data penjualannya dulu
            DataTable dtAccrual = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PenjualanAccrual_LIST_Journal"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, PenjHistRowID));
                dtAccrual = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtAccrual.Rows.Count < 1) ? "1. Data penjualan accrual tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    // cek datanya itu dari Pembelian atau Pegadaian
                    if (string.IsNullOrEmpty(dtAccrual.Rows[0]["nopolDariPembelian"].ToString()) == false)
                    {
                        // kalo ngga null/empty berarti dari pembelian
                        Beli_or_Gadai = "Beli";
                    }
                    if (string.IsNullOrEmpty(dtAccrual.Rows[0]["nopolDariPegadaian"].ToString()) == false)
                    {
                        // kalo ngga null/empty berarti dari pegadaian
                        Beli_or_Gadai = "Gadai";
                    }

                    // masukkin data datanya ke variabel sementara dulu
                    PerusahaanRowID = (Guid)Tools.isNull(dtAccrual.Rows[0]["PerusahaanRowID"], Guid.Empty);
                    MataUangRowID = (Guid)Tools.isNull(dtAccrual.Rows[0]["MataUangRowID"], Guid.Empty);
                    NoTrans = Tools.isNull(dtAccrual.Rows[0]["NoTrans"].ToString(), String.Empty).ToString();
                    NoBukti = Tools.isNull(dtAccrual.Rows[0]["NoBukti"].ToString(), String.Empty).ToString();
                    NoPol = Tools.isNull(dtAccrual.Rows[0]["NoPol"].ToString(), String.Empty).ToString();
                    TglJT = (int)Tools.isNull(Convert.ToInt32(dtAccrual.Rows[0]["TglJT"].ToString()), 0);
                    Interest = Convert.ToDouble(Tools.isNull(dtAccrual.Rows[0]["Interest"].ToString(), 0));
                    CabangID = Tools.isNull(dtAccrual.Rows[0]["CabangID"], String.Empty).ToString();
                    NamaCustomer = Tools.isNull(dtAccrual.Rows[0]["Nama"], String.Empty).ToString();

                    // proses PostingJurnal Accrual
                    // buat data tanggal jatuh temponya -> jadi tanggal pemasukkannya,
                    // misal kalo tglJT itu 31, dan yg lagi diproses Febuari,
                    // untuk sekarang jadiin ke tgl max nya di febuari itu, misal 28/29

                    DateTime tempMax = new DateTime(procYear, procMonth + 1, 1);
                    tempMax = tempMax.Date.AddDays(-1);
                    DateTime tempTglJTAccrual = new DateTime(procYear, procMonth, 1);
                    if (TglJT > tempMax.Date.Day)
                    {
                        // kalo masuk sini berarti TglJT nya itu melebihi maksimum tanggal di bulan proses ini
                        // dibuat jadi tanggal terakhir bulan ini aja
                        tempTglJTAccrual = new DateTime(procYear, procMonth, tempMax.Date.Day);
                    }
                    else
                    {
                        // kalo ngga melewati tanggal max, pake TglJT itu aja
                        tempTglJTAccrual = new DateTime(procYear, procMonth, TglJT);
                    }

                    // Proses masukkin JournalAccrual

                    // Masukkan data ke Journal dulu
                    Uraian = "Jurnal Accrual - " + NoPol + "|" + NamaCustomer + " - " + procMonth + procYear;
                    Journal.AddHeader_ver_2(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                            tempTglJTAccrual, NoBukti, Uraian, "ACR", GlobalVar.Gudang, false); // Src untuk Accrual itu ACR

                    // masukkan ke JournalDetail
                    // kalo JurnalAccrual itu
                    // Pendapatan Ditangguhkan -- Debet
                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                    tempUraian = "ACR - PDPT DTGHK - " + NoPol + "|" + NamaCustomer + " - " + procMonth + procYear + "-" + NoTrans + "|" + NoBukti;
                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                               tempUraian, Interest, 0, "D", MataUangRowID, Interest);

                    // Pendapatan Bunga Kredit -- Kredit
                    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTBNGK", "SHW", GlobalVar.CabangID);
                    tempUraian = "ACR -PDPT BNG K - " + NoPol + "|" + NamaCustomer + " - " + procMonth + procYear + "-" + NoTrans + "|" + NoBukti;
                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                               tempUraian, 0, Interest, "K", MataUangRowID, Interest);

                    // Untuk Accrual masukkan juga ke Jurnal Accrual nya
                    JournalPenjualanAccrual_INSERT(ref dbf, ref counterdbf, penjualanRowID, PenjHistRowID, newJournalHeaderRowID, tempTglJTAccrual);

                    db.BeginTransaction();
                    dbf.BeginTransaction();
                    int looper = 0;
                    for (looper = 0; looper < counterdb; looper++)
                    {
                        db.Commands[looper].ExecuteNonQuery();
                    }
                    for (looper = 0; looper < counterdbf; looper++)
                    {
                        dbf.Commands[looper].ExecuteNonQuery();
                    }
                    db.CommitTransaction();
                    dbf.CommitTransaction();
                }
                catch (Exception ex)
                {
                    db.RollbackTransaction();
                    dbf.RollbackTransaction();
                    sresult = "Pesan Error: " + ex.Message;
                }
            }
            return sresult;
        }

        public static string JournalTarikan(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid penjualanRowID, String JnsTRK, Guid PenjHistRowID)
        {
            #region dtPenjualanTarikan Variables
            // variabel2 untuk simpan data tarikan sementaranya
            Guid KasRowID;
            Guid RekeningRowID;
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String NoBukti;
            String NoTrans;
            String NoPol;
            DateTime TarikanTgl;
            Double BiayaTarikan;
            Double BiayaTarikanLL;
            Double EstimasiHargaMotor;
            Double HargaJadi;
            Double UangMuka;
            Double PiutangBunga;
            Double PiutangPokok;
            Double BayarBunga;
            Double BayarPokok;
            Double BayarUM;
            Double HargaJual;
            Double NominalPokok;
            Double PRR;
            String CabangID;
            String NamaCustomer;
            String Uraian = "";
            String Beli_or_Gadai = "";
            String BentukPembayaran = "";
            String UnitUsaha;
            #endregion

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Double sumD = 0, sumK = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            Guid newJournalHeaderRowIDTRD = Guid.NewGuid();
            String newRecIDTRD = Tools.CreateFingerPrint();

            Guid newJournalHeaderRowIDAvl = Guid.NewGuid();
            String newRecIDAvl = Tools.CreateFingerPrint();

            String tempUraian;
            String tempNoPerkiraan;

            String tempUraianTrd;
            String tempNoPerkiraanTrd;

            String tempUraianAvl;
            String tempNoPerkiraanAvl;

            // ambil data tarikannya dulu
            DataTable dtTarikan = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PenjualanTarikan_LIST_Journal"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PenjRowID", SqlDbType.UniqueIdentifier, penjualanRowID));

                if (JnsTRK == "TUN")
                {
                    // ga usah kasih parameter yg penjhist
                }
                else if (JnsTRK == "APD" || JnsTRK == "FLT")
                {
                    dbsub.Commands[0].Parameters.Add(new Parameter("@PenjHistRowID", SqlDbType.UniqueIdentifier, PenjHistRowID));
                }

                dtTarikan = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtTarikan.Rows.Count < 1) ? "1. Data tarikan tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    // cek datanya itu dari Pembelian atau Pegadaian
                    if (string.IsNullOrEmpty(dtTarikan.Rows[0]["nopolDariPembelian"].ToString()) == false)
                    {
                        // kalo ngga null/empty berarti dari pembelian
                        Beli_or_Gadai = "Beli";
                    }
                    if (string.IsNullOrEmpty(dtTarikan.Rows[0]["nopolDariPegadaian"].ToString()) == false)
                    {
                        // kalo ngga null/empty berarti dari pegadaian
                        Beli_or_Gadai = "Gadai";
                    }
                    // masuk2 in data ke variabel sementara dulu
                    CabangID = Tools.isNull(dtTarikan.Rows[0]["CabangID"], String.Empty).ToString();
                    PerusahaanRowID = (Guid)Tools.isNull(dtTarikan.Rows[0]["PerusahaanRowID"], Guid.Empty);
                    MataUangRowID = (Guid)Tools.isNull(dtTarikan.Rows[0]["MataUangRowID"], Guid.Empty);
                    NoTrans = Tools.isNull(dtTarikan.Rows[0]["NoTrans"], String.Empty).ToString();
                    NoBukti = Tools.isNull(dtTarikan.Rows[0]["NoBukti"], String.Empty).ToString();
                    HargaJadi = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["HargaJadi"].ToString(), 0));
                    PiutangBunga = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["PiutangBunga"].ToString(), 0));
                    PiutangPokok = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["PiutangPokok"].ToString(), 0));
                    UangMuka = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["UangMuka"].ToString(), 0));
                    BayarBunga = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BayarBunga"].ToString(), 0));
                    BayarPokok = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BayarPokok"].ToString(), 0));
                    BayarUM = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BayarUM"].ToString(), 0));
                    NoPol = Tools.isNull(dtTarikan.Rows[0]["NoPol"], String.Empty).ToString();
                    TarikanTgl = Convert.ToDateTime(dtTarikan.Rows[0]["TarikanTgl"].ToString());
                    BiayaTarikan = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BiayaTarikan"].ToString(), 0)); // ini biaya kolektor
                    BiayaTarikanLL = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BiayaTarikanLL"].ToString(), 0)); // ini biaya tarikan
                    NamaCustomer = Tools.isNull(dtTarikan.Rows[0]["Nama"], String.Empty).ToString();
                    EstimasiHargaMotor = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["EstimasiHargaMotor"].ToString(), 0));
                    BentukPembayaran = Tools.isNull(dtTarikan.Rows[0]["BentukPembayaran"], String.Empty).ToString();
                    RekeningRowID = (Guid)Tools.isNull(dtTarikan.Rows[0]["RekeningRowID"], Guid.Empty);
                    UnitUsaha = Tools.isNull(dtTarikan.Rows[0]["UnitUsaha"], String.Empty).ToString();


                    // mulai perhitungan sekaligus proses untuk insert data jurnal tarikan
                    Double nPersediaanBarang = 0;
                    Double nPiutangUsahaTetap = 0;
                    Double nPiutangBunga = 0;
                    Double nPendapatanKerugian = 0;
                    Double nPendapatanDitangguhkan = 0;
                    Double nPiutangBelumIden = 0;
                    // kalo Tunai
                    if (JnsTRK == "TUN")
                    {
                        nPersediaanBarang = EstimasiHargaMotor; // D - 110801130100/PSDBRG
                        nPiutangUsahaTetap = HargaJadi; // K - 110341130102/PUTTP
                        nPendapatanKerugian = nPersediaanBarang - nPiutangUsahaTetap; // nPendapatanKerugian < 0 ? D : K; 301PDTKRGXXX/PDTKRG

                        // Proses masukkin ke JournalTarikan - Tunai

                        // Masukkan data ke Journal dulu
                        Uraian = "Jurnal Tarikan/T - " + NoPol + "|" + NamaCustomer;

                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TarikanTgl, NoBukti, Uraian, "TRK", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Tarikan itu TRK
                        }
                        // masukkan ke JournalDetail
                        // kalo Jurnal Tarikan itu
                        // Persediaan Barang (110801130100/PSDBRG) -- Debet
                        if (GlobalVar.CabangID.Contains("06")) // tarikan pasti dianggap motor bekas
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "TRK/T - PERSEDIAAN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPersediaanBarang;
                            sumD = sumD + nPersediaanBarang;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanBarang;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, nPersediaanBarang, 0, "D", MataUangRowID, nPersediaanBarang);
                        }

                        // Piutang Usaha Tetap (110341130102/PUTTP) -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                        tempUraian = "TRK/T - PIUTANG - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangUsahaTetap;
                            sumK = sumK + nPiutangUsahaTetap;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, nPiutangUsahaTetap, "K", MataUangRowID, nPiutangUsahaTetap);
                        }

                        // Pendapatan / Kerugian (301PDTKRGXXX/PDTKRG) -- Kredit/Debet
                        if (nPendapatanKerugian > 0)
                        {
                            // kalo + itu berarti kredit, pendapatan
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTKRG", "SHW", GlobalVar.CabangID);
                            tempUraian = "TRK/T - PDPT - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPendapatanKerugian;
                                sumK = sumK + nPendapatanKerugian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanKerugian;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, 0, nPendapatanKerugian, "K", MataUangRowID, nPendapatanKerugian);
                            }
                        }
                        else if (nPendapatanKerugian < 0)
                        {
                            nPendapatanKerugian = Math.Abs(nPendapatanKerugian);
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTKRG", "SHW", GlobalVar.CabangID);
                            tempUraian = "TRK/T - KRGN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPendapatanKerugian;
                                sumD = sumD + nPendapatanKerugian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanKerugian;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, nPendapatanKerugian, 0, "D", MataUangRowID, nPendapatanKerugian);
                            }
                        }
                        else
                        {
                        }


                    } // jika tarikan penjualan kredit
                    else if (JnsTRK == "APD")
                    {
                        nPersediaanBarang = EstimasiHargaMotor; // D dulu debitnya ini utk tarikan 1 tahap
                        nPiutangBelumIden = PiutangPokok; // Debitnya make ini utk tarikan 2 tahap
                        nPersediaanBarang = EstimasiHargaMotor; // D
                        nPiutangUsahaTetap = PiutangPokok - BayarPokok; // K // sebelumnya HargaJadi - BayarPokok
                        nPendapatanKerugian = nPersediaanBarang - nPiutangUsahaTetap; // nPendapatanKerugian < 0 ? D : K;

                        // Proses masukkin ke JournalTarikan - APD

                        Uraian = "Jurnal Tarikan/K/APD - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TarikanTgl, NoBukti, Uraian, "TRK", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Tarikan itu TRK
                        }
                        //sekarang persediaannya masuk lewat jurnal pembelian
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTBLMID", "SHW", GlobalVar.CabangID);

                        //if (GlobalVar.CabangID.Contains("06")) // tarikan pasti dianggap motor bekas
                        //{
                        //    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                        //}
                        //else
                        //{
                        //    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                        //}
                        tempUraian = "TRK/K/APD - Piutang Belum Iden - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangBelumIden; //nPersediaanBarang;
                            sumD = sumD + nPiutangBelumIden;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangBelumIden; //nPersediaanBarang;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                  tempUraian, nPiutangBelumIden, 0, "D", MataUangRowID, nPiutangBelumIden);
                            //  tempUraian, nPersediaanBarang, 0, "D", MataUangRowID, nPersediaanBarang);
                        }

                        // Piutang Usaha Tetap (110341130102/PUTTP) -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                        tempUraian = "TRK/K/APD - PIUTANG - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangUsahaTetap;
                            sumK = sumK + nPiutangUsahaTetap;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, nPiutangUsahaTetap, "K", MataUangRowID, nPiutangUsahaTetap);
                        }

                    }
                    else if (JnsTRK == "FLT")
                    {

                        // Piutang Usaha Tetap (110341130102/PUTTP) -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("BS", "KSR", GlobalVar.CabangID);
                        tempUraian = "TRK/K/FLT - PIUTANG - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
 
                        //Journal Persediaan Tarikan di All
                        // Piutang Bunga (110341130300/PBNG) -- Kredit
                        Uraian = "TRK/K/FLT - PERSEDIAAN TARIKAN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                        newJournalHeaderRowID = Guid.NewGuid();
                        newRecID = Tools.CreateFingerPrint();
                        if (isSimulate == true)
                        {
                            //ALL
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TarikanTgl, NoBukti, Uraian, "TRK", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Tarikan itu TRK
                        }

                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGTR", "SHW", GlobalVar.CabangID);

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = EstimasiHargaMotor;
                            sumK = sumK + nPiutangBunga;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangBunga;

                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, nPiutangBunga, "K", MataUangRowID, nPiutangBunga);
                        }
                        // Pendapatan Ditangguhkan -- Debet
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("CPPRR", "SHW", GlobalVar.CabangID);
                        tempUraian = "TRK/K/FLT - PDPT DTGHK - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = EstimasiHargaMotor;
                            sumD = sumD + nPendapatanDitangguhkan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanDitangguhkan;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, nPendapatanDitangguhkan, 0, "D", MataUangRowID, nPendapatanDitangguhkan);
                        }
                    }

                    // lakukan update data JournalRowId ke Penjualan untuk Tarikan
                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanTarikan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);

                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error: " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error: " + ex.Message;
                    }
                }
            }
            return sresult;

        }


        public static string JournalTarikan_old(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid penjualanRowID, String JnsTRK, Guid PenjHistRowID)
        {
            #region dtPenjualanTarikan Variables
            // variabel2 untuk simpan data tarikan sementaranya
            Guid KasRowID;
            Guid RekeningRowID;
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String NoBukti;
            String NoTrans;
            String NoPol;
            DateTime TarikanTgl;
            Double BiayaTarikan;
            Double BiayaTarikanLL;
            Double EstimasiHargaMotor;
            Double HargaJadi;
            Double UangMuka;
            Double PiutangBunga;
            Double PiutangPokok;
            Double BayarBunga;
            Double BayarPokok;
            Double BayarUM;
            Double HargaJual;
            Double NominalPokok;
            Double PRR;
            String CabangID;
            String NamaCustomer;
            String Uraian = "";
            String Beli_or_Gadai = "";
            String BentukPembayaran = "";
            String UnitUsaha;
            #endregion

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Double sumD = 0, sumK = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            Guid newJournalHeaderRowIDTRD = Guid.NewGuid();
            String newRecIDTRD = Tools.CreateFingerPrint();

            Guid newJournalHeaderRowIDAvl = Guid.NewGuid();
            String newRecIDAvl = Tools.CreateFingerPrint();

            String tempUraian;
            String tempNoPerkiraan;

            String tempUraianTrd;
            String tempNoPerkiraanTrd;

            String tempUraianAvl;
            String tempNoPerkiraanAvl;

            // ambil data tarikannya dulu
            DataTable dtTarikan = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PenjualanTarikan_LIST_Journal"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PenjRowID", SqlDbType.UniqueIdentifier, penjualanRowID));

                if (JnsTRK == "TUN")
                {
                    // ga usah kasih parameter yg penjhist
                }
                else if (JnsTRK == "APD" || JnsTRK == "FLT")
                {
                    dbsub.Commands[0].Parameters.Add(new Parameter("@PenjHistRowID", SqlDbType.UniqueIdentifier, PenjHistRowID));
                }

                dtTarikan = dbsub.Commands[0].ExecuteDataTable();
             }

            string sresult = (dtTarikan.Rows.Count < 1) ? "1. Data tarikan tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
                {
                    try
                    {
                        // cek datanya itu dari Pembelian atau Pegadaian
                        if (string.IsNullOrEmpty(dtTarikan.Rows[0]["nopolDariPembelian"].ToString()) == false)
                        {
                            // kalo ngga null/empty berarti dari pembelian
                            Beli_or_Gadai = "Beli";
                        }
                        if (string.IsNullOrEmpty(dtTarikan.Rows[0]["nopolDariPegadaian"].ToString()) == false)
                        {
                            // kalo ngga null/empty berarti dari pegadaian
                            Beli_or_Gadai = "Gadai";
                        }
                        // masuk2 in data ke variabel sementara dulu
                        CabangID = Tools.isNull(dtTarikan.Rows[0]["CabangID"], String.Empty).ToString();
                        PerusahaanRowID = (Guid)Tools.isNull(dtTarikan.Rows[0]["PerusahaanRowID"], Guid.Empty);
                        MataUangRowID = (Guid)Tools.isNull(dtTarikan.Rows[0]["MataUangRowID"], Guid.Empty);
                        NoTrans = Tools.isNull(dtTarikan.Rows[0]["NoTrans"], String.Empty).ToString();
                        NoBukti = Tools.isNull(dtTarikan.Rows[0]["NoBukti"], String.Empty).ToString();
                        HargaJadi = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["HargaJadi"].ToString(), 0));
                        PiutangBunga = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["PiutangBunga"].ToString(), 0));
                        PiutangPokok = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["PiutangPokok"].ToString(), 0));
                        UangMuka = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["UangMuka"].ToString(), 0));
                        BayarBunga = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BayarBunga"].ToString(), 0));
                        BayarPokok = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BayarPokok"].ToString(), 0));
                        BayarUM = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BayarUM"].ToString(), 0));
                        NoPol = Tools.isNull(dtTarikan.Rows[0]["NoPol"], String.Empty).ToString();
                        TarikanTgl = Convert.ToDateTime(dtTarikan.Rows[0]["TarikanTgl"].ToString());
                        BiayaTarikan = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BiayaTarikan"].ToString(), 0)); // ini biaya kolektor
                        BiayaTarikanLL = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["BiayaTarikanLL"].ToString(), 0)); // ini biaya tarikan
                        NamaCustomer = Tools.isNull(dtTarikan.Rows[0]["Nama"], String.Empty).ToString();
                        EstimasiHargaMotor = Convert.ToDouble(Tools.isNull(dtTarikan.Rows[0]["EstimasiHargaMotor"].ToString(), 0));
                        BentukPembayaran = Tools.isNull(dtTarikan.Rows[0]["BentukPembayaran"], String.Empty).ToString();
                        RekeningRowID = (Guid)Tools.isNull(dtTarikan.Rows[0]["RekeningRowID"], Guid.Empty);
                        UnitUsaha = Tools.isNull(dtTarikan.Rows[0]["UnitUsaha"], String.Empty).ToString();


                        // mulai perhitungan sekaligus proses untuk insert data jurnal tarikan
                        Double nPersediaanBarang = 0;
                        Double nPiutangUsahaTetap = 0;
                        Double nPiutangBunga = 0;
                        Double nPendapatanKerugian = 0;
                        Double nPendapatanDitangguhkan = 0;
                        Double nPiutangBelumIden = 0;
                        // kalo Tunai
                        if (JnsTRK == "TUN")
                        {
                            nPersediaanBarang = EstimasiHargaMotor; // D - 110801130100/PSDBRG
                            nPiutangUsahaTetap = HargaJadi; // K - 110341130102/PUTTP
                            nPendapatanKerugian = nPersediaanBarang - nPiutangUsahaTetap; // nPendapatanKerugian < 0 ? D : K; 301PDTKRGXXX/PDTKRG

                            // Proses masukkin ke JournalTarikan - Tunai

                            // Masukkan data ke Journal dulu
                            Uraian = "Jurnal Tarikan/T - " + NoPol + "|" + NamaCustomer;

                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TarikanTgl, NoBukti, Uraian, "TRK", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Tarikan itu TRK
                            }
                            // masukkan ke JournalDetail
                            // kalo Jurnal Tarikan itu
                            // Persediaan Barang (110801130100/PSDBRG) -- Debet
                            if (GlobalVar.CabangID.Contains("06")) // tarikan pasti dianggap motor bekas
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                            }
                            else
                            {
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                            }
                            tempUraian = "TRK/T - PERSEDIAAN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPersediaanBarang;
                                sumD = sumD + nPersediaanBarang;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanBarang;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, nPersediaanBarang, 0, "D", MataUangRowID, nPersediaanBarang);
                            }

                            // Piutang Usaha Tetap (110341130102/PUTTP) -- Kredit
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                            tempUraian = "TRK/T - PIUTANG - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangUsahaTetap;
                                sumK = sumK + nPiutangUsahaTetap;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, 0, nPiutangUsahaTetap, "K", MataUangRowID, nPiutangUsahaTetap);
                            }

                            // Pendapatan / Kerugian (301PDTKRGXXX/PDTKRG) -- Kredit/Debet
                            if (nPendapatanKerugian > 0)
                            {
                                // kalo + itu berarti kredit, pendapatan
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTKRG", "SHW", GlobalVar.CabangID);
                                tempUraian = "TRK/T - PDPT - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                    sumD = sumD + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPendapatanKerugian;
                                    sumK = sumK + nPendapatanKerugian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanKerugian;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, 0, nPendapatanKerugian, "K", MataUangRowID, nPendapatanKerugian);
                                }
                            }
                            else if (nPendapatanKerugian < 0)
                            {
                                nPendapatanKerugian = Math.Abs(nPendapatanKerugian);
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTKRG", "SHW", GlobalVar.CabangID);
                                tempUraian = "TRK/T - KRGN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                                if (isSimulate == true)
                                {
                                    dtDetail.Rows.Add();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPendapatanKerugian;
                                    sumD = sumD + nPendapatanKerugian;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                    sumK = sumK + 0;
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                    dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanKerugian;
                                }
                                else
                                {
                                    Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                               tempUraian, nPendapatanKerugian, 0, "D", MataUangRowID, nPendapatanKerugian);
                                }
                            }
                            else
                            {
                            }


                        } // jika tarikan penjualan kredit
                        else if (JnsTRK == "APD")
                        {
                            nPersediaanBarang = EstimasiHargaMotor; // D dulu debitnya ini utk tarikan 1 tahap
                            nPiutangBelumIden = PiutangPokok; // Debitnya make ini utk tarikan 2 tahap
                            nPersediaanBarang = EstimasiHargaMotor; // D
                            nPiutangUsahaTetap = PiutangPokok - BayarPokok; // K // sebelumnya HargaJadi - BayarPokok
                            nPendapatanKerugian = nPersediaanBarang - nPiutangUsahaTetap; // nPendapatanKerugian < 0 ? D : K;

                            // Proses masukkin ke JournalTarikan - APD

                            Uraian = "Jurnal Tarikan/K/APD - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            if (isSimulate == true)
                            {
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TarikanTgl, NoBukti, Uraian, "TRK", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Tarikan itu TRK
                            }
                            //sekarang persediaannya masuk lewat jurnal pembelian
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTBLMID", "SHW", GlobalVar.CabangID);

                            //if (GlobalVar.CabangID.Contains("06")) // tarikan pasti dianggap motor bekas
                            //{
                            //    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                            //}
                            //else
                            //{
                            //    tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                            //}
                            tempUraian = "TRK/K/APD - Piutang Belum Iden - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangBelumIden; //nPersediaanBarang;
                                sumD = sumD + nPiutangBelumIden;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangBelumIden; //nPersediaanBarang;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                      tempUraian, nPiutangBelumIden, 0, "D", MataUangRowID, nPiutangBelumIden);                     
                                    //  tempUraian, nPersediaanBarang, 0, "D", MataUangRowID, nPersediaanBarang);
                            }

                            // Piutang Usaha Tetap (110341130102/PUTTP) -- Kredit
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                            tempUraian = "TRK/K/APD - PIUTANG - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangUsahaTetap;
                                sumK = sumK + nPiutangUsahaTetap;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, 0, nPiutangUsahaTetap, "K", MataUangRowID, nPiutangUsahaTetap);
                            }
                            
                        }
                        else if (JnsTRK == "FLT")
                        {
                            //jurnal untuk data uang muka tarikan - check for elae
                            #region Uang Muka Tarikan
                            Uraian = "Jurnal Tarikan/UM/K/FLT - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            if (isSimulate == true)
                            {
                                //ALL
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";

                                //TRD
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowIDTRD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecIDTRD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "TRD";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TarikanTgl, NoBukti, Uraian, "TRK", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Tarikan itu TRK
                            }

                            
                            //detail Uang Muka Tarikan.
                            // sekarang per sep 2016
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("BS", "KSR", GlobalVar.CabangID); //Uang Muka Tarikan Motor
                            tempUraian = "UM/TRK/K/FLT - UANG MUKA TARIKAN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            if (isSimulate == true)
                            {
                                //Untuk All
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = UangMuka; //nPersediaanBarang;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = UangMuka; //nPersediaanBarang;

                                //Untuk Trd
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTRD;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = UangMuka; //nPersediaanBarang;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = UangMuka; //nPersediaanBarang;

                                //Kredit Akun Kas untuk sementara dibuat hardcopy, masih belum mendapatkan untuk mendapatkan akun kas.
                                tempNoPerkiraan = "110102100";
                                //Untuk All
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0; //nPersediaanBarang;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = UangMuka;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = UangMuka; //nPersediaanBarang;

                                //Untuk Trd
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTRD;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0; //nPersediaanBarang;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = UangMuka;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = UangMuka; //nPersediaanBarang;


                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                            }

                            #endregion

                            // nPiutangBelumIden = PiutangPokok; 
                            nPersediaanBarang = EstimasiHargaMotor; // D ini debit tarikan 1 tahap
                            nPiutangUsahaTetap = PiutangPokok - BayarPokok; // K // Debitnya make ini utk tarikan 2 tahap
                            nPiutangBunga = PiutangBunga - BayarBunga; // K 
                            nPendapatanDitangguhkan = nPiutangBunga; // D
                            nPendapatanKerugian = nPersediaanBarang - (nPiutangUsahaTetap); // nPendapatanKerugian < 0 ? D : K;

                            // Proses masukkin ke JournalTarikan - Tunai






                            // Masukkan data ke Journal dulu
                            Uraian = "Jurnal Tarikan/K/FLT - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                             newJournalHeaderRowID = Guid.NewGuid();
                             newRecID = Tools.CreateFingerPrint();

                             newJournalHeaderRowIDTRD = Guid.NewGuid();
                             newRecIDTRD = Tools.CreateFingerPrint();

                             newJournalHeaderRowIDAvl = Guid.NewGuid();
                             newRecIDAvl = Tools.CreateFingerPrint();

                            if (isSimulate == true)
                            {
                                //ALL
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";

                                //TRD
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowIDTRD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecIDTRD;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "TRD";

                                //AVL
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowIDAvl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecIDAvl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "AVL";

                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TarikanTgl, NoBukti, Uraian, "TRK", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Tarikan itu TRK
                            }
                            

                            // sekarang per sep 2016
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTLSGBI", "SHW", GlobalVar.CabangID);
                            tempNoPerkiraanTrd = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", "06A1");
                            tempNoPerkiraanAvl = GetPerkiraanKoneksiDetail("BYATRK", "SHW", GlobalVar.CabangID);
                            	
                            tempUraian = "TRK/K/FLT - PIUTANG BELUM IDEN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            if (isSimulate == true)
                            {
                                //ALL
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap; //nPersediaanBarang;
                                sumD = sumD + nPiutangUsahaTetap;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap; //nPersediaanBarang;

                                //trd piutang trd
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTRD;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraanTrd;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraanTrd);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap; //nPersediaanBarang;
                                sumD = sumD + nPiutangUsahaTetap;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap; //nPersediaanBarang;

                                //trd piutang avl
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDAvl;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraanAvl;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraanAvl);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap; //nPersediaanBarang;
                                sumD = sumD + nPiutangUsahaTetap;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap; //nPersediaanBarang;

                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                            }

                            // Piutang Usaha Tetap (110341130102/PUTTP) -- Kredit
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("BS", "KSR", GlobalVar.CabangID);
                            tempUraian = "TRK/K/FLT - PIUTANG - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            tempNoPerkiraanAvl = GetPerkiraanKoneksiDetail("PJLKDT", "SHW", "06A2");

                            if (isSimulate == true)
                            {
                                //ALL
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangUsahaTetap;
                                sumK = sumK + nPiutangUsahaTetap;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;

                                //TRD
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTRD;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangUsahaTetap;
                                sumK = sumK + nPiutangUsahaTetap;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;

                                //Avl
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDAvl;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraanAvl;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraanAvl);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangUsahaTetap;
                                sumK = sumK + nPiutangUsahaTetap;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;

                            }
                           else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, 0, nPiutangUsahaTetap, "K", MataUangRowID, nPiutangUsahaTetap);
                            }

                            //Journal Persediaan Tarikan di All
                            // Piutang Bunga (110341130300/PBNG) -- Kredit
                            Uraian = "TRK/K/FLT - PERSEDIAAN TARIKAN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            newJournalHeaderRowID = Guid.NewGuid();
                            newRecID = Tools.CreateFingerPrint();
                            if (isSimulate == true)
                            {
                                //ALL
                                dtHeader.Rows.Add();
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TarikanTgl;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                                dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                            }
                            else
                            {
                                Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                        TarikanTgl, NoBukti, Uraian, "TRK", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Tarikan itu TRK
                            }

                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGTR", "SHW", GlobalVar.CabangID);

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                                sumD = sumD + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangBunga;
                                sumK = sumK + nPiutangBunga;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangBunga;

                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, 0, nPiutangBunga, "K", MataUangRowID, nPiutangBunga);
                            }
                            // Pendapatan Ditangguhkan -- Debet
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("CPPRR", "SHW", GlobalVar.CabangID);
                            tempUraian = "TRK/K/FLT - PDPT DTGHK - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                            if (isSimulate == true)
                            {
                                dtDetail.Rows.Add();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPendapatanDitangguhkan;
                                sumD = sumD + nPendapatanDitangguhkan;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                                sumK = sumK + 0;
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                                dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanDitangguhkan;
                            }
                            else
                            {
                                Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                           tempUraian, nPendapatanDitangguhkan, 0, "D", MataUangRowID, nPendapatanDitangguhkan);
                            }
                            // Pendapatan / Kerugian (301PDTKRGXXX/PDTKRG) -- Kredit/Debet
                        //    if (nPendapatanKerugian > 0)
                        //    {
                        //        // kalo + itu berarti kredit, pendapatan
                        //        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTKRG", "SHW", GlobalVar.CabangID);
                        //        tempUraian = "TRK/K/FLT - PDPT - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        //        if (isSimulate == true)
                        //        {
                        //            dtDetail.Rows.Add();
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                        //            sumD = sumD + 0;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPendapatanKerugian;
                        //            sumK = sumK + nPendapatanKerugian;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanKerugian;
                        //        }
                        //        else
                        //        {
                        //            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                        //                                       tempUraian, 0, nPendapatanKerugian, "K", MataUangRowID, nPendapatanKerugian);
                        //        }
                        //    }
                        //    else if (nPendapatanKerugian < 0)
                        //    {
                        //        nPendapatanKerugian = Math.Abs(nPendapatanKerugian);
                        //        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTKRG", "SHW", GlobalVar.CabangID);
                        //        tempUraian = "TRK/K/FLT - KRGN - " + NoPol + "|" + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        //        if (isSimulate == true)
                        //        {
                        //            dtDetail.Rows.Add();
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPendapatanKerugian;
                        //            sumD = sumD + nPendapatanKerugian;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                        //            sumK = sumK + 0;
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                        //            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPendapatanKerugian;
                        //        }
                        //        else
                        //        {
                        //            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                        //                                       tempUraian, nPendapatanKerugian, 0, "D", MataUangRowID, nPendapatanKerugian);
                        //        }
                        //    }
                        //    else
                        //    {
                        //    }
                        }

                        // lakukan update data JournalRowId ke Penjualan untuk Tarikan
                        if (isSimulate == true)
                        {
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                        }
                        else
                        {
                            JournalRowID_UPDATE(ref db, ref counterdb, "usp_PenjualanTarikan_UPDATE_Journal", penjualanRowID, newJournalHeaderRowID);

                            db.BeginTransaction();
                            dbf.BeginTransaction();
                            int looper = 0;
                            for (looper = 0; looper < counterdb; looper++)
                            {
                                db.Commands[looper].ExecuteNonQuery();
                            }
                            for (looper = 0; looper < counterdbf; looper++)
                            {
                                dbf.Commands[looper].ExecuteNonQuery();
                            }
                            db.CommitTransaction();
                            dbf.CommitTransaction();
                        }
                    }
                    catch (Exception ex)
                    {
                        if (isSimulate == true)
                        {
                            MessageBox.Show("Pesan Error: " + ex.Message);
                        }
                        else
                        {
                            db.RollbackTransaction();
                            dbf.RollbackTransaction();
                            sresult = "Pesan Error: " + ex.Message;
                        }
                    }
                }
                return sresult;
            
        }

        public static string JournalPenjualanHPP(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid penjualanRowID, Guid pembelianRowID, String Src, Guid SrcRowID, String Ket)
        {
            #region dtPenjualanHPP Variables
            // variabel2 untuk simpan data HPP sementaranya
            // sebenernya yg kepake hanya HPP nya aja untuk jurnalnya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String NoBukti;
            String NoTrans;
            String NoPol;
            DateTime TglJual;
            Double HPP;
            String CabangID;
            String Uraian = "";
            String Kondisi;
            String FlagSource = "ORI";
            String FlagSourcePBL = "ORI";
            String NoRangka, NoMesin;
            String UnitUsaha;
            #endregion

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Double sumD = 0, sumK = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            String tempUraian = "";
            String tempNoPerkiraan = "";

            // ambil data HPPnya dulu
            DataTable dtHPP = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_Penjualan_LIST_CLOSINGHPP"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PenjRowID", SqlDbType.UniqueIdentifier, penjualanRowID));
                dbsub.Commands[0].Parameters.Add(new Parameter("@CabangID", SqlDbType.VarChar, GlobalVar.CabangID));
                dbsub.Commands[0].Parameters.Add(new Parameter("@Src", SqlDbType.VarChar, Src));
                dbsub.Commands[0].Parameters.Add(new Parameter("@SrcRowID", SqlDbType.UniqueIdentifier, SrcRowID));
                dtHPP = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtHPP.Rows.Count < 1) ? "1. Data HPP tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    // kalau data HPP nya 0 atau NULL, berhenti dan kasih pesan
                    if (String.IsNullOrEmpty(dtHPP.Rows[0]["HPP"].ToString()))
                    {
                        sresult = "Pembayaran Pembelian Motor belum dilakukan.";
                        return sresult;
                    }
                    // masukkin data datanya ke variabel sementara dulu
                    Kondisi = Tools.isNull(dtHPP.Rows[0]["Kondisi"], String.Empty).ToString();
                    FlagSource = Tools.isNull(dtHPP.Rows[0]["FlagSource"], "ORI").ToString();
                    FlagSourcePBL = Tools.isNull(dtHPP.Rows[0]["FlagSourcePBL"], "ORI").ToString();
                    PerusahaanRowID = (Guid)dtHPP.Rows[0]["PerusahaanRowID"];
                    MataUangRowID = (Guid)dtHPP.Rows[0]["MataUangRowID"];
                    NoTrans = dtHPP.Rows[0]["NoTrans"].ToString();
                    NoBukti = dtHPP.Rows[0]["NoBukti"].ToString();
                    NoPol = dtHPP.Rows[0]["NoPol"].ToString();
                    TglJual = Convert.ToDateTime(dtHPP.Rows[0]["TglJual"].ToString());
                    HPP = Convert.ToDouble(dtHPP.Rows[0]["HPP"].ToString());
                    CabangID = dtHPP.Rows[0]["CabangID"].ToString();
                    NoMesin = Tools.isNull(dtHPP.Rows[0]["NoMesin"], "").ToString();
                    NoRangka = Tools.isNull(dtHPP.Rows[0]["NoRangka"], "").ToString();

                    // kalau data HPP nya 0 atau NULL, berhenti dan kasih pesan
                    if (HPP < 1)
                    {
                        sresult = "Pembayaran Pembelian Motor belum dilakukan.";
                        return sresult;
                    }

                    // proses PostingJurnal ClosingHPP

                    // Proses masukkin closingHPP
                    // Masukkan data ke Journal dulu
                    if (Src == "PPB")
                    {
                        Uraian = "Jurnal ClosingHPP(" + Ket + " ) - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoBukti;
                    }
                    else
                    {
                        Uraian = "Jurnal ClosingHPP - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoBukti;
                    }

                    UnitUsaha = Tools.isNull(dtHPP.Rows[0]["UnitUsaha"], "").ToString();

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "HPP";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";

                        //edited by syaifi
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglJual;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "HPP";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "TRD";
                    }
                    else
                    {
                        Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                TglJual, NoBukti, Uraian, "HPP", GlobalVar.Gudang, false, UnitUsaha); // Src untuk HPP itu HPP
                    }

                    // masukkan ke JournalDetail
                    // kalo ClosingHPP itu
                    // Harga Pokok Penjualan -- Debet
                    if (GlobalVar.CabangID.Contains("06"))
                    {
                        if (Kondisi.ToLower() == "baru")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HPPBR", "SHW", GlobalVar.CabangID);
                        }
                        else if (Kondisi.ToLower() == "bekas")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HPPLM", "SHW", GlobalVar.CabangID);
                        }
                    }
                    else
                    {
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("HPP", "SHW", GlobalVar.CabangID);
                    }
                    if (Src == "PPB")
                    {
                        tempUraian = "HPP|" + Ket + " - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoBukti;
                    }
                    else
                    {
                        tempUraian = "HPP - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoBukti;
                    }

                    if (isSimulate == true)
                    {
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = HPP;
                        sumD = sumD + HPP;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                        sumK = sumK + 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = HPP;
                    }
                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                   tempUraian, HPP, 0, "D", MataUangRowID, HPP);
                    }

                    // Persediaan Barang -- Kredit
                    if (GlobalVar.CabangID.Contains("06"))
                    {
                        if (Kondisi.ToLower() == "baru")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGBR", "SHW", GlobalVar.CabangID);
                        }
                        else if (Kondisi.ToLower() == "bekas")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                        }
                    }
                    else
                    {
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                    }
                    if (Src == "PPB")
                    {
                        tempUraian = "HPP|" + Ket + " - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoBukti;
                    }
                    else
                    {
                        tempUraian = "HPP - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoBukti;
                    }

                    if (isSimulate == true)
                    {
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                        sumD = sumD + 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = HPP;
                        sumK = sumK + HPP;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = HPP;
                    }
                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                   tempUraian, 0, HPP, "K", MataUangRowID, HPP);
                    }


                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        // lakukan update ke JurnalRowIDHPP nya yang di Penjualan
                        if (Src == "PPB")
                        {
                            JournalRowID_UPDATE(ref db, ref counterdb, "usp_PembayaranPemb_UPDATE_JournalHPP", SrcRowID, newJournalHeaderRowID);
                        }
                        else
                        {
                            JournalRowID_UPDATE(ref db, ref counterdb, "usp_Penjualan_UPDATE_JournalHPP", penjualanRowID, newJournalHeaderRowID);
                        }

                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error: " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error: " + ex.Message;
                    }
                }
            }
            return sresult;
        }


        public static string JournalPembelianREPTAM(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid pembelianRowID, Guid pembayaranpembRowID)
        {
            #region dtPembelianREPTAM Variables
            // variabel2 untuk simpan data REPTAM sementaranya
            // sebenernya yg kepake hanya Nominal nya aja untuk jurnalnya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String NoFaktur;
            String NoTrans;
            String NoPol;
            String Jenis;
            DateTime Tanggal;
            DateTime TglBeli;
            Double Nominal;
            String CabangID;
            String Kondisi;
            String Uraian = "";
            String NoMesin, NoRangka;
            String UnitUsaha;
            #endregion

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;
            Double sumD = 0, sumK = 0;
            Guid newJournalHeaderRowID = Guid.NewGuid();
            Guid newJournalHeaderRowIDTrd = Guid.NewGuid();

            String newRecID = Tools.CreateFingerPrint();

            String tempUraian;
            String tempNoPerkiraan = "";

            // ambil data pembeliannya dulu
            DataTable dtREPTAM = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PembayaranPemb_LIST_CLOSINGREPTAM"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PembayaranPembRowID", SqlDbType.UniqueIdentifier, pembayaranpembRowID));
                dbsub.Commands[0].Parameters.Add(new Parameter("@CabangID", SqlDbType.VarChar, GlobalVar.CabangID));
                dtREPTAM = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtREPTAM.Rows.Count < 1) ? "1. Data Pembayaran Pembelian tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    // masukkin data datanya ke variabel sementara dulu
                    PerusahaanRowID = (Guid)dtREPTAM.Rows[0]["PerusahaanRowID"];
                    MataUangRowID = (Guid)dtREPTAM.Rows[0]["MataUangRowID"];
                    NoTrans = dtREPTAM.Rows[0]["NoTrans"].ToString();
                    NoFaktur = dtREPTAM.Rows[0]["NoFaktur"].ToString();
                    NoPol = dtREPTAM.Rows[0]["NoPol"].ToString();
                    Tanggal = Convert.ToDateTime(dtREPTAM.Rows[0]["Tanggal"].ToString());
                    TglBeli = Convert.ToDateTime(dtREPTAM.Rows[0]["TglBeli"].ToString());
                    CabangID = dtREPTAM.Rows[0]["CabangID"].ToString();
                    Jenis = dtREPTAM.Rows[0]["Jenis"].ToString();
                    Nominal = Convert.ToDouble(dtREPTAM.Rows[0]["Nominal"].ToString());
                    Kondisi = Tools.isNull(dtREPTAM.Rows[0]["Kondisi"], String.Empty).ToString();
                    NoMesin = Tools.isNull(dtREPTAM.Rows[0]["NoMesin"], "").ToString();
                    NoRangka = Tools.isNull(dtREPTAM.Rows[0]["NoRangka"], "").ToString();
                    // proses PostingJurnal ClosingREPTAM

                    // Proses masukkin JournalREPTAM

                    // Masukkan data ke Journal dulu
                    Uraian = "Jurnal Closing PembelianREPTAM - " + NoPol + "|" + NoRangka;
                    UnitUsaha = Tools.isNull(dtREPTAM.Rows[0]["UnitUsaha"], "").ToString();
                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = Tanggal;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoFaktur;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "CRT";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "ALL";
                        
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowIDTrd;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = Tanggal;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoFaktur;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "CRT";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Owner"] = "TRD";
                    }
                    else
                    {
                        Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                Tanggal, NoFaktur, Uraian, "CRT", GlobalVar.Gudang, false, UnitUsaha); // Src untuk ClosingREPTAM 'sementara' CRT
                    }
                    // masukkan ke JournalDetail
                    // kalo JurnalREPTAM itu
                    // Persediaan Barang -- Debet
                    if (GlobalVar.CabangID.Contains("06"))
                    {
                        if (Kondisi.ToLower() == "baru")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGBR", "SHW", GlobalVar.CabangID);
                        }
                        else if (Kondisi.ToLower() == "bekas")
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGLM", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "CRT - H.U. Motor - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;
                    }
                    else
                    {
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRG", "SHW", GlobalVar.CabangID);
                        tempUraian = "CRT - PERSEDIAAN - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;
                    }

                    if (isSimulate == true)
                    {
                        
                        //untuk all
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Nominal;
                        sumD = sumD + Nominal;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                        sumK = sumK + 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;

                        //untuk trading.
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowIDTrd;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Nominal;
                        sumD = sumD + Nominal;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                        sumK = sumK + 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                    }
                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                   tempUraian, Nominal, 0, "D", MataUangRowID, Nominal);
                    }
                    // Cek jenisnya dulu, REP atau TAM
                    if (Jenis == "REP")
                    {
                        // Biaya Reparasi -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSBREP", "SHW", GlobalVar.CabangID); // BYAREP
                        tempUraian = "CRT - B.REPARASI - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Nominal;
                            sumK = sumK + Nominal;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, Nominal, "K", MataUangRowID, Nominal);
                        }
                    }
                    else if (Jenis == "TAM")
                    {
                        // Biaya Tambahan Lain - Lain -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSBREP", "SHW", GlobalVar.CabangID); // BYATAM
                        tempUraian = "CRT - B.LAINX2 - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Nominal;
                            sumK = sumK + Nominal;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, Nominal, "K", MataUangRowID, Nominal);
                        }
                    }

                    // lakukan update ke data pembayaran pembeliannya ke jurnalREPTAMRowID

                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        JournalRowID_UPDATE(ref db, ref counterdb, "usp_PembayaranPemb_UPDATE_JournalREPTAM", pembayaranpembRowID, newJournalHeaderRowID);

                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error: " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error: " + ex.Message;
                    }
                }
            }
            return sresult;
        }

        public static void PenerimaanPLSUpdateJournal(ref Database db, ref int counterdb, Guid RowIDUM, Guid JournalRowID)
        {
            db.Commands.Add(db.CreateCommand("usp_PenerimaanANG_PLS_UPDATE_Journal"));
            db.Commands[counterdb].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, RowIDUM));
            db.Commands[counterdb].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, JournalRowID));
            db.Commands[counterdb].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            counterdb++;
        }

        public static void PenerimaanUMPLSUpdateJournal(ref Database db, ref int counterdb, Guid RowIDUM, Guid JournalRowID)
        {
            db.Commands.Add(db.CreateCommand("usp_PenerimaanUM_PLS_UPDATE_Journal"));
            db.Commands[counterdb].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, RowIDUM));
            db.Commands[counterdb].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, JournalRowID));
            db.Commands[counterdb].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            counterdb++;
        }

        public static void PenerimaanTitipanIdenUpdateJournal(ref Database db, ref int counterdb, Guid SrcRowID, Guid JournalRowID, String SrcID)
        {
            db.Commands.Add(db.CreateCommand("usp_PenerimaanTitipanIden_UPDATE_JournalRowID"));
            db.Commands[counterdb].Parameters.Add(new Parameter("@SrcRowID", SqlDbType.UniqueIdentifier, SrcRowID));
            db.Commands[counterdb].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, JournalRowID));
            db.Commands[counterdb].Parameters.Add(new Parameter("@SrcID", SqlDbType.VarChar, SrcID));
            db.Commands[counterdb].Parameters.Add(new Parameter("@LastUpdatedBy", SqlDbType.VarChar, SecurityManager.UserID));
            counterdb++;
        }

        public static string JournalKoreksiPiutangBunga_PLS(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid PenjHistRowID)
        {
            // hanya khusus kalau FLT dan ada UMT sehingga perlu kalkulasi ulang
            #region dtPenjualan Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            Guid JournalRowID;
            String NoTrans;
            String NamaCustomer;
            String NoPol;

            String NoPerkiraanDebet;
            Double DebetTerjurnal;
            String NoPerkiraanKredit;
            Double KreditTerjurnal;
            Double TotalBayarBunga;
            Double PiutangBunga;
            Double PiutangBungaBaru;

            String NoBuktiPJL;
            Guid RowIDPLS;
            DateTime TglPLS;
            String UnitUsaha;

            #endregion

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;
            Double sumD = 0, sumK = 0;
            String newRecID;
            Guid newJournalHeaderRowID;
            String Uraian;

            String tempUraian;
            String tempNoPerkiraan;

            // ambil data yg mau diproses
            DataTable dtPenjualanHist = new DataTable();
            DataTable dtPenerimaanUMLeasing = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PenerimaanANG_PLS_LIST_Journal"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PenjHistRowID", SqlDbType.UniqueIdentifier, PenjHistRowID));
                dtPenjualanHist = dbsub.Commands[0].ExecuteDataTable();
            }

            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PenerimaanUM_PLS_LIST_Journal"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, PenjHistRowID)); //jika dari piutang lsg belum iden PenjhistRowID adalah PenerimaanUMRowID
                dtPenerimaanUMLeasing = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = "Ok";
            if (dtPenjualanHist.Rows.Count < 1 && dtPenerimaanUMLeasing.Rows.Count < 0)
            {
                sresult = "1. Data historis penjualan tidak dapat diambil!";
                return sresult;
            }
            if (dtPenjualanHist.Rows.Count > 1)
            {
                sresult = "1.X Data historis penjualan terlalu banyak (seharusnya tidak ada lebih dari 1 data Pelunasan)!";
                return sresult;
            }
            if (dtPenerimaanUMLeasing.Rows.Count > 1)
            {
                sresult = "1.X Data historis penerimaanUm terlalu banyak (seharusnya tidak ada lebih dari 1 data Pelunasan)!";
                return sresult;
            }

            if (sresult == "Ok")
            {

                try
                {
                    if (dtPenjualanHist.Rows.Count == 1)
                    {
                        // yg keambil itu datanya harusnya hanya 1
                        // 1. hitung hasil piutang bunga baru, (dari yg terinput dikurangin sama bunga yg terbayar)
                        // ambil data piutangBunga sama PendapatanDitangguhkan yg sudah kebentuk jurnalnya
                        JournalRowID = (Guid)Tools.isNull(dtPenjualanHist.Rows[0]["JournalRowID"], Guid.Empty);
                        if (JournalRowID == Guid.Empty)
                        {
                            sresult = "2. Data historis penjualan belum terjurnal!";
                            return sresult;
                        }
                        MataUangRowID = (Guid)Tools.isNull(dtPenjualanHist.Rows[0]["MataUangRowID"], Guid.Empty);
                        if (MataUangRowID == Guid.Empty)
                        {
                            sresult = "3. Data Mata Uang RowID tidak bisa didapatkan!";
                            return sresult;
                        }
                        NoTrans = Tools.isNull(dtPenjualanHist.Rows[0]["NoTransANG"], "").ToString();
                        if (NoTrans == "")
                        {
                            sresult = "4. Data No Trans UM tidak bisa didapatkan!";
                            return sresult;
                        }
                        NoPol = Tools.isNull(dtPenjualanHist.Rows[0]["Nopol"], "").ToString();
                        NamaCustomer = Tools.isNull(dtPenjualanHist.Rows[0]["NamaCustomer"], "").ToString();

                        newJournalHeaderRowID = Guid.NewGuid();
                        newRecID = Tools.CreateFingerPrint();
                        RowIDPLS = (Guid)Tools.isNull(dtPenjualanHist.Rows[0]["PenerimaanANGRowID"], Guid.Empty);
                        TglPLS = Convert.ToDateTime(Tools.isNull(dtPenjualanHist.Rows[0]["TanggalPLS"], DateTime.MaxValue).ToString());
                        NoBuktiPJL = Tools.isNull(dtPenjualanHist.Rows[0]["NoBuktiPJL"], "").ToString();
                        if (TglPLS == DateTime.MaxValue)
                        {
                            sresult = "5. Data Tanggal Pembayaran PLS tidak bisa didapatkan!";
                            return sresult;
                        }

                        // ini yg sudah masuk ke jurnal
                        // Piutang Bunga - 110341130300
                        NoPerkiraanDebet = Tools.isNull(dtPenjualanHist.Rows[0]["NoPerkiraanPBNG"], "").ToString();
                        DebetTerjurnal = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["DebetPBNG"], 0).ToString());
                        // Pendapatan Ditangguhkan - 210900130000
                        NoPerkiraanKredit = Tools.isNull(dtPenjualanHist.Rows[0]["NoPerkiraanPDTDTGN"], "").ToString();
                        KreditTerjurnal = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["KreditPDTDTGN"], 0).ToString());

                        PiutangBunga = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["PiutangBunga"], 0).ToString());

                        // 1. hitung hasil piutang bunga baru, (dari yg terinput dikurangin sama bunga yg terbayar)
                        // dan langsung masukkan
                        TotalBayarBunga = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["TotalBayarBunga"], 0).ToString());

                        // debet maupun kredit sama aja
                        PiutangBungaBaru = PiutangBunga - TotalBayarBunga;

                        Uraian = "Jurnal Potongan Bunga PLS - " + NoPol + " | " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;
                        UnitUsaha = Tools.isNull(dtPenjualanHist.Rows[0]["UnitUsaha"], "").ToString();

                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglPLS;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBuktiPJL;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PLS";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TglPLS, NoBuktiPJL, Uraian, "PLS", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Potongan PLS 'sementara' PLS
                        }

                        // Pendapatan Ditangguhkan -- Debet
                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "POTPLS " + NoTrans + " - PDPT DTGHK - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = PiutangBungaBaru;
                            sumD = sumD + PiutangBungaBaru;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PiutangBungaBaru;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, PiutangBungaBaru, 0, "D", MataUangRowID, PiutangBungaBaru);
                        }

                        // Piutang Bunga -- Kredit
                        if (GlobalVar.CabangID.Contains("06")) // pasti FLT
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID);
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "POTPLS " + NoTrans + " - PIUTANG BNG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = PiutangBungaBaru;
                            sumK = sumK + PiutangBungaBaru;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PiutangBungaBaru;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, PiutangBungaBaru, "K", MataUangRowID, PiutangBungaBaru);
                        }

                        if (isSimulate == true)
                        {
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                        }
                        else
                        {
                            PenerimaanPLSUpdateJournal(ref db, ref counterdb, RowIDPLS, newJournalHeaderRowID);

                            //db.BeginTransaction();
                            //dbf.BeginTransaction();
                            //int looper = 0;
                            //for (looper = 0; looper < counterdb; looper++)
                            //{
                            //    db.Commands[looper].ExecuteNonQuery();
                            //}
                            //for (looper = 0; looper < counterdbf; looper++)
                            //{
                            //    dbf.Commands[looper].ExecuteNonQuery();
                            //}
                            //db.CommitTransaction();
                            //dbf.CommitTransaction();
                        }
                    }

                    if(dtPenerimaanUMLeasing.Rows.Count == 1)
                    {
                        MataUangRowID = (Guid)Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["MataUangRowID"], Guid.Empty);
                        if (MataUangRowID == Guid.Empty)
                        {
                            sresult = "3. Data Mata Uang RowID tidak bisa didapatkan!";
                            return sresult;
                        }
                        NoTrans = Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["NoTransUM"], "").ToString();
                        if (NoTrans == "")
                        {
                            sresult = "4. Data No Trans UM tidak bisa didapatkan!";
                            return sresult;
                        }
                        NoPol = Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["NoTransPJL"], "").ToString();
                        NamaCustomer = Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["NamaCustomer"], "").ToString();

                        newJournalHeaderRowID = Guid.NewGuid();
                        newRecID = Tools.CreateFingerPrint();
                        RowIDPLS = (Guid)Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["RowID"], Guid.Empty);
                        TglPLS = Convert.ToDateTime(Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["TanggalPLS"], DateTime.MaxValue).ToString());
                        NoBuktiPJL = Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["NoBuktiPJL"], "").ToString();
                        if (TglPLS == DateTime.MaxValue)
                        {
                            sresult = "5. Data Tanggal Pembayaran PLS tidak bisa didapatkan!";
                            return sresult;
                        }

                        // ini yg sudah masuk ke jurnal
                        NoPerkiraanDebet = GetPerkiraanKoneksiDetail("PIUTLSGBI", "SHW", GlobalVar.CabangID);
                        DebetTerjurnal = Convert.ToDouble(Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["Nominal"], 0).ToString());

                        if (dtPenerimaanUMLeasing.Rows[0]["KodeTrans"].ToString() == "LSG")
                        {
                            NoPerkiraanKredit = GetPerkiraanKoneksiDetail("PIUTPKLSG", "SHW", GlobalVar.CabangID);
                        }
                        else
                        {
                            NoPerkiraanKredit = GetPerkiraanKoneksiDetail("PIUTLSG", "SHW", GlobalVar.CabangID);
                        }

                        KreditTerjurnal = Convert.ToDouble(Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["Nominal"], 0).ToString());

                        //NoPol adalah NoTrans Penjualan
                        Uraian = "Jurnal LSG Piutang Belum Iden PLS - " + NoPol + " | " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;
                        UnitUsaha = Tools.isNull(dtPenerimaanUMLeasing.Rows[0]["UnitUsaha"], "").ToString();

                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglPLS;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBuktiPJL;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PLS";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TglPLS, NoBuktiPJL, Uraian, "PLS", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Potongan PLS 'sementara' PLS
                        }

                        // Debet
                        //tempUraian = "POTPLS " + NoTrans + " - PIUTANG BELUM IDEN - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;
                        tempUraian = dtPenerimaanUMLeasing.Rows[0]["Uraian"].ToString();
                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraanDebet;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraanDebet);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = DebetTerjurnal;
                            sumD = sumD + DebetTerjurnal;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = DebetTerjurnal;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, NoPerkiraanDebet,
                                                       tempUraian, DebetTerjurnal, 0, "D", MataUangRowID, DebetTerjurnal);
                        }

                        //tempUraian = "POTPLS " + NoTrans + " - PIUTANG LSG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;
                        tempUraian = dtPenerimaanUMLeasing.Rows[0]["Uraian"].ToString();
                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraanKredit;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraanKredit);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = KreditTerjurnal;
                            sumK = sumK + KreditTerjurnal;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = KreditTerjurnal;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, NoPerkiraanKredit,
                                                       tempUraian, 0, KreditTerjurnal, "K", MataUangRowID, KreditTerjurnal);
                        }

                        if (isSimulate == true)
                        {
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                        }
                        else
                        {
                            PenerimaanUMPLSUpdateJournal(ref db, ref counterdb, RowIDPLS, newJournalHeaderRowID);
                        }
                    }


                    if (isSimulate != true)
                    {
                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error : " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error : " + ex.Message;
                    }
                }
            }

            return sresult;
        }


        public static string JournalIdentifikasi(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid SrcRowID, String SrcID, String KodeTrans, ref int error)
        {
            // hanya khusus kalau FLT dan ada UMT sehingga perlu kalkulasi ulang
            #region dtIdentifikasi Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PTIRowID;
            Guid PerusahaanRowID;
            Guid MataUangRowID;

            DateTime TglIden;
            String NoBukti;
            String NoTrans;
            Double NominalIden;
            Double NominalPokok;
            Double NominalBunga;
            String UraianIden;
            String Note;

            String NoPol;
            String NamaCustomer;
            String MataUangID;

            String UnitUsaha;

            #endregion

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;
            Double sumD = 0, sumK = 0;
            String newRecID;
            Guid newJournalHeaderRowID;
            String Uraian;

            String tempUraian;
            String tempNoPerkiraan;

            // ambil data yg mau diproses
            DataTable dtIdentifikasi = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_PenerimaanTitipanIden_LIST_Journal"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@SrcRowID", SqlDbType.UniqueIdentifier, SrcRowID));
                dbsub.Commands[0].Parameters.Add(new Parameter("@SrcID", SqlDbType.VarChar, SrcID));
                dbsub.Commands[0].Parameters.Add(new Parameter("@KodeTrans", SqlDbType.VarChar, KodeTrans));
                dtIdentifikasi = dbsub.Commands[0].ExecuteDataTable();
            }
            string sresult = "Ok";
            if (dtIdentifikasi.Rows.Count < 1)
            {
                sresult = "1. Data identifikasi penerimaan titipan tidak dapat diambil!";
                return sresult;
            }

            try
            {
                // ambil datanya cukup baris pertama, karena yg berulang itu hanya data titipan idennya, nanti
                // data titipan iden diupdatenya itu nge batch berdasarkan rowid transaksinya,
                // karena yg penting di jurnal itu sebenernya data transaksinya yg cuma 1

                // masukkan data ke variabel
                PTIRowID = new Guid(Tools.isNull(dtIdentifikasi.Rows[0]["PTIRowID"], Guid.Empty).ToString());
                TglIden = Convert.ToDateTime(Tools.isNull(dtIdentifikasi.Rows[0]["TglIden"], DateTime.MaxValue).ToString());
                NoBukti = Tools.isNull(dtIdentifikasi.Rows[0]["NoBuktiPJL"], string.Empty).ToString();
                NoTrans = Tools.isNull(dtIdentifikasi.Rows[0]["NoTransPJL"], string.Empty).ToString();
                NominalPokok = Convert.ToDouble(Tools.isNull(dtIdentifikasi.Rows[0]["NominalPokok"], 0).ToString());
                NominalBunga = Convert.ToDouble(Tools.isNull(dtIdentifikasi.Rows[0]["NominalBunga"], 0).ToString());
                UraianIden = Tools.isNull(dtIdentifikasi.Rows[0]["Uraian"], string.Empty).ToString();
                MataUangRowID = new Guid(Tools.isNull(dtIdentifikasi.Rows[0]["MataUangRowID"], Guid.Empty).ToString());
                NoPol = Tools.isNull(dtIdentifikasi.Rows[0]["Nopol"], string.Empty).ToString();
                NamaCustomer = Tools.isNull(dtIdentifikasi.Rows[0]["NamaCustomer"], string.Empty).ToString();
                MataUangID = Tools.isNull(dtIdentifikasi.Rows[0]["MataUangID"], string.Empty).ToString();
                Note = Tools.isNull(dtIdentifikasi.Rows[0]["Note"], string.Empty).ToString();
                UnitUsaha = Tools.isNull(dtIdentifikasi.Rows[0]["UnitUsaha"], string.Empty).ToString();

                if (TglIden == DateTime.MaxValue)
                {
                    sresult = "2. Data Tanggal Identifikasi tidak bisa didapatkan!";
                    return sresult;
                }

                newJournalHeaderRowID = Guid.NewGuid();
                newRecID = Tools.CreateFingerPrint();

                if (sresult == "Ok")
                {
                    // cek SrcID sama KodeTrans karena bisa ADM, UM, ANG sama DND
                    if (SrcID == "ADM") // && KodeTrans == "ADM"
                    {
                        Uraian = "Jurnal Identifikasi Bayar ADM - " + NoPol + " | " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglIden;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "IDN";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TglIden, NoBukti, Uraian, "IDN", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Identifikasi 'sementara' IDN
                        }
                        // kalau ADM mestinya itu hanya UM Pelanggan (210500130100/DEBET) sama Pendapatan Denda Adm & Salesman(710401130100/KREDIT)

                        // Pendapatan Denda Adm & Salesman -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDNDADM", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - PDPT ADM - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = NominalPokok;
                            sumK = sumK + NominalPokok;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalPokok;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, NominalPokok, "K", MataUangRowID, NominalPokok);
                        }

                        // UM Pelanggan -- Debet
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPLGN", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - UM Cust. - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = NominalPokok;
                            sumD = sumD + NominalPokok;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalPokok;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, NominalPokok, 0, "D", MataUangRowID, NominalPokok);
                        }
                    }
                    else if (SrcID == "ANG-FLT")
                    {
                        Double tempUMPelanggan = NominalPokok + NominalBunga;

                        Uraian = "Jurnal Identifikasi Bayar ANG-FLT - " + NoPol + " | " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglIden;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "IDN";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TglIden, NoBukti, Uraian, "IDN", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Identifikasi 'sementara' IDN
                        }
                        // kalau ANG-FLT mestinya itu
                        // UM Pelanggan (210500130100/DEBET), Piutang Usaha Tetap(110341130102/KREDIT),
                        // Pendapatan Bunga Kredit(710100130210/KREDIT)
                        // dan ACR Pendapatan Ditangguhkan(210900130000/DEBET) - Piutang Bunga(110341130300/KREDIT)

                        // Piutang Usaha Tetap -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - PIUTANG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = NominalPokok;
                            sumK = sumK + NominalPokok;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalPokok;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, NominalPokok, "K", MataUangRowID, NominalPokok);
                        }

                        // Pendapatan Bunga Kredit -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTBNGK", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - PDPT BNG K - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = NominalBunga;
                            sumK = sumK + NominalBunga;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalBunga;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, NominalBunga, "K", MataUangRowID, NominalBunga);
                        }

                        // UM Pelanggan -- Debet
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPLGN", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - UM Cust. - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = tempUMPelanggan;
                            sumD = sumD + tempUMPelanggan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = tempUMPelanggan;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, tempUMPelanggan, 0, "D", MataUangRowID, tempUMPelanggan);
                        }
                        // -- BAGIAN ACR nya --

                        // Piutang Bunga -- Kredit

                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID); // PBNGTTP
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "Iden " + NoTrans + " - PIUTANG BNG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = NominalBunga;
                            sumK = sumK + NominalBunga;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalBunga;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, NominalBunga, "K", MataUangRowID, NominalBunga);
                        }

                        // Pendapatan Ditangguhkan -- Debet
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - PDPT DTGHK - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = NominalBunga;
                            sumD = sumD + NominalBunga;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalBunga;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, NominalBunga, 0, "D", MataUangRowID, NominalBunga);
                        }
                    }
                    else if (SrcID == "ANG-APD")
                    {
                        Double tempUMPelanggan = NominalPokok + NominalBunga;

                        Uraian = "Jurnal Identifikasi Bayar ANG-APD - " + NoPol + " | " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglIden;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "IDN";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TglIden, NoBukti, Uraian, "IDN", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Identifikasi 'sementara' IDN
                        }
                        // kalau ANG-FLT mestinya itu
                        // UM Pelanggan (210500130100/DEBET), Piutang Usaha Tetap(110341130102/KREDIT),
                        // Pendapatan Bunga Kredit(710100130210/KREDIT)

                        // Piutang Usaha Tetap -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - PIUTANG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = NominalPokok;
                            sumK = sumK + NominalPokok;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalPokok;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, NominalPokok, "K", MataUangRowID, NominalPokok);
                        }
                        // Pendapatan Bunga Kredit -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTBNGK", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - PDPT BNG K - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = NominalBunga;
                            sumK = sumK + NominalBunga;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalBunga;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, NominalBunga, "K", MataUangRowID, NominalBunga);
                        }

                        // UM Pelanggan -- Debet
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPLGN", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - UM Cust. - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = tempUMPelanggan;
                            sumD = sumD + tempUMPelanggan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = tempUMPelanggan;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, tempUMPelanggan, 0, "D", MataUangRowID, tempUMPelanggan);
                        }
                    }
                    else if (SrcID == "DND") // && KodeTrans == "DND"
                    {
                        Uraian = "Jurnal Identifikasi Bayar Denda - " + NoPol + " | " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglIden;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "IDN";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TglIden, NoBukti, Uraian, "IDN", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Identifikasi 'sementara' IDN
                        }
                        // kalau DND mestinya itu hanya UM Pelanggan (210500130100/DEBET) sama Pendapatan Denda(710401130100/KREDIT)

                        // Pendapatan Denda -- Kredit
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDND", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - PDPT DND - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = NominalPokok;
                            sumK = sumK + NominalPokok;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalPokok;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, NominalPokok, "K", MataUangRowID, NominalPokok);
                        }

                        // UM Pelanggan -- Debet
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPLGN", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - UM Cust. - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = NominalPokok;
                            sumD = sumD + NominalPokok;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalPokok;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, NominalPokok, 0, "D", MataUangRowID, NominalPokok);
                        }
                    }
                    else if (SrcID == "UM")
                    {
                        Uraian = "Jurnal Identifikasi Bayar UM - " + NoPol + " | " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglIden;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBukti;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "IDN";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TglIden, NoBukti, Uraian, "IDN", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Identifikasi 'sementara' IDN
                        }
                        // kalau DND mestinya itu hanya UM Pelanggan (210500130100/DEBET) sama
                        // UM Penjualan(210500130200/KREDIT) ATAU Piutang Usaha Tetap(110341130102/KREDIT)

                        if (KodeTrans == "UMT")
                        {
                            // kalo UMT cek ke Note nya, hasil cek di DB nya
                            if (Note == "PUTTP") // berarti ke piutang usaha tetap
                            {
                                // Piutang Usaha Tetap -- Kredit
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);
                                tempUraian = "Iden " + NoTrans + " - PIUTANG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            }
                            else // selain itu ke um penjualan
                            {
                                // Uang Muka Penjualan -- Kredit
                                tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                                tempUraian = "Iden " + NoTrans + " - UM PJL - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                            }
                        }
                        else
                        {
                            // kalo bukan UMT anggap aja UM Penjualan terus
                            // Uang Muka Penjualan  -- Kredit
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPJLN", "SHW", GlobalVar.CabangID);
                            tempUraian = "Iden " + NoTrans + " - UM PJL - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;
                        }

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = NominalPokok;
                            sumK = sumK + NominalPokok;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalPokok;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, NominalPokok, "K", MataUangRowID, NominalPokok);
                        }

                        // UM Pelanggan -- Debet
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("UMPLGN", "SHW", GlobalVar.CabangID);
                        tempUraian = "Iden " + NoTrans + " - UM Cust. - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBukti;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = NominalPokok;
                            sumD = sumD + NominalPokok;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = NominalPokok;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, NominalPokok, 0, "D", MataUangRowID, NominalPokok);
                        }
                    }

                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        PenerimaanTitipanIdenUpdateJournal(ref db, ref counterdb, SrcRowID, newJournalHeaderRowID, SrcID);
                    }
                }

                if (isSimulate == true)
                {
                }
                else
                {
                    db.BeginTransaction();
                    dbf.BeginTransaction();
                    int looper = 0;
                    for (looper = 0; looper < counterdb; looper++)
                    {
                        db.Commands[looper].ExecuteNonQuery();
                    }
                    for (looper = 0; looper < counterdbf; looper++)
                    {
                        dbf.Commands[looper].ExecuteNonQuery();
                    }
                    db.CommitTransaction();
                    dbf.CommitTransaction();
                }
            }
            catch (Exception ex)
            {
                error++;

                if (isSimulate == true)
                {
                    MessageBox.Show("Pesan Error : " + ex.Message);
                }
                else
                {
                    db.RollbackTransaction();
                    dbf.RollbackTransaction();
                    sresult = "Pesan Error : " + ex.Message;
                }
            }

            return sresult;
        }

        // proses journal biaya estimasi
        public static string JournalBiayaEstimasiTRK(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid EsByTarikRowID)
        {
            #region 
            // variabel2 untuk simpan data pembelian sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            Guid RekeningRowID;
            String MataUangID;
            String NoFaktur;
            String NoTrans;
            String NoPol;
            String Pembelian;
            DateTime TglTarik2;
            String NoRangka;
            String NoMesin;
            Double EsBiayaTRK;
            //Double UangMuka;
            Double Nominal;
            int BentukPembayaran;
            String CabangID;
            String Uraian;
            String Jenis;
            String Kondisi;
            String FlagSource = "ORI";

            #endregion
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Double sumD = 0, sumK = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            String tempNoPerkiraan = "";
            String tempUraian = "";

            // ambil data estimasibiayaTRK dulu
            DataTable dtEstimasiBiayaTRK = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("[usp_EstimasiBiayaTarik_LIST_Journal]"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@EsByTarikRowID", SqlDbType.UniqueIdentifier, EsByTarikRowID));
                dtEstimasiBiayaTRK = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtEstimasiBiayaTRK.Rows.Count < 1) ? "1. Data estimasi biaya tarikan tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    // Cek dulu Jenis Pembeliannya sebelum diproses
                    Kondisi = Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["Kondisi"], String.Empty).ToString();
                    FlagSource = Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["FlagSource"], String.Empty).ToString();
                    Pembelian = Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["Pembelian"], String.Empty).ToString(); // hanya bisa tunai/kredit
                    NoFaktur = Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["NoFaktur"], String.Empty).ToString();
                    NoTrans = Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["NoTrans"], String.Empty).ToString();
                    EsBiayaTRK = Convert.ToDouble(Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["EsBiayaTRK"].ToString(), 0));
                    //UangMuka = Convert.ToDouble(Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["UangMuka"].ToString(), 0));
                    TglTarik2 = DateTime.Parse(Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["TglESBy"].ToString(), DateTime.MinValue).ToString());
                    MataUangRowID = (Guid)Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["MataUangRowID"], Guid.Empty);
                    NoPol = Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["NoPol"], String.Empty).ToString();
                    NoRangka = Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["NoRangka"], String.Empty).ToString();
                    NoMesin = Tools.isNull(dtEstimasiBiayaTRK.Rows[0]["NoMesin"], String.Empty).ToString();
                    Uraian = "Jurnal Estimasi Biaya Tarikan  - " + NoFaktur + " - " + NoPol + "|" + NoRangka;

                    // berarti ada baris data ditemukan, mulai masukkin ke variabel2

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglTarik2;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoFaktur;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                    }
                    else
                    {
                        Journal.AddHeader_ver_2(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID,
                                                newRecID, TglTarik2, NoFaktur, Uraian, "TRK", GlobalVar.Gudang, false); // SRC motor tarikan= PBT
                    }

                    //kode pembelian untuk motor tarikan harusnya TRK, datanya diambil dari table pembelianTarikan
                    if (Pembelian.ToUpper().Trim() == "TRK")
                    {
                        Double nPersediaanMotorTarikan = EsBiayaTRK;
                        Double nHutangLainnya = EsBiayaTRK;

                        // Persediaan Barang -- Debet

                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGTR", "SHW", GlobalVar.CabangID);
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGTR", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "PBL/K/PSD - Estimasi Biaya Tarik - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPersediaanMotorTarikan;
                            sumD = sumD + nPersediaanMotorTarikan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanMotorTarikan;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            tempUraian, nPersediaanMotorTarikan, 0, "D", MataUangRowID, nPersediaanMotorTarikan);
                        }

                        // Hutang Usaha/Hutang Pembelian -- Kredit
                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HUTLL", "SHW", GlobalVar.CabangID);//sementara make PIUTLSGBI = piut leasing
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("HUTLL", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "PBL/K/HUT - Hutang Estimasi Biaya Tarik - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nHutangLainnya;
                            sumK = sumK + nHutangLainnya;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nHutangLainnya;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            tempUraian, 0, nHutangLainnya, "K", MataUangRowID, nHutangLainnya);
                        }

                    }
                    // lakukan update JournalRowID ke tabel PembayaranPemb

                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        JournalRowID_UPDATE(ref db, ref counterdb, "[usp_EstimasiBiayaTRKUPDATE_Journal]", EsByTarikRowID, newJournalHeaderRowID);

                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error: " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error: " + ex.Message;
                    }
                }
            }

            return sresult;
        }

        //proses journal motor tarikan
        public static string JournalMotorTarikan(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid TarikRowID)
        {
            #region dtPembelian Variables
            // variabel2 untuk simpan data pembelian sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            Guid RekeningRowID;
            String MataUangID;
            String NoFaktur;
            String NoTrans;
            String NoPol;
            String Pembelian;
            DateTime TglTarik;
            String NoRangka;
            String NoMesin;
            Double HargaJadi;
            Double UangMuka;
            Double Nominal;
            int BentukPembayaran;
            String CabangID;
            String Uraian;
            String Jenis;
            String Kondisi;
            String FlagSource = "ORI";

            #endregion
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Double sumD = 0, sumK = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();

            String tempNoPerkiraan = "";
            String tempUraian = "";

            // ambil data pembeliannya dulu
            DataTable dtMotorTarikan = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("[usp_PembelianTarik_LIST_Journal]"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@PembRowID", SqlDbType.UniqueIdentifier, TarikRowID));
                dtMotorTarikan = dbsub.Commands[0].ExecuteDataTable();
            }

            string sresult = (dtMotorTarikan.Rows.Count < 1) ? "1. Data motor tarikan tidak dapat diambil" : "Ok";

            if (sresult == "Ok")
            {
                try
                {
                    // Cek dulu Jenis Pembeliannya sebelum diproses
                    Kondisi = Tools.isNull(dtMotorTarikan.Rows[0]["Kondisi"], String.Empty).ToString();
                    FlagSource = Tools.isNull(dtMotorTarikan.Rows[0]["FlagSource"], String.Empty).ToString();
                    Pembelian = Tools.isNull(dtMotorTarikan.Rows[0]["Pembelian"], String.Empty).ToString(); // hanya bisa tunai/kredit
                    NoFaktur = Tools.isNull(dtMotorTarikan.Rows[0]["NoFaktur"], String.Empty).ToString();
                    NoTrans = Tools.isNull(dtMotorTarikan.Rows[0]["NoTrans"], String.Empty).ToString();
                    HargaJadi = Convert.ToDouble(Tools.isNull(dtMotorTarikan.Rows[0]["HargaJadi"].ToString(), 0));
                    UangMuka = Convert.ToDouble(Tools.isNull(dtMotorTarikan.Rows[0]["UangMuka"].ToString(), 0));
                    TglTarik = DateTime.Parse(Tools.isNull(dtMotorTarikan.Rows[0]["TglBeli"].ToString(), DateTime.MinValue).ToString());
                    MataUangRowID = (Guid)Tools.isNull(dtMotorTarikan.Rows[0]["MataUangRowID"], Guid.Empty);
                    NoPol = Tools.isNull(dtMotorTarikan.Rows[0]["NoPol"], String.Empty).ToString();
                    NoRangka = Tools.isNull(dtMotorTarikan.Rows[0]["NoRangka"], String.Empty).ToString();
                    NoMesin = Tools.isNull(dtMotorTarikan.Rows[0]["NoMesin"], String.Empty).ToString();
                    Uraian = "Jurnal Stok Motor Tarikan  - " + Pembelian + " - " + NoPol + "|" + NoRangka;

                    // berarti ada baris data ditemukan, mulai masukkin ke variabel2

                    if (isSimulate == true)
                    {
                        dtHeader.Rows.Add();
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglTarik;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoFaktur;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "TRK";
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                    }
                    else
                    {
                        Journal.AddHeader_ver_2(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID,
                                                newRecID, TglTarik, NoFaktur, Uraian, "PBT", GlobalVar.Gudang, false); // SRC motor tarikan= PBT
                    }

                    //kode pembelian untuk motor tarikan harusnya TRK, datanya diambil dari table pembelianTarikan
                    if (Pembelian.ToUpper().Trim() == "TRK")
                    {
                        Double nPersediaanMotorTarikan = HargaJadi;
                        Double nPiutangBelumIden = HargaJadi;

                        // Persediaan Barang -- Debet

                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGTR", "SHW", GlobalVar.CabangID);                    
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PSDBRGTR", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "PBL/K/PSD - Persediaan Motor Tarik - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPersediaanMotorTarikan;
                            sumD = sumD + nPersediaanMotorTarikan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            sumK = sumK + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPersediaanMotorTarikan;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            tempUraian, nPersediaanMotorTarikan, 0, "D", MataUangRowID, nPersediaanMotorTarikan);
                        }

                        // Hutang Usaha/Hutang Pembelian -- Kredit
                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTLSGBI", "SHW", GlobalVar.CabangID);//sementara make PIUTLSGBI = piut leasing
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PIUTLSGBI", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "PBL/K/PIU - Piutang Belum Iden Tarik - " + NoPol + "|" + NoRangka.Trim() + "-" + NoTrans + "|" + NoFaktur;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            sumD = sumD + 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangBelumIden;
                            sumK = sumK + nPiutangBelumIden;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangBelumIden;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                            tempUraian, 0, nPiutangBelumIden, "K", MataUangRowID, nPiutangBelumIden);
                        }

                    }
                    // lakukan update JournalRowID ke tabel PembayaranPemb

                    if (isSimulate == true)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = sumD;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = sumK;
                    }
                    else
                    {
                        JournalRowID_UPDATE(ref db, ref counterdb, "[usp_PembelianTarikan_UPDATE_Journal]", TarikRowID, newJournalHeaderRowID);

                        db.BeginTransaction();
                        dbf.BeginTransaction();
                        int looper = 0;
                        for (looper = 0; looper < counterdb; looper++)
                        {
                            db.Commands[looper].ExecuteNonQuery();
                        }
                        for (looper = 0; looper < counterdbf; looper++)
                        {
                            dbf.Commands[looper].ExecuteNonQuery();
                        }
                        db.CommitTransaction();
                        dbf.CommitTransaction();
                    }
                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan Error: " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan Error: " + ex.Message;
                    }
                }
            }

            return sresult;
        }


        public static string JournalAdjSubsidi(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid idenRowID)
        {
            #region dtIden Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            String MataUangID;
           // String NoBukti;
            String NoTrans;
            DateTime TglAdj;


            Guid JournalIdenRowID;
            Guid PenjualanRowID;
            String Pembelian;


            String NoPol = "";


            string Nominal = "0";

            string NamaCustomer = "";
            String UnitUsaha;

            #endregion
            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;

            Guid newJournalHeaderRowID = Guid.NewGuid();
            String newRecID = Tools.CreateFingerPrint();
            String sresult = "Ok";
            String tempUraian;
            String tempNoPerkiraan = "";

            String Keterangan = "";

            DataTable dtIdenMPM = new DataTable();

            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_idenLeasing_Adj_Journal_List"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, idenRowID));
                dtIdenMPM = dbsub.Commands[0].ExecuteDataTable();

                if (dtIdenMPM.Rows.Count > 0)
                {
                    JournalIdenRowID = (Guid)new Guid(Tools.isNull(dtIdenMPM.Rows[0]["JournalRowID"], Guid.Empty).ToString());
                    TglAdj = Convert.ToDateTime(Tools.isNull(dtIdenMPM.Rows[0]["Tanggal"], Guid.Empty).ToString());
                    MataUangID = (Tools.isNull(dtIdenMPM.Rows[0]["MataUangID"], Guid.Empty).ToString());
                    NoTrans = Tools.isNull(dtIdenMPM.Rows[0]["NoTrans"], Guid.Empty).ToString();
                    PenjualanRowID = (Guid)new Guid(Tools.isNull(dtIdenMPM.Rows[0]["PenjRowID"], Guid.Empty).ToString());
                    Nominal = Tools.isNull(dtIdenMPM.Rows[0]["Nominal"], Guid.Empty).ToString().ToUpper().Trim();
                    Keterangan = Tools.isNull(dtIdenMPM.Rows[0]["Uraian"], Guid.Empty).ToString().ToUpper().Trim();
                    NamaCustomer=Tools.isNull(dtIdenMPM.Rows[0]["NamaCustomer"], Guid.Empty).ToString().ToUpper().Trim();

                    MataUangRowID=GetMataUangRowID(MataUangID);
                    UnitUsaha = Tools.isNull(dtIdenMPM.Rows[0]["UnitUsaha"], Guid.Empty).ToString();
                }
                else
                {
                    sresult = "Tidak ada data Adjustment ditemukan untuk diproses!";
                    return sresult;
                }
            }


            try
            {
                int i = 0;
                String UraianDet = "", NoPerkiraan = "";
                UraianDet = "Adjustment Subsidi LSG " + "PIUTLSG- " + NoTrans;

                Keterangan = "ADJ DISC SBD : " + NoTrans + "||" + NamaCustomer;

                NoPerkiraan = GetPerkiraanKoneksiDetail("PIUTLSG", "SHW", GlobalVar.CabangID); ;
                Double sumD = 0, sumK = 0;

                if (isSimulate == true)
                {
                    dtHeader.Rows.Add();
                    dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                    dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglAdj;
                    dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoTrans;
                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "IDN";
                    dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Keterangan;
                    dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                    if (double.Parse(Nominal) > 0)
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = Nominal;
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = Nominal;
                    }
                    else
                    {
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = (-1) * Double.Parse(Nominal);
                        dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = (-1) * Double.Parse(Nominal);
                    }
                }
                else
                {
                    Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID,
                                            newRecID, TglAdj, NoTrans, Keterangan, "IDN", GlobalVar.Gudang, false, UnitUsaha);
                }

                tempNoPerkiraan = GetPerkiraanKoneksiDetail("DSCMBR", "SHW", GlobalVar.CabangID);

                //tempUraian = "Hutang Pembelian - "  + NoTransPem + "|" + NoFaktur;
                tempUraian = UraianDet;

                if (double.Parse(Nominal) > 0)
                {
                    if (isSimulate == true)
                    {
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = Keterangan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Nominal;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = MataUangID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                    }
                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                        Keterangan, Double.Parse(Nominal), 0, "D", MataUangRowID, Double.Parse(Nominal));
                    }


                    if (isSimulate == true)
                    {
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = Keterangan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Nominal;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = MataUangID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal;
                    }

                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, NoPerkiraan,
                        Keterangan, 0, Double.Parse(Nominal), "K", MataUangRowID, Double.Parse(Nominal));
                    }
                }
                else
                {
                    double Nominal2 = (-1) * Double.Parse(Nominal);

                    if (isSimulate == true)
                    {
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = NoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(NoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = Keterangan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = Nominal2;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = MataUangID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal2;
                    }

                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, NoPerkiraan,
                        Keterangan, Nominal2, 0, "D", MataUangRowID, Nominal2);
                    }

                    if (isSimulate == true)
                    {
                        dtDetail.Rows.Add();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = Keterangan;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = Nominal2;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = MataUangID;
                        dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = Nominal2;
                    }
                    else
                    {
                        Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                        Keterangan, 0, Nominal2, "K", MataUangRowID, Nominal2);
                    }
                }




                if (isSimulate == true)
                {
                }
                else
                {
                    db.BeginTransaction();
                    dbf.BeginTransaction();
                    int looper = 0;
                    for (looper = 0; looper < counterdb; looper++)
                    {
                        db.Commands[looper].ExecuteNonQuery();
                    }
                    for (looper = 0; looper < counterdbf; looper++)
                    {
                        dbf.Commands[looper].ExecuteNonQuery();
                    }
                    db.CommitTransaction();
                    dbf.CommitTransaction();


                    using (Database dbid = new Database(GlobalVar.DBShowroom))
                    {
                        dbid.Commands.Add(dbid.CreateCommand("usp_idenLeasing_Adj_Journal_insert"));
                        dbid.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, idenRowID));
                        dbid.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, newJournalHeaderRowID));
                        dbid.Commands[0].ExecuteNonQuery();
                    }

                }

            }
            catch (Exception ex)
            {
                if (isSimulate == true)
                {
                    MessageBox.Show("Pesan error : " + ex.Message);
                }
                else
                {
                    db.RollbackTransaction();
                    dbf.RollbackTransaction();
                    sresult = "Pesan error : " + ex.Message;
                }
            }
            return sresult;
        }


        public static string JournalAdjAngsuran(bool isSimulate, ref DataTable dtHeader, ref DataTable dtDetail, Guid idenRowID)
        {
            // hanya khusus kalau FLT dan ada UMT sehingga perlu kalkulasi ulang
            #region dtPenjualan Variables
            // variabel2 untuk simpan data penjualan sementaranya
            Guid PerusahaanRowID;
            Guid MataUangRowID;
            Guid JournalRowID;
            String NoTrans;
            String NamaCustomer;
            String NoPol;

            String NoPerkiraanDebet;
            Double DebetTerjurnal;
            String NoPerkiraanKredit;
            Double KreditTerjurnal;
            Double TotalBayarBunga;
            Double PiutangBunga;
            Double PiutangBungaBaru;

            String NoBuktiPJL;
            Guid RowIDPLS;
            DateTime TglPLS;
            String UnitUsaha;

            #endregion

            Database db = new Database(GlobalVar.DBShowroom);
            Database dbf = new Database(GlobalVar.DBFinanceOto);
            int counterdb = 0;
            int counterdbf = 0;
            Double sumD = 0, sumK = 0;
            String newRecID;
            Guid newJournalHeaderRowID;
            String Uraian;

            String tempUraian;
            String tempNoPerkiraan;

            // ambil data yg mau diproses
            DataTable dtPenjualanHist = new DataTable();
            //DataTable dtPenerimaanUMLeasing = new DataTable();
            DataTable dtPenjualan = new DataTable();
            using (Database dbsub = new Database(GlobalVar.DBShowroom))
            {
                dbsub.Commands.Add(dbsub.CreateCommand("usp_AdjAngsuran_Journal_byID"));
                dbsub.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, idenRowID));
                dtPenjualanHist = dbsub.Commands[0].ExecuteDataTable();
            }


            string sresult = "Ok";
            if (dtPenjualanHist.Rows.Count > 1)
            {
                sresult = "1.X Data historis penjualan terlalu banyak (seharusnya tidak ada lebih dari 1 data Pelunasan)!";
                return sresult;
            }


            if (sresult == "Ok")
            {

                try
                {
                    if (dtPenjualanHist.Rows.Count == 1)
                    {

                        MataUangRowID = (Guid)Tools.isNull(dtPenjualanHist.Rows[0]["MataUangRowID"], Guid.Empty);

                        NoTrans = Tools.isNull(dtPenjualanHist.Rows[0]["NoTransANG"], "").ToString();

                        NoPol = Tools.isNull(dtPenjualanHist.Rows[0]["Nopol"], "").ToString();
                        NamaCustomer = Tools.isNull(dtPenjualanHist.Rows[0]["NamaCustomer"], "").ToString();

                        newJournalHeaderRowID = Guid.NewGuid();
                        newRecID = Tools.CreateFingerPrint();
                        //RowIDPLS = (Guid)Tools.isNull(dtPenjualanHist.Rows[0]["PenerimaanANGRowID"], Guid.Empty);
                        TglPLS = Convert.ToDateTime(Tools.isNull(dtPenjualanHist.Rows[0]["TanggalPLS"], DateTime.MaxValue).ToString());
                        NoBuktiPJL = Tools.isNull(dtPenjualanHist.Rows[0]["NoBuktiPJL"], "").ToString();

                        PiutangBunga = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["PiutangBunga"], 0).ToString());

                        // 1. hitung hasil piutang bunga baru, (dari yg terinput dikurangin sama bunga yg terbayar)
                        // dan langsung masukkan
                        TotalBayarBunga = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["TotalBayarBunga"], 0).ToString());

                        // debet maupun kredit sama aja
                        PiutangBungaBaru = PiutangBunga - TotalBayarBunga;


                        double HargaOff = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["HargaOff"].ToString(), 0));
                        double BiayaADM = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["BiayaADM"].ToString(), 0));

                        double Discount = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["Discount"].ToString(), 0));

                        double UangMuka = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["UangMuka"].ToString(), 0));
                        //Uraian = "Penerimaan Penjualan - Tunai(CTP)" + NoPol + " - " + NamaCustomer;

                        double PiutangPokok = Convert.ToDouble(Tools.isNull(dtPenjualanHist.Rows[0]["NominalPokok"].ToString(), 0));

                        //Double nPenjualan = HargaOff - BiayaADM + Discount; // diganti bukan harga jadi + bbn lagi, tapi jadi HargaOff - BiayaADM // Kredit
                        //Double nUangMukaPenjualan = UangMuka; // Debet
                        //Double nDiscountMBR = Discount; // Debet
                        //Double nPiutangUsahaTetap = (nPenjualan) - nUangMukaPenjualan - nDiscountMBR; // Debet

                        Double nPiutangUsahaTetap = PiutangPokok;
                        Double TotalJurnal = PiutangBungaBaru + nPiutangUsahaTetap;

                        Uraian = "Jurnal Adjusment Angsuran - " + NoPol + " | " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;
                        UnitUsaha = Tools.isNull(dtPenjualanHist.Rows[0]["UnitUsaha"], "").ToString();

                        if (isSimulate == true)
                        {
                            dtHeader.Rows.Add();
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RowID"] = newJournalHeaderRowID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["RecordID"] = newRecID;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Tanggal"] = TglPLS;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["NoReff"] = NoBuktiPJL;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Cbg"] = GlobalVar.Gudang;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Src"] = "PLS";
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Uraian"] = Uraian;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Debet"] = TotalJurnal;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["Kredit"] = TotalJurnal;
                            dtHeader.Rows[dtHeader.Rows.Count - 1]["UnitUsaha"] = UnitUsaha;
                        }
                        else
                        {
                            Journal.AddHeader_ver_3(ref dbf, ref counterdbf, GlobalVar.PerusahaanRowID, newJournalHeaderRowID, newRecID,
                                                    TglPLS, NoBuktiPJL, Uraian, "PLS", GlobalVar.Gudang, false, UnitUsaha); // Src untuk Potongan PLS 'sementara' PLS
                        }

                        // Pendapatan Ditangguhkan -- Debet
                        if (GlobalVar.CabangID.Contains("06"))
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PDTDTGN", "SHW", GlobalVar.CabangID);
                        }
                        tempUraian = "ADJ ANGSURAN " + NoTrans + " - PDPT DTGHK - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = PiutangBungaBaru;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PiutangBungaBaru;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, PiutangBungaBaru, 0, "D", MataUangRowID, PiutangBungaBaru);
                        }

                        // Piutang Bunga -- Kredit
                        if (GlobalVar.CabangID.Contains("06")) // pasti FLT
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNGTTP", "SHW", GlobalVar.CabangID);
                        }
                        else
                        {
                            tempNoPerkiraan = GetPerkiraanKoneksiDetail("PBNG", "SHW", GlobalVar.CabangID);
                        }
                        //tempUraian = "POTADJ " + NoTrans + " - PIUTANG BNG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = PiutangBungaBaru;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = PiutangBungaBaru;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, PiutangBungaBaru, "K", MataUangRowID, PiutangBungaBaru);
                        }

                        //----------------------------------------------------------------------------

                        // Piutang Usaha Tetap -- Debet
                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("CPPRR", "SHW", GlobalVar.CabangID);
                        //tempUraian = "PJL/K/FLT - PIUTANG - " + NoPol + " -> " + NamaCustomer.Trim() + "-" + NoTrans + "|" + NoBuktiPJL;

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "D";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = nPiutangUsahaTetap;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, nPiutangUsahaTetap, 0, "D", MataUangRowID, nPiutangUsahaTetap);
                        }

                        //--------------------------------------------------------------------

                        tempNoPerkiraan = GetPerkiraanKoneksiDetail("PUTTP", "SHW", GlobalVar.CabangID);

                        if (isSimulate == true)
                        {
                            dtDetail.Rows.Add();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RowID"] = Guid.NewGuid();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HeaderID"] = newJournalHeaderRowID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["RecordID"] = Tools.CreateFingerPrint();
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["HRecordID"] = newRecID;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NoPerkiraan"] = tempNoPerkiraan;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NamaPerkiraan"] = GetNamaPerkiraan(tempNoPerkiraan);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Uraian"] = tempUraian;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["DK"] = "K";
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Debet"] = 0;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["Kredit"] = nPiutangUsahaTetap;
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["MataUang"] = GetMataUangID(MataUangRowID);
                            dtDetail.Rows[dtDetail.Rows.Count - 1]["NilaiOri"] = nPiutangUsahaTetap;
                        }
                        else
                        {
                            Journal.AddDetail_ver_2(ref dbf, ref counterdbf, Guid.NewGuid(), newJournalHeaderRowID, Tools.CreateFingerPrint(), newRecID, tempNoPerkiraan,
                                                       tempUraian, 0, nPiutangUsahaTetap, "K", MataUangRowID, nPiutangUsahaTetap);
                        }

                        if (isSimulate == true)
                        {
                        }
                        else
                        {
                            db.BeginTransaction();
                            dbf.BeginTransaction();
                            int looper = 0;
                            for (looper = 0; looper < counterdb; looper++)
                            {
                                db.Commands[looper].ExecuteNonQuery();
                            }
                            for (looper = 0; looper < counterdbf; looper++)
                            {
                                dbf.Commands[looper].ExecuteNonQuery();
                            }
                            db.CommitTransaction();
                            dbf.CommitTransaction();


                            using (Database dbid = new Database(GlobalVar.DBShowroom))
                            {
                                dbid.Commands.Add(dbid.CreateCommand("usp_AdjAngsuran_Journal_Update"));
                                dbid.Commands[0].Parameters.Add(new Parameter("@RowID", SqlDbType.UniqueIdentifier, idenRowID));
                                dbid.Commands[0].Parameters.Add(new Parameter("@JournalRowID", SqlDbType.UniqueIdentifier, newJournalHeaderRowID));
                                dbid.Commands[0].ExecuteNonQuery();
                            }

                        }

                    }


                }
                catch (Exception ex)
                {
                    if (isSimulate == true)
                    {
                        MessageBox.Show("Pesan error : " + ex.Message);
                    }
                    else
                    {
                        db.RollbackTransaction();
                        dbf.RollbackTransaction();
                        sresult = "Pesan error : " + ex.Message;
                    }
                }
            }
            return sresult;
        }


    }
}
