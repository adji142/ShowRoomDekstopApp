//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Showroom.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsGL")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsGL : global::System.Data.DataSet {
        
        private DataDataTable tableData;
        
        private Data2DataTable tableData2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsGL() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsGL(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["Data2"] != null)) {
                    base.Tables.Add(new Data2DataTable(ds.Tables["Data2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataDataTable Data {
            get {
                return this.tableData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data2DataTable Data2 {
            get {
                return this.tableData2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsGL cln = ((dsGL)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Data"] != null)) {
                    base.Tables.Add(new DataDataTable(ds.Tables["Data"]));
                }
                if ((ds.Tables["Data2"] != null)) {
                    base.Tables.Add(new Data2DataTable(ds.Tables["Data2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableData = ((DataDataTable)(base.Tables["Data"]));
            if ((initTable == true)) {
                if ((this.tableData != null)) {
                    this.tableData.InitVars();
                }
            }
            this.tableData2 = ((Data2DataTable)(base.Tables["Data2"]));
            if ((initTable == true)) {
                if ((this.tableData2 != null)) {
                    this.tableData2.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsGL";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsGL.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableData = new DataDataTable();
            base.Tables.Add(this.tableData);
            this.tableData2 = new Data2DataTable();
            base.Tables.Add(this.tableData2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeData2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsGL ds = new dsGL();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DataRowChangeEventHandler(object sender, DataRowChangeEvent e);
        
        public delegate void Data2RowChangeEventHandler(object sender, Data2RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataDataTable : global::System.Data.TypedTableBase<DataRow> {
            
            private global::System.Data.DataColumn columnNoUrut;
            
            private global::System.Data.DataColumn columnTipe;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            private global::System.Data.DataColumn columnCatatan;
            
            private global::System.Data.DataColumn columnFormula;
            
            private global::System.Data.DataColumn columnTUnderline;
            
            private global::System.Data.DataColumn columnDUnderline;
            
            private global::System.Data.DataColumn columnBlnBerjalan;
            
            private global::System.Data.DataColumn columnBlnSebelum;
            
            private global::System.Data.DataColumn columnNTNominal;
            
            private global::System.Data.DataColumn columnNTPct;
            
            private global::System.Data.DataColumn columnBold;
            
            private global::System.Data.DataColumn columnLMinus;
            
            private global::System.Data.DataColumn columnRef;
            
            private global::System.Data.DataColumn columnNoPerkiraan;
            
            private global::System.Data.DataColumn columnNamaPerkiraan;
            
            private global::System.Data.DataColumn columnSaldoAwalDebet;
            
            private global::System.Data.DataColumn columnSaldoAwalKredit;
            
            private global::System.Data.DataColumn columnMutasiDebet;
            
            private global::System.Data.DataColumn columnMutasiKredit;
            
            private global::System.Data.DataColumn columnSaldoAkhirDebet;
            
            private global::System.Data.DataColumn columnSaldoAkhirKredit;
            
            private global::System.Data.DataColumn column0;
            
            private global::System.Data.DataColumn column1;
            
            private global::System.Data.DataColumn column2;
            
            private global::System.Data.DataColumn column3;
            
            private global::System.Data.DataColumn column4;
            
            private global::System.Data.DataColumn column5;
            
            private global::System.Data.DataColumn column6;
            
            private global::System.Data.DataColumn column7;
            
            private global::System.Data.DataColumn column8;
            
            private global::System.Data.DataColumn column9;
            
            private global::System.Data.DataColumn column10;
            
            private global::System.Data.DataColumn column11;
            
            private global::System.Data.DataColumn column12;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataDataTable() {
                this.TableName = "Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoUrutColumn {
                get {
                    return this.columnNoUrut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipeColumn {
                get {
                    return this.columnTipe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CatatanColumn {
                get {
                    return this.columnCatatan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormulaColumn {
                get {
                    return this.columnFormula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUnderlineColumn {
                get {
                    return this.columnTUnderline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUnderlineColumn {
                get {
                    return this.columnDUnderline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlnBerjalanColumn {
                get {
                    return this.columnBlnBerjalan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlnSebelumColumn {
                get {
                    return this.columnBlnSebelum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTNominalColumn {
                get {
                    return this.columnNTNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NTPctColumn {
                get {
                    return this.columnNTPct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoldColumn {
                get {
                    return this.columnBold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LMinusColumn {
                get {
                    return this.columnLMinus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefColumn {
                get {
                    return this.columnRef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoPerkiraanColumn {
                get {
                    return this.columnNoPerkiraan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaPerkiraanColumn {
                get {
                    return this.columnNamaPerkiraan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoAwalDebetColumn {
                get {
                    return this.columnSaldoAwalDebet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoAwalKreditColumn {
                get {
                    return this.columnSaldoAwalKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MutasiDebetColumn {
                get {
                    return this.columnMutasiDebet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MutasiKreditColumn {
                get {
                    return this.columnMutasiKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoAkhirDebetColumn {
                get {
                    return this.columnSaldoAkhirDebet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoAkhirKreditColumn {
                get {
                    return this.columnSaldoAkhirKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _0Column {
                get {
                    return this.column0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _1Column {
                get {
                    return this.column1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _2Column {
                get {
                    return this.column2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _3Column {
                get {
                    return this.column3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _4Column {
                get {
                    return this.column4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _5Column {
                get {
                    return this.column5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _6Column {
                get {
                    return this.column6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _7Column {
                get {
                    return this.column7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _8Column {
                get {
                    return this.column8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _9Column {
                get {
                    return this.column9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _10Column {
                get {
                    return this.column10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _11Column {
                get {
                    return this.column11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _12Column {
                get {
                    return this.column12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow this[int index] {
                get {
                    return ((DataRow)(this.Rows[index]));
                }
            }
            
            public event DataRowChangeEventHandler DataRowChanging;
            
            public event DataRowChangeEventHandler DataRowChanged;
            
            public event DataRowChangeEventHandler DataRowDeleting;
            
            public event DataRowChangeEventHandler DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataRow(DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow AddDataRow(
                        string NoUrut, 
                        string Tipe, 
                        string Keterangan, 
                        string Catatan, 
                        string Formula, 
                        bool TUnderline, 
                        bool DUnderline, 
                        double BlnBerjalan, 
                        double BlnSebelum, 
                        double NTNominal, 
                        double NTPct, 
                        string Bold, 
                        int LMinus, 
                        string Ref, 
                        string NoPerkiraan, 
                        string NamaPerkiraan, 
                        string SaldoAwalDebet, 
                        string SaldoAwalKredit, 
                        string MutasiDebet, 
                        string MutasiKredit, 
                        string SaldoAkhirDebet, 
                        string SaldoAkhirKredit, 
                        string _0, 
                        string _1, 
                        string _2, 
                        string _3, 
                        string _4, 
                        string _5, 
                        string _6, 
                        string _7, 
                        string _8, 
                        string _9, 
                        string _10, 
                        string _11, 
                        string _12, 
                        string Tanggal, 
                        string Amount) {
                DataRow rowDataRow = ((DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NoUrut,
                        Tipe,
                        Keterangan,
                        Catatan,
                        Formula,
                        TUnderline,
                        DUnderline,
                        BlnBerjalan,
                        BlnSebelum,
                        NTNominal,
                        NTPct,
                        Bold,
                        LMinus,
                        Ref,
                        NoPerkiraan,
                        NamaPerkiraan,
                        SaldoAwalDebet,
                        SaldoAwalKredit,
                        MutasiDebet,
                        MutasiKredit,
                        SaldoAkhirDebet,
                        SaldoAkhirKredit,
                        _0,
                        _1,
                        _2,
                        _3,
                        _4,
                        _5,
                        _6,
                        _7,
                        _8,
                        _9,
                        _10,
                        _11,
                        _12,
                        Tanggal,
                        Amount};
                rowDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataRow);
                return rowDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataDataTable cln = ((DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNoUrut = base.Columns["NoUrut"];
                this.columnTipe = base.Columns["Tipe"];
                this.columnKeterangan = base.Columns["Keterangan"];
                this.columnCatatan = base.Columns["Catatan"];
                this.columnFormula = base.Columns["Formula"];
                this.columnTUnderline = base.Columns["TUnderline"];
                this.columnDUnderline = base.Columns["DUnderline"];
                this.columnBlnBerjalan = base.Columns["BlnBerjalan"];
                this.columnBlnSebelum = base.Columns["BlnSebelum"];
                this.columnNTNominal = base.Columns["NTNominal"];
                this.columnNTPct = base.Columns["NTPct"];
                this.columnBold = base.Columns["Bold"];
                this.columnLMinus = base.Columns["LMinus"];
                this.columnRef = base.Columns["Ref"];
                this.columnNoPerkiraan = base.Columns["NoPerkiraan"];
                this.columnNamaPerkiraan = base.Columns["NamaPerkiraan"];
                this.columnSaldoAwalDebet = base.Columns["SaldoAwalDebet"];
                this.columnSaldoAwalKredit = base.Columns["SaldoAwalKredit"];
                this.columnMutasiDebet = base.Columns["MutasiDebet"];
                this.columnMutasiKredit = base.Columns["MutasiKredit"];
                this.columnSaldoAkhirDebet = base.Columns["SaldoAkhirDebet"];
                this.columnSaldoAkhirKredit = base.Columns["SaldoAkhirKredit"];
                this.column0 = base.Columns["0"];
                this.column1 = base.Columns["1"];
                this.column2 = base.Columns["2"];
                this.column3 = base.Columns["3"];
                this.column4 = base.Columns["4"];
                this.column5 = base.Columns["5"];
                this.column6 = base.Columns["6"];
                this.column7 = base.Columns["7"];
                this.column8 = base.Columns["8"];
                this.column9 = base.Columns["9"];
                this.column10 = base.Columns["10"];
                this.column11 = base.Columns["11"];
                this.column12 = base.Columns["12"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNoUrut = new global::System.Data.DataColumn("NoUrut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoUrut);
                this.columnTipe = new global::System.Data.DataColumn("Tipe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipe);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
                this.columnCatatan = new global::System.Data.DataColumn("Catatan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCatatan);
                this.columnFormula = new global::System.Data.DataColumn("Formula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormula);
                this.columnTUnderline = new global::System.Data.DataColumn("TUnderline", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUnderline);
                this.columnDUnderline = new global::System.Data.DataColumn("DUnderline", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUnderline);
                this.columnBlnBerjalan = new global::System.Data.DataColumn("BlnBerjalan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlnBerjalan);
                this.columnBlnSebelum = new global::System.Data.DataColumn("BlnSebelum", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlnSebelum);
                this.columnNTNominal = new global::System.Data.DataColumn("NTNominal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTNominal);
                this.columnNTPct = new global::System.Data.DataColumn("NTPct", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTPct);
                this.columnBold = new global::System.Data.DataColumn("Bold", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBold);
                this.columnLMinus = new global::System.Data.DataColumn("LMinus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLMinus);
                this.columnRef = new global::System.Data.DataColumn("Ref", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRef);
                this.columnNoPerkiraan = new global::System.Data.DataColumn("NoPerkiraan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoPerkiraan);
                this.columnNamaPerkiraan = new global::System.Data.DataColumn("NamaPerkiraan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaPerkiraan);
                this.columnSaldoAwalDebet = new global::System.Data.DataColumn("SaldoAwalDebet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoAwalDebet);
                this.columnSaldoAwalKredit = new global::System.Data.DataColumn("SaldoAwalKredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoAwalKredit);
                this.columnMutasiDebet = new global::System.Data.DataColumn("MutasiDebet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMutasiDebet);
                this.columnMutasiKredit = new global::System.Data.DataColumn("MutasiKredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMutasiKredit);
                this.columnSaldoAkhirDebet = new global::System.Data.DataColumn("SaldoAkhirDebet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoAkhirDebet);
                this.columnSaldoAkhirKredit = new global::System.Data.DataColumn("SaldoAkhirKredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoAkhirKredit);
                this.column0 = new global::System.Data.DataColumn("0", typeof(string), null, global::System.Data.MappingType.Element);
                this.column0.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column0");
                this.column0.ExtendedProperties.Add("Generator_UserColumnName", "0");
                base.Columns.Add(this.column0);
                this.column1 = new global::System.Data.DataColumn("1", typeof(string), null, global::System.Data.MappingType.Element);
                this.column1.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column1");
                this.column1.ExtendedProperties.Add("Generator_UserColumnName", "1");
                base.Columns.Add(this.column1);
                this.column2 = new global::System.Data.DataColumn("2", typeof(string), null, global::System.Data.MappingType.Element);
                this.column2.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column2");
                this.column2.ExtendedProperties.Add("Generator_UserColumnName", "2");
                base.Columns.Add(this.column2);
                this.column3 = new global::System.Data.DataColumn("3", typeof(string), null, global::System.Data.MappingType.Element);
                this.column3.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column3");
                this.column3.ExtendedProperties.Add("Generator_UserColumnName", "3");
                base.Columns.Add(this.column3);
                this.column4 = new global::System.Data.DataColumn("4", typeof(string), null, global::System.Data.MappingType.Element);
                this.column4.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column4");
                this.column4.ExtendedProperties.Add("Generator_UserColumnName", "4");
                base.Columns.Add(this.column4);
                this.column5 = new global::System.Data.DataColumn("5", typeof(string), null, global::System.Data.MappingType.Element);
                this.column5.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column5");
                this.column5.ExtendedProperties.Add("Generator_UserColumnName", "5");
                base.Columns.Add(this.column5);
                this.column6 = new global::System.Data.DataColumn("6", typeof(string), null, global::System.Data.MappingType.Element);
                this.column6.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column6");
                this.column6.ExtendedProperties.Add("Generator_UserColumnName", "6");
                base.Columns.Add(this.column6);
                this.column7 = new global::System.Data.DataColumn("7", typeof(string), null, global::System.Data.MappingType.Element);
                this.column7.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column7");
                this.column7.ExtendedProperties.Add("Generator_UserColumnName", "7");
                base.Columns.Add(this.column7);
                this.column8 = new global::System.Data.DataColumn("8", typeof(string), null, global::System.Data.MappingType.Element);
                this.column8.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column8");
                this.column8.ExtendedProperties.Add("Generator_UserColumnName", "8");
                base.Columns.Add(this.column8);
                this.column9 = new global::System.Data.DataColumn("9", typeof(string), null, global::System.Data.MappingType.Element);
                this.column9.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column9");
                this.column9.ExtendedProperties.Add("Generator_UserColumnName", "9");
                base.Columns.Add(this.column9);
                this.column10 = new global::System.Data.DataColumn("10", typeof(string), null, global::System.Data.MappingType.Element);
                this.column10.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column10");
                this.column10.ExtendedProperties.Add("Generator_UserColumnName", "10");
                base.Columns.Add(this.column10);
                this.column11 = new global::System.Data.DataColumn("11", typeof(string), null, global::System.Data.MappingType.Element);
                this.column11.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column11");
                this.column11.ExtendedProperties.Add("Generator_UserColumnName", "11");
                base.Columns.Add(this.column11);
                this.column12 = new global::System.Data.DataColumn("12", typeof(string), null, global::System.Data.MappingType.Element);
                this.column12.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column12");
                this.column12.ExtendedProperties.Add("Generator_UserColumnName", "12");
                base.Columns.Add(this.column12);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow NewDataRow() {
                return ((DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataRowChanged != null)) {
                    this.DataRowChanged(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataRowChanging != null)) {
                    this.DataRowChanging(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataRowDeleted != null)) {
                    this.DataRowDeleted(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataRowDeleting != null)) {
                    this.DataRowDeleting(this, new DataRowChangeEvent(((DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataRow(DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsGL ds = new dsGL();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Data2DataTable : global::System.Data.TypedTableBase<Data2Row> {
            
            private global::System.Data.DataColumn columnTglNota;
            
            private global::System.Data.DataColumn columnNoNota;
            
            private global::System.Data.DataColumn columnNoBPPB;
            
            private global::System.Data.DataColumn columnSubNoBPB;
            
            private global::System.Data.DataColumn columnRpNota;
            
            private global::System.Data.DataColumn columnCabangID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2DataTable() {
                this.TableName = "Data2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Data2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglNotaColumn {
                get {
                    return this.columnTglNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoNotaColumn {
                get {
                    return this.columnNoNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBPPBColumn {
                get {
                    return this.columnNoBPPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubNoBPBColumn {
                get {
                    return this.columnSubNoBPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RpNotaColumn {
                get {
                    return this.columnRpNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangIDColumn {
                get {
                    return this.columnCabangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row this[int index] {
                get {
                    return ((Data2Row)(this.Rows[index]));
                }
            }
            
            public event Data2RowChangeEventHandler Data2RowChanging;
            
            public event Data2RowChangeEventHandler Data2RowChanged;
            
            public event Data2RowChangeEventHandler Data2RowDeleting;
            
            public event Data2RowChangeEventHandler Data2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddData2Row(Data2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row AddData2Row(string TglNota, string NoNota, string NoBPPB, string SubNoBPB, string RpNota, string CabangID) {
                Data2Row rowData2Row = ((Data2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TglNota,
                        NoNota,
                        NoBPPB,
                        SubNoBPB,
                        RpNota,
                        CabangID};
                rowData2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowData2Row);
                return rowData2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Data2DataTable cln = ((Data2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Data2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTglNota = base.Columns["TglNota"];
                this.columnNoNota = base.Columns["NoNota"];
                this.columnNoBPPB = base.Columns["NoBPPB"];
                this.columnSubNoBPB = base.Columns["SubNoBPB"];
                this.columnRpNota = base.Columns["RpNota"];
                this.columnCabangID = base.Columns["CabangID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTglNota = new global::System.Data.DataColumn("TglNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglNota);
                this.columnNoNota = new global::System.Data.DataColumn("NoNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoNota);
                this.columnNoBPPB = new global::System.Data.DataColumn("NoBPPB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBPPB);
                this.columnSubNoBPB = new global::System.Data.DataColumn("SubNoBPB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubNoBPB);
                this.columnRpNota = new global::System.Data.DataColumn("RpNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpNota);
                this.columnCabangID = new global::System.Data.DataColumn("CabangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row NewData2Row() {
                return ((Data2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Data2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Data2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data2RowChanged != null)) {
                    this.Data2RowChanged(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data2RowChanging != null)) {
                    this.Data2RowChanging(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data2RowDeleted != null)) {
                    this.Data2RowDeleted(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data2RowDeleting != null)) {
                    this.Data2RowDeleting(this, new Data2RowChangeEvent(((Data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveData2Row(Data2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsGL ds = new dsGL();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Data2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataRow : global::System.Data.DataRow {
            
            private DataDataTable tableData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData = ((DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoUrut {
                get {
                    try {
                        return ((string)(this[this.tableData.NoUrutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoUrut\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoUrutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipe {
                get {
                    try {
                        return ((string)(this[this.tableData.TipeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tipe\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TipeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    try {
                        return ((string)(this[this.tableData.KeteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keterangan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Catatan {
                get {
                    try {
                        return ((string)(this[this.tableData.CatatanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Catatan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.CatatanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Formula {
                get {
                    try {
                        return ((string)(this[this.tableData.FormulaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Formula\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.FormulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TUnderline {
                get {
                    try {
                        return ((bool)(this[this.tableData.TUnderlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TUnderline\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TUnderlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DUnderline {
                get {
                    try {
                        return ((bool)(this[this.tableData.DUnderlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUnderline\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.DUnderlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BlnBerjalan {
                get {
                    try {
                        return ((double)(this[this.tableData.BlnBerjalanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlnBerjalan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BlnBerjalanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BlnSebelum {
                get {
                    try {
                        return ((double)(this[this.tableData.BlnSebelumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlnSebelum\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BlnSebelumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NTNominal {
                get {
                    try {
                        return ((double)(this[this.tableData.NTNominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTNominal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NTNominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NTPct {
                get {
                    try {
                        return ((double)(this[this.tableData.NTPctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTPct\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NTPctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bold {
                get {
                    try {
                        return ((string)(this[this.tableData.BoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bold\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.BoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LMinus {
                get {
                    try {
                        return ((int)(this[this.tableData.LMinusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LMinus\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.LMinusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ref {
                get {
                    try {
                        return ((string)(this[this.tableData.RefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ref\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.RefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoPerkiraan {
                get {
                    try {
                        return ((string)(this[this.tableData.NoPerkiraanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoPerkiraan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NoPerkiraanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaPerkiraan {
                get {
                    try {
                        return ((string)(this[this.tableData.NamaPerkiraanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaPerkiraan\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.NamaPerkiraanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoAwalDebet {
                get {
                    try {
                        return ((string)(this[this.tableData.SaldoAwalDebetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaldoAwalDebet\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SaldoAwalDebetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoAwalKredit {
                get {
                    try {
                        return ((string)(this[this.tableData.SaldoAwalKreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaldoAwalKredit\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SaldoAwalKreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MutasiDebet {
                get {
                    try {
                        return ((string)(this[this.tableData.MutasiDebetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MutasiDebet\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MutasiDebetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MutasiKredit {
                get {
                    try {
                        return ((string)(this[this.tableData.MutasiKreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MutasiKredit\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.MutasiKreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoAkhirDebet {
                get {
                    try {
                        return ((string)(this[this.tableData.SaldoAkhirDebetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaldoAkhirDebet\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SaldoAkhirDebetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoAkhirKredit {
                get {
                    try {
                        return ((string)(this[this.tableData.SaldoAkhirKreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaldoAkhirKredit\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.SaldoAkhirKreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _0 {
                get {
                    try {
                        return ((string)(this[this.tableData._0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'0\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _1 {
                get {
                    try {
                        return ((string)(this[this.tableData._1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'1\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _2 {
                get {
                    try {
                        return ((string)(this[this.tableData._2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'2\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _3 {
                get {
                    try {
                        return ((string)(this[this.tableData._3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'3\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _4 {
                get {
                    try {
                        return ((string)(this[this.tableData._4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'4\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _5 {
                get {
                    try {
                        return ((string)(this[this.tableData._5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'5\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _6 {
                get {
                    try {
                        return ((string)(this[this.tableData._6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'6\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _7 {
                get {
                    try {
                        return ((string)(this[this.tableData._7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'7\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _8 {
                get {
                    try {
                        return ((string)(this[this.tableData._8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'8\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _9 {
                get {
                    try {
                        return ((string)(this[this.tableData._9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'9\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _10 {
                get {
                    try {
                        return ((string)(this[this.tableData._10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'10\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _11 {
                get {
                    try {
                        return ((string)(this[this.tableData._11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'11\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _12 {
                get {
                    try {
                        return ((string)(this[this.tableData._12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'12\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData._12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    try {
                        return ((string)(this[this.tableData.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount {
                get {
                    try {
                        return ((string)(this[this.tableData.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoUrutNull() {
                return this.IsNull(this.tableData.NoUrutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoUrutNull() {
                this[this.tableData.NoUrutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipeNull() {
                return this.IsNull(this.tableData.TipeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipeNull() {
                this[this.tableData.TipeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeteranganNull() {
                return this.IsNull(this.tableData.KeteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeteranganNull() {
                this[this.tableData.KeteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCatatanNull() {
                return this.IsNull(this.tableData.CatatanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCatatanNull() {
                this[this.tableData.CatatanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormulaNull() {
                return this.IsNull(this.tableData.FormulaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormulaNull() {
                this[this.tableData.FormulaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUnderlineNull() {
                return this.IsNull(this.tableData.TUnderlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUnderlineNull() {
                this[this.tableData.TUnderlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDUnderlineNull() {
                return this.IsNull(this.tableData.DUnderlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDUnderlineNull() {
                this[this.tableData.DUnderlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlnBerjalanNull() {
                return this.IsNull(this.tableData.BlnBerjalanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlnBerjalanNull() {
                this[this.tableData.BlnBerjalanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlnSebelumNull() {
                return this.IsNull(this.tableData.BlnSebelumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlnSebelumNull() {
                this[this.tableData.BlnSebelumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTNominalNull() {
                return this.IsNull(this.tableData.NTNominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTNominalNull() {
                this[this.tableData.NTNominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNTPctNull() {
                return this.IsNull(this.tableData.NTPctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNTPctNull() {
                this[this.tableData.NTPctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoldNull() {
                return this.IsNull(this.tableData.BoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoldNull() {
                this[this.tableData.BoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLMinusNull() {
                return this.IsNull(this.tableData.LMinusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLMinusNull() {
                this[this.tableData.LMinusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefNull() {
                return this.IsNull(this.tableData.RefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefNull() {
                this[this.tableData.RefColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoPerkiraanNull() {
                return this.IsNull(this.tableData.NoPerkiraanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoPerkiraanNull() {
                this[this.tableData.NoPerkiraanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaPerkiraanNull() {
                return this.IsNull(this.tableData.NamaPerkiraanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaPerkiraanNull() {
                this[this.tableData.NamaPerkiraanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoAwalDebetNull() {
                return this.IsNull(this.tableData.SaldoAwalDebetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoAwalDebetNull() {
                this[this.tableData.SaldoAwalDebetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoAwalKreditNull() {
                return this.IsNull(this.tableData.SaldoAwalKreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoAwalKreditNull() {
                this[this.tableData.SaldoAwalKreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMutasiDebetNull() {
                return this.IsNull(this.tableData.MutasiDebetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMutasiDebetNull() {
                this[this.tableData.MutasiDebetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMutasiKreditNull() {
                return this.IsNull(this.tableData.MutasiKreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMutasiKreditNull() {
                this[this.tableData.MutasiKreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoAkhirDebetNull() {
                return this.IsNull(this.tableData.SaldoAkhirDebetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoAkhirDebetNull() {
                this[this.tableData.SaldoAkhirDebetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoAkhirKreditNull() {
                return this.IsNull(this.tableData.SaldoAkhirKreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoAkhirKreditNull() {
                this[this.tableData.SaldoAkhirKreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_0Null() {
                return this.IsNull(this.tableData._0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_0Null() {
                this[this.tableData._0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_1Null() {
                return this.IsNull(this.tableData._1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_1Null() {
                this[this.tableData._1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_2Null() {
                return this.IsNull(this.tableData._2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_2Null() {
                this[this.tableData._2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_3Null() {
                return this.IsNull(this.tableData._3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_3Null() {
                this[this.tableData._3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_4Null() {
                return this.IsNull(this.tableData._4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_4Null() {
                this[this.tableData._4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_5Null() {
                return this.IsNull(this.tableData._5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_5Null() {
                this[this.tableData._5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_6Null() {
                return this.IsNull(this.tableData._6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_6Null() {
                this[this.tableData._6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_7Null() {
                return this.IsNull(this.tableData._7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_7Null() {
                this[this.tableData._7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_8Null() {
                return this.IsNull(this.tableData._8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_8Null() {
                this[this.tableData._8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_9Null() {
                return this.IsNull(this.tableData._9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_9Null() {
                this[this.tableData._9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_10Null() {
                return this.IsNull(this.tableData._10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_10Null() {
                this[this.tableData._10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_11Null() {
                return this.IsNull(this.tableData._11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_11Null() {
                this[this.tableData._11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_12Null() {
                return this.IsNull(this.tableData._12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_12Null() {
                this[this.tableData._12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableData.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableData.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableData.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableData.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Data2Row : global::System.Data.DataRow {
            
            private Data2DataTable tableData2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Data2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableData2 = ((Data2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglNota {
                get {
                    try {
                        return ((string)(this[this.tableData2.TglNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglNota\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.TglNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoNota {
                get {
                    try {
                        return ((string)(this[this.tableData2.NoNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoNota\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.NoNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBPPB {
                get {
                    try {
                        return ((string)(this[this.tableData2.NoBPPBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBPPB\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.NoBPPBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubNoBPB {
                get {
                    try {
                        return ((string)(this[this.tableData2.SubNoBPBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubNoBPB\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.SubNoBPBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RpNota {
                get {
                    try {
                        return ((string)(this[this.tableData2.RpNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpNota\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.RpNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangID {
                get {
                    try {
                        return ((string)(this[this.tableData2.CabangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangID\' in table \'Data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData2.CabangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglNotaNull() {
                return this.IsNull(this.tableData2.TglNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglNotaNull() {
                this[this.tableData2.TglNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoNotaNull() {
                return this.IsNull(this.tableData2.NoNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoNotaNull() {
                this[this.tableData2.NoNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBPPBNull() {
                return this.IsNull(this.tableData2.NoBPPBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBPPBNull() {
                this[this.tableData2.NoBPPBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubNoBPBNull() {
                return this.IsNull(this.tableData2.SubNoBPBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubNoBPBNull() {
                this[this.tableData2.SubNoBPBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRpNotaNull() {
                return this.IsNull(this.tableData2.RpNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRpNotaNull() {
                this[this.tableData2.RpNotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangIDNull() {
                return this.IsNull(this.tableData2.CabangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangIDNull() {
                this[this.tableData2.CabangIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataRowChangeEvent : global::System.EventArgs {
            
            private DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRowChangeEvent(DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Data2RowChangeEvent : global::System.EventArgs {
            
            private Data2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2RowChangeEvent(Data2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Data2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591