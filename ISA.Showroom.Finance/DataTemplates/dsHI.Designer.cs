//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Showroom.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsHI")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsHI : global::System.Data.DataSet {
        
        private HubunganIstimewaDataTable tableHubunganIstimewa;
        
        private HubunganIstimewaDetailDataTable tableHubunganIstimewaDetail;
        
        private LapDetailDataTable tableLapDetail;
        
        private LapGlobalDataTable tableLapGlobal;
        
        private LapHIKelompokTransDataTable tableLapHIKelompokTrans;
        
        private DKNDataTable tableDKN;
        
        private KelompokTransaksiHIDataTable tableKelompokTransaksiHI;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsHI() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsHI(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HubunganIstimewa"] != null)) {
                    base.Tables.Add(new HubunganIstimewaDataTable(ds.Tables["HubunganIstimewa"]));
                }
                if ((ds.Tables["HubunganIstimewaDetail"] != null)) {
                    base.Tables.Add(new HubunganIstimewaDetailDataTable(ds.Tables["HubunganIstimewaDetail"]));
                }
                if ((ds.Tables["LapDetail"] != null)) {
                    base.Tables.Add(new LapDetailDataTable(ds.Tables["LapDetail"]));
                }
                if ((ds.Tables["LapGlobal"] != null)) {
                    base.Tables.Add(new LapGlobalDataTable(ds.Tables["LapGlobal"]));
                }
                if ((ds.Tables["LapHIKelompokTrans"] != null)) {
                    base.Tables.Add(new LapHIKelompokTransDataTable(ds.Tables["LapHIKelompokTrans"]));
                }
                if ((ds.Tables["DKN"] != null)) {
                    base.Tables.Add(new DKNDataTable(ds.Tables["DKN"]));
                }
                if ((ds.Tables["KelompokTransaksiHI"] != null)) {
                    base.Tables.Add(new KelompokTransaksiHIDataTable(ds.Tables["KelompokTransaksiHI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HubunganIstimewaDataTable HubunganIstimewa {
            get {
                return this.tableHubunganIstimewa;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HubunganIstimewaDetailDataTable HubunganIstimewaDetail {
            get {
                return this.tableHubunganIstimewaDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LapDetailDataTable LapDetail {
            get {
                return this.tableLapDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LapGlobalDataTable LapGlobal {
            get {
                return this.tableLapGlobal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LapHIKelompokTransDataTable LapHIKelompokTrans {
            get {
                return this.tableLapHIKelompokTrans;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DKNDataTable DKN {
            get {
                return this.tableDKN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KelompokTransaksiHIDataTable KelompokTransaksiHI {
            get {
                return this.tableKelompokTransaksiHI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsHI cln = ((dsHI)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HubunganIstimewa"] != null)) {
                    base.Tables.Add(new HubunganIstimewaDataTable(ds.Tables["HubunganIstimewa"]));
                }
                if ((ds.Tables["HubunganIstimewaDetail"] != null)) {
                    base.Tables.Add(new HubunganIstimewaDetailDataTable(ds.Tables["HubunganIstimewaDetail"]));
                }
                if ((ds.Tables["LapDetail"] != null)) {
                    base.Tables.Add(new LapDetailDataTable(ds.Tables["LapDetail"]));
                }
                if ((ds.Tables["LapGlobal"] != null)) {
                    base.Tables.Add(new LapGlobalDataTable(ds.Tables["LapGlobal"]));
                }
                if ((ds.Tables["LapHIKelompokTrans"] != null)) {
                    base.Tables.Add(new LapHIKelompokTransDataTable(ds.Tables["LapHIKelompokTrans"]));
                }
                if ((ds.Tables["DKN"] != null)) {
                    base.Tables.Add(new DKNDataTable(ds.Tables["DKN"]));
                }
                if ((ds.Tables["KelompokTransaksiHI"] != null)) {
                    base.Tables.Add(new KelompokTransaksiHIDataTable(ds.Tables["KelompokTransaksiHI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHubunganIstimewa = ((HubunganIstimewaDataTable)(base.Tables["HubunganIstimewa"]));
            if ((initTable == true)) {
                if ((this.tableHubunganIstimewa != null)) {
                    this.tableHubunganIstimewa.InitVars();
                }
            }
            this.tableHubunganIstimewaDetail = ((HubunganIstimewaDetailDataTable)(base.Tables["HubunganIstimewaDetail"]));
            if ((initTable == true)) {
                if ((this.tableHubunganIstimewaDetail != null)) {
                    this.tableHubunganIstimewaDetail.InitVars();
                }
            }
            this.tableLapDetail = ((LapDetailDataTable)(base.Tables["LapDetail"]));
            if ((initTable == true)) {
                if ((this.tableLapDetail != null)) {
                    this.tableLapDetail.InitVars();
                }
            }
            this.tableLapGlobal = ((LapGlobalDataTable)(base.Tables["LapGlobal"]));
            if ((initTable == true)) {
                if ((this.tableLapGlobal != null)) {
                    this.tableLapGlobal.InitVars();
                }
            }
            this.tableLapHIKelompokTrans = ((LapHIKelompokTransDataTable)(base.Tables["LapHIKelompokTrans"]));
            if ((initTable == true)) {
                if ((this.tableLapHIKelompokTrans != null)) {
                    this.tableLapHIKelompokTrans.InitVars();
                }
            }
            this.tableDKN = ((DKNDataTable)(base.Tables["DKN"]));
            if ((initTable == true)) {
                if ((this.tableDKN != null)) {
                    this.tableDKN.InitVars();
                }
            }
            this.tableKelompokTransaksiHI = ((KelompokTransaksiHIDataTable)(base.Tables["KelompokTransaksiHI"]));
            if ((initTable == true)) {
                if ((this.tableKelompokTransaksiHI != null)) {
                    this.tableKelompokTransaksiHI.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsHI";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsHI.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHubunganIstimewa = new HubunganIstimewaDataTable();
            base.Tables.Add(this.tableHubunganIstimewa);
            this.tableHubunganIstimewaDetail = new HubunganIstimewaDetailDataTable();
            base.Tables.Add(this.tableHubunganIstimewaDetail);
            this.tableLapDetail = new LapDetailDataTable();
            base.Tables.Add(this.tableLapDetail);
            this.tableLapGlobal = new LapGlobalDataTable();
            base.Tables.Add(this.tableLapGlobal);
            this.tableLapHIKelompokTrans = new LapHIKelompokTransDataTable();
            base.Tables.Add(this.tableLapHIKelompokTrans);
            this.tableDKN = new DKNDataTable();
            base.Tables.Add(this.tableDKN);
            this.tableKelompokTransaksiHI = new KelompokTransaksiHIDataTable();
            base.Tables.Add(this.tableKelompokTransaksiHI);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_HubunganIstimewa_HubunganIstimewaDetail", new global::System.Data.DataColumn[] {
                        this.tableHubunganIstimewa.RowIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableHubunganIstimewaDetail.HeaderRowIDColumn});
            this.tableHubunganIstimewaDetail.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHubunganIstimewa() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHubunganIstimewaDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLapDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLapGlobal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLapHIKelompokTrans() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDKN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKelompokTransaksiHI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsHI ds = new dsHI();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HubunganIstimewaRowChangeEventHandler(object sender, HubunganIstimewaRowChangeEvent e);
        
        public delegate void HubunganIstimewaDetailRowChangeEventHandler(object sender, HubunganIstimewaDetailRowChangeEvent e);
        
        public delegate void LapDetailRowChangeEventHandler(object sender, LapDetailRowChangeEvent e);
        
        public delegate void LapGlobalRowChangeEventHandler(object sender, LapGlobalRowChangeEvent e);
        
        public delegate void LapHIKelompokTransRowChangeEventHandler(object sender, LapHIKelompokTransRowChangeEvent e);
        
        public delegate void DKNRowChangeEventHandler(object sender, DKNRowChangeEvent e);
        
        public delegate void KelompokTransaksiHIRowChangeEventHandler(object sender, KelompokTransaksiHIRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HubunganIstimewaDataTable : global::System.Data.TypedTableBase<HubunganIstimewaRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnCabangDariID;
            
            private global::System.Data.DataColumn columnCabangKeID;
            
            private global::System.Data.DataColumn columnKelompokTransaksi;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnNoRequest;
            
            private global::System.Data.DataColumn columnTanggalRequest;
            
            private global::System.Data.DataColumn columnCTipeNota;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaDataTable() {
                this.TableName = "HubunganIstimewa";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HubunganIstimewaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HubunganIstimewaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangDariIDColumn {
                get {
                    return this.columnCabangDariID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangKeIDColumn {
                get {
                    return this.columnCabangKeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KelompokTransaksiColumn {
                get {
                    return this.columnKelompokTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoRequestColumn {
                get {
                    return this.columnNoRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalRequestColumn {
                get {
                    return this.columnTanggalRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTipeNotaColumn {
                get {
                    return this.columnCTipeNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaRow this[int index] {
                get {
                    return ((HubunganIstimewaRow)(this.Rows[index]));
                }
            }
            
            public event HubunganIstimewaRowChangeEventHandler HubunganIstimewaRowChanging;
            
            public event HubunganIstimewaRowChangeEventHandler HubunganIstimewaRowChanged;
            
            public event HubunganIstimewaRowChangeEventHandler HubunganIstimewaRowDeleting;
            
            public event HubunganIstimewaRowChangeEventHandler HubunganIstimewaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHubunganIstimewaRow(HubunganIstimewaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaRow AddHubunganIstimewaRow(System.Guid RowID, string NoBukti, System.DateTime Tanggal, string CabangDariID, string CabangKeID, short KelompokTransaksi, string Total, string NoRequest, System.DateTime TanggalRequest, string CTipeNota) {
                HubunganIstimewaRow rowHubunganIstimewaRow = ((HubunganIstimewaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        NoBukti,
                        Tanggal,
                        CabangDariID,
                        CabangKeID,
                        KelompokTransaksi,
                        Total,
                        NoRequest,
                        TanggalRequest,
                        CTipeNota};
                rowHubunganIstimewaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHubunganIstimewaRow);
                return rowHubunganIstimewaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HubunganIstimewaDataTable cln = ((HubunganIstimewaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HubunganIstimewaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnCabangDariID = base.Columns["CabangDariID"];
                this.columnCabangKeID = base.Columns["CabangKeID"];
                this.columnKelompokTransaksi = base.Columns["KelompokTransaksi"];
                this.columnTotal = base.Columns["Total"];
                this.columnNoRequest = base.Columns["NoRequest"];
                this.columnTanggalRequest = base.Columns["TanggalRequest"];
                this.columnCTipeNota = base.Columns["CTipeNota"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnCabangDariID = new global::System.Data.DataColumn("CabangDariID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangDariID);
                this.columnCabangKeID = new global::System.Data.DataColumn("CabangKeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangKeID);
                this.columnKelompokTransaksi = new global::System.Data.DataColumn("KelompokTransaksi", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKelompokTransaksi);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnNoRequest = new global::System.Data.DataColumn("NoRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoRequest);
                this.columnTanggalRequest = new global::System.Data.DataColumn("TanggalRequest", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalRequest);
                this.columnCTipeNota = new global::System.Data.DataColumn("CTipeNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTipeNota);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowID}, false));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnNoBukti}, false));
                this.columnRowID.AllowDBNull = false;
                this.columnRowID.Unique = true;
                this.columnNoBukti.Unique = true;
                this.columnNoBukti.Caption = "No. Bukti";
                this.columnCabangDariID.Caption = "Dari Cabang";
                this.columnCabangKeID.Caption = "Ke Cabang";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaRow NewHubunganIstimewaRow() {
                return ((HubunganIstimewaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HubunganIstimewaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HubunganIstimewaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HubunganIstimewaRowChanged != null)) {
                    this.HubunganIstimewaRowChanged(this, new HubunganIstimewaRowChangeEvent(((HubunganIstimewaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HubunganIstimewaRowChanging != null)) {
                    this.HubunganIstimewaRowChanging(this, new HubunganIstimewaRowChangeEvent(((HubunganIstimewaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HubunganIstimewaRowDeleted != null)) {
                    this.HubunganIstimewaRowDeleted(this, new HubunganIstimewaRowChangeEvent(((HubunganIstimewaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HubunganIstimewaRowDeleting != null)) {
                    this.HubunganIstimewaRowDeleting(this, new HubunganIstimewaRowChangeEvent(((HubunganIstimewaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHubunganIstimewaRow(HubunganIstimewaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHI ds = new dsHI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HubunganIstimewaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HubunganIstimewaDetailDataTable : global::System.Data.TypedTableBase<HubunganIstimewaDetailRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnHeaderRowID;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnReferensi;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnNoPerkiraan;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnCabangKeID;
            
            private global::System.Data.DataColumn columnCTipeNota;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaDetailDataTable() {
                this.TableName = "HubunganIstimewaDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HubunganIstimewaDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HubunganIstimewaDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderRowIDColumn {
                get {
                    return this.columnHeaderRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferensiColumn {
                get {
                    return this.columnReferensi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoPerkiraanColumn {
                get {
                    return this.columnNoPerkiraan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangKeIDColumn {
                get {
                    return this.columnCabangKeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTipeNotaColumn {
                get {
                    return this.columnCTipeNota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaDetailRow this[int index] {
                get {
                    return ((HubunganIstimewaDetailRow)(this.Rows[index]));
                }
            }
            
            public event HubunganIstimewaDetailRowChangeEventHandler HubunganIstimewaDetailRowChanging;
            
            public event HubunganIstimewaDetailRowChangeEventHandler HubunganIstimewaDetailRowChanged;
            
            public event HubunganIstimewaDetailRowChangeEventHandler HubunganIstimewaDetailRowDeleting;
            
            public event HubunganIstimewaDetailRowChangeEventHandler HubunganIstimewaDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHubunganIstimewaDetailRow(HubunganIstimewaDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaDetailRow AddHubunganIstimewaDetailRow(System.Guid RowID, System.Guid HeaderRowID, string Uraian, string Referensi, double Nominal, string NoPerkiraan, string NoBukti, System.DateTime Tanggal, string CabangKeID, string CTipeNota) {
                HubunganIstimewaDetailRow rowHubunganIstimewaDetailRow = ((HubunganIstimewaDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        HeaderRowID,
                        Uraian,
                        Referensi,
                        Nominal,
                        NoPerkiraan,
                        NoBukti,
                        Tanggal,
                        CabangKeID,
                        CTipeNota};
                rowHubunganIstimewaDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHubunganIstimewaDetailRow);
                return rowHubunganIstimewaDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HubunganIstimewaDetailDataTable cln = ((HubunganIstimewaDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HubunganIstimewaDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnHeaderRowID = base.Columns["HeaderRowID"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnReferensi = base.Columns["Referensi"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnNoPerkiraan = base.Columns["NoPerkiraan"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnCabangKeID = base.Columns["CabangKeID"];
                this.columnCTipeNota = base.Columns["CTipeNota"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnHeaderRowID = new global::System.Data.DataColumn("HeaderRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderRowID);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnReferensi = new global::System.Data.DataColumn("Referensi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferensi);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnNoPerkiraan = new global::System.Data.DataColumn("NoPerkiraan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoPerkiraan);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnCabangKeID = new global::System.Data.DataColumn("CabangKeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangKeID);
                this.columnCTipeNota = new global::System.Data.DataColumn("CTipeNota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTipeNota);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowID}, false));
                this.columnRowID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaDetailRow NewHubunganIstimewaDetailRow() {
                return ((HubunganIstimewaDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HubunganIstimewaDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HubunganIstimewaDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HubunganIstimewaDetailRowChanged != null)) {
                    this.HubunganIstimewaDetailRowChanged(this, new HubunganIstimewaDetailRowChangeEvent(((HubunganIstimewaDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HubunganIstimewaDetailRowChanging != null)) {
                    this.HubunganIstimewaDetailRowChanging(this, new HubunganIstimewaDetailRowChangeEvent(((HubunganIstimewaDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HubunganIstimewaDetailRowDeleted != null)) {
                    this.HubunganIstimewaDetailRowDeleted(this, new HubunganIstimewaDetailRowChangeEvent(((HubunganIstimewaDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HubunganIstimewaDetailRowDeleting != null)) {
                    this.HubunganIstimewaDetailRowDeleting(this, new HubunganIstimewaDetailRowChangeEvent(((HubunganIstimewaDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHubunganIstimewaDetailRow(HubunganIstimewaDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHI ds = new dsHI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HubunganIstimewaDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LapDetailDataTable : global::System.Data.TypedTableBase<LapDetailRow> {
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnKode;
            
            private global::System.Data.DataColumn columnDebet;
            
            private global::System.Data.DataColumn columnKredit;
            
            private global::System.Data.DataColumn columnTanggalRequest;
            
            private global::System.Data.DataColumn columnNoRequest;
            
            private global::System.Data.DataColumn columnNominalOri;
            
            private global::System.Data.DataColumn columnMataUangID;
            
            private global::System.Data.DataColumn columnNoGroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapDetailDataTable() {
                this.TableName = "LapDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LapDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LapDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeColumn {
                get {
                    return this.columnKode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebetColumn {
                get {
                    return this.columnDebet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KreditColumn {
                get {
                    return this.columnKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalRequestColumn {
                get {
                    return this.columnTanggalRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoRequestColumn {
                get {
                    return this.columnNoRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalOriColumn {
                get {
                    return this.columnNominalOri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangIDColumn {
                get {
                    return this.columnMataUangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoGroupColumn {
                get {
                    return this.columnNoGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapDetailRow this[int index] {
                get {
                    return ((LapDetailRow)(this.Rows[index]));
                }
            }
            
            public event LapDetailRowChangeEventHandler LapDetailRowChanging;
            
            public event LapDetailRowChangeEventHandler LapDetailRowChanged;
            
            public event LapDetailRowChangeEventHandler LapDetailRowDeleting;
            
            public event LapDetailRowChangeEventHandler LapDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLapDetailRow(LapDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapDetailRow AddLapDetailRow(string Tanggal, string NoBukti, string Uraian, string Kode, string Debet, string Kredit, System.DateTime TanggalRequest, string NoRequest, double NominalOri, string MataUangID, string NoGroup) {
                LapDetailRow rowLapDetailRow = ((LapDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Tanggal,
                        NoBukti,
                        Uraian,
                        Kode,
                        Debet,
                        Kredit,
                        TanggalRequest,
                        NoRequest,
                        NominalOri,
                        MataUangID,
                        NoGroup};
                rowLapDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLapDetailRow);
                return rowLapDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LapDetailDataTable cln = ((LapDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LapDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnKode = base.Columns["Kode"];
                this.columnDebet = base.Columns["Debet"];
                this.columnKredit = base.Columns["Kredit"];
                this.columnTanggalRequest = base.Columns["TanggalRequest"];
                this.columnNoRequest = base.Columns["NoRequest"];
                this.columnNominalOri = base.Columns["NominalOri"];
                this.columnMataUangID = base.Columns["MataUangID"];
                this.columnNoGroup = base.Columns["NoGroup"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnKode = new global::System.Data.DataColumn("Kode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode);
                this.columnDebet = new global::System.Data.DataColumn("Debet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebet);
                this.columnKredit = new global::System.Data.DataColumn("Kredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKredit);
                this.columnTanggalRequest = new global::System.Data.DataColumn("TanggalRequest", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalRequest);
                this.columnNoRequest = new global::System.Data.DataColumn("NoRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoRequest);
                this.columnNominalOri = new global::System.Data.DataColumn("NominalOri", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalOri);
                this.columnMataUangID = new global::System.Data.DataColumn("MataUangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangID);
                this.columnNoGroup = new global::System.Data.DataColumn("NoGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoGroup);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapDetailRow NewLapDetailRow() {
                return ((LapDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LapDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LapDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LapDetailRowChanged != null)) {
                    this.LapDetailRowChanged(this, new LapDetailRowChangeEvent(((LapDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LapDetailRowChanging != null)) {
                    this.LapDetailRowChanging(this, new LapDetailRowChangeEvent(((LapDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LapDetailRowDeleted != null)) {
                    this.LapDetailRowDeleted(this, new LapDetailRowChangeEvent(((LapDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LapDetailRowDeleting != null)) {
                    this.LapDetailRowDeleting(this, new LapDetailRowChangeEvent(((LapDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLapDetailRow(LapDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHI ds = new dsHI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LapDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LapGlobalDataTable : global::System.Data.TypedTableBase<LapGlobalRow> {
            
            private global::System.Data.DataColumn columnKode;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            private global::System.Data.DataColumn columnPosisi;
            
            private global::System.Data.DataColumn columnNominal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapGlobalDataTable() {
                this.TableName = "LapGlobal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LapGlobalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LapGlobalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeColumn {
                get {
                    return this.columnKode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosisiColumn {
                get {
                    return this.columnPosisi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapGlobalRow this[int index] {
                get {
                    return ((LapGlobalRow)(this.Rows[index]));
                }
            }
            
            public event LapGlobalRowChangeEventHandler LapGlobalRowChanging;
            
            public event LapGlobalRowChangeEventHandler LapGlobalRowChanged;
            
            public event LapGlobalRowChangeEventHandler LapGlobalRowDeleting;
            
            public event LapGlobalRowChangeEventHandler LapGlobalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLapGlobalRow(LapGlobalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapGlobalRow AddLapGlobalRow(string Kode, string Keterangan, string Posisi, string Nominal) {
                LapGlobalRow rowLapGlobalRow = ((LapGlobalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kode,
                        Keterangan,
                        Posisi,
                        Nominal};
                rowLapGlobalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLapGlobalRow);
                return rowLapGlobalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LapGlobalDataTable cln = ((LapGlobalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LapGlobalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKode = base.Columns["Kode"];
                this.columnKeterangan = base.Columns["Keterangan"];
                this.columnPosisi = base.Columns["Posisi"];
                this.columnNominal = base.Columns["Nominal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKode = new global::System.Data.DataColumn("Kode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
                this.columnPosisi = new global::System.Data.DataColumn("Posisi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosisi);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapGlobalRow NewLapGlobalRow() {
                return ((LapGlobalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LapGlobalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LapGlobalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LapGlobalRowChanged != null)) {
                    this.LapGlobalRowChanged(this, new LapGlobalRowChangeEvent(((LapGlobalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LapGlobalRowChanging != null)) {
                    this.LapGlobalRowChanging(this, new LapGlobalRowChangeEvent(((LapGlobalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LapGlobalRowDeleted != null)) {
                    this.LapGlobalRowDeleted(this, new LapGlobalRowChangeEvent(((LapGlobalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LapGlobalRowDeleting != null)) {
                    this.LapGlobalRowDeleting(this, new LapGlobalRowChangeEvent(((LapGlobalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLapGlobalRow(LapGlobalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHI ds = new dsHI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LapGlobalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LapHIKelompokTransDataTable : global::System.Data.TypedTableBase<LapHIKelompokTransRow> {
            
            private global::System.Data.DataColumn columnKodeKelompok;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            private global::System.Data.DataColumn columnNominal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapHIKelompokTransDataTable() {
                this.TableName = "LapHIKelompokTrans";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LapHIKelompokTransDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LapHIKelompokTransDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompokColumn {
                get {
                    return this.columnKodeKelompok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapHIKelompokTransRow this[int index] {
                get {
                    return ((LapHIKelompokTransRow)(this.Rows[index]));
                }
            }
            
            public event LapHIKelompokTransRowChangeEventHandler LapHIKelompokTransRowChanging;
            
            public event LapHIKelompokTransRowChangeEventHandler LapHIKelompokTransRowChanged;
            
            public event LapHIKelompokTransRowChangeEventHandler LapHIKelompokTransRowDeleting;
            
            public event LapHIKelompokTransRowChangeEventHandler LapHIKelompokTransRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLapHIKelompokTransRow(LapHIKelompokTransRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapHIKelompokTransRow AddLapHIKelompokTransRow(string KodeKelompok, string Keterangan, string Nominal) {
                LapHIKelompokTransRow rowLapHIKelompokTransRow = ((LapHIKelompokTransRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeKelompok,
                        Keterangan,
                        Nominal};
                rowLapHIKelompokTransRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLapHIKelompokTransRow);
                return rowLapHIKelompokTransRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LapHIKelompokTransDataTable cln = ((LapHIKelompokTransDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LapHIKelompokTransDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeKelompok = base.Columns["KodeKelompok"];
                this.columnKeterangan = base.Columns["Keterangan"];
                this.columnNominal = base.Columns["Nominal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeKelompok = new global::System.Data.DataColumn("KodeKelompok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapHIKelompokTransRow NewLapHIKelompokTransRow() {
                return ((LapHIKelompokTransRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LapHIKelompokTransRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LapHIKelompokTransRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LapHIKelompokTransRowChanged != null)) {
                    this.LapHIKelompokTransRowChanged(this, new LapHIKelompokTransRowChangeEvent(((LapHIKelompokTransRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LapHIKelompokTransRowChanging != null)) {
                    this.LapHIKelompokTransRowChanging(this, new LapHIKelompokTransRowChangeEvent(((LapHIKelompokTransRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LapHIKelompokTransRowDeleted != null)) {
                    this.LapHIKelompokTransRowDeleted(this, new LapHIKelompokTransRowChangeEvent(((LapHIKelompokTransRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LapHIKelompokTransRowDeleting != null)) {
                    this.LapHIKelompokTransRowDeleting(this, new LapHIKelompokTransRowChangeEvent(((LapHIKelompokTransRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLapHIKelompokTransRow(LapHIKelompokTransRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHI ds = new dsHI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LapHIKelompokTransDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DKNDataTable : global::System.Data.TypedTableBase<DKNRow> {
            
            private global::System.Data.DataColumn columnHeaderRowID;
            
            private global::System.Data.DataColumn columnJudul;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnCabangKeID;
            
            private global::System.Data.DataColumn columnNoRequest;
            
            private global::System.Data.DataColumn columnTanggalRequest;
            
            private global::System.Data.DataColumn columnNoPerkiraan;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnNominalRp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DKNDataTable() {
                this.TableName = "DKN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DKNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DKNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderRowIDColumn {
                get {
                    return this.columnHeaderRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JudulColumn {
                get {
                    return this.columnJudul;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangKeIDColumn {
                get {
                    return this.columnCabangKeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoRequestColumn {
                get {
                    return this.columnNoRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalRequestColumn {
                get {
                    return this.columnTanggalRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoPerkiraanColumn {
                get {
                    return this.columnNoPerkiraan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalRpColumn {
                get {
                    return this.columnNominalRp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DKNRow this[int index] {
                get {
                    return ((DKNRow)(this.Rows[index]));
                }
            }
            
            public event DKNRowChangeEventHandler DKNRowChanging;
            
            public event DKNRowChangeEventHandler DKNRowChanged;
            
            public event DKNRowChangeEventHandler DKNRowDeleting;
            
            public event DKNRowChangeEventHandler DKNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDKNRow(DKNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DKNRow AddDKNRow(string HeaderRowID, string Judul, string Tanggal, string NoBukti, string CabangKeID, string NoRequest, string TanggalRequest, string NoPerkiraan, string Uraian, string NominalRp) {
                DKNRow rowDKNRow = ((DKNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HeaderRowID,
                        Judul,
                        Tanggal,
                        NoBukti,
                        CabangKeID,
                        NoRequest,
                        TanggalRequest,
                        NoPerkiraan,
                        Uraian,
                        NominalRp};
                rowDKNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDKNRow);
                return rowDKNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DKNDataTable cln = ((DKNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DKNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHeaderRowID = base.Columns["HeaderRowID"];
                this.columnJudul = base.Columns["Judul"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnCabangKeID = base.Columns["CabangKeID"];
                this.columnNoRequest = base.Columns["NoRequest"];
                this.columnTanggalRequest = base.Columns["TanggalRequest"];
                this.columnNoPerkiraan = base.Columns["NoPerkiraan"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnNominalRp = base.Columns["NominalRp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHeaderRowID = new global::System.Data.DataColumn("HeaderRowID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderRowID);
                this.columnJudul = new global::System.Data.DataColumn("Judul", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJudul);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnCabangKeID = new global::System.Data.DataColumn("CabangKeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangKeID);
                this.columnNoRequest = new global::System.Data.DataColumn("NoRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoRequest);
                this.columnTanggalRequest = new global::System.Data.DataColumn("TanggalRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalRequest);
                this.columnNoPerkiraan = new global::System.Data.DataColumn("NoPerkiraan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoPerkiraan);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnNominalRp = new global::System.Data.DataColumn("NominalRp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalRp);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DKNRow NewDKNRow() {
                return ((DKNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DKNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DKNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DKNRowChanged != null)) {
                    this.DKNRowChanged(this, new DKNRowChangeEvent(((DKNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DKNRowChanging != null)) {
                    this.DKNRowChanging(this, new DKNRowChangeEvent(((DKNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DKNRowDeleted != null)) {
                    this.DKNRowDeleted(this, new DKNRowChangeEvent(((DKNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DKNRowDeleting != null)) {
                    this.DKNRowDeleting(this, new DKNRowChangeEvent(((DKNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDKNRow(DKNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHI ds = new dsHI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DKNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KelompokTransaksiHIDataTable : global::System.Data.TypedTableBase<KelompokTransaksiHIRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnKodeKelompok;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokTransaksiHIDataTable() {
                this.TableName = "KelompokTransaksiHI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KelompokTransaksiHIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KelompokTransaksiHIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompokColumn {
                get {
                    return this.columnKodeKelompok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokTransaksiHIRow this[int index] {
                get {
                    return ((KelompokTransaksiHIRow)(this.Rows[index]));
                }
            }
            
            public event KelompokTransaksiHIRowChangeEventHandler KelompokTransaksiHIRowChanging;
            
            public event KelompokTransaksiHIRowChangeEventHandler KelompokTransaksiHIRowChanged;
            
            public event KelompokTransaksiHIRowChangeEventHandler KelompokTransaksiHIRowDeleting;
            
            public event KelompokTransaksiHIRowChangeEventHandler KelompokTransaksiHIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKelompokTransaksiHIRow(KelompokTransaksiHIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokTransaksiHIRow AddKelompokTransaksiHIRow(System.Guid RowID, string KodeKelompok, string Keterangan) {
                KelompokTransaksiHIRow rowKelompokTransaksiHIRow = ((KelompokTransaksiHIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        KodeKelompok,
                        Keterangan};
                rowKelompokTransaksiHIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKelompokTransaksiHIRow);
                return rowKelompokTransaksiHIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KelompokTransaksiHIDataTable cln = ((KelompokTransaksiHIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KelompokTransaksiHIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnKodeKelompok = base.Columns["KodeKelompok"];
                this.columnKeterangan = base.Columns["Keterangan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnKodeKelompok = new global::System.Data.DataColumn("KodeKelompok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokTransaksiHIRow NewKelompokTransaksiHIRow() {
                return ((KelompokTransaksiHIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KelompokTransaksiHIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KelompokTransaksiHIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KelompokTransaksiHIRowChanged != null)) {
                    this.KelompokTransaksiHIRowChanged(this, new KelompokTransaksiHIRowChangeEvent(((KelompokTransaksiHIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KelompokTransaksiHIRowChanging != null)) {
                    this.KelompokTransaksiHIRowChanging(this, new KelompokTransaksiHIRowChangeEvent(((KelompokTransaksiHIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KelompokTransaksiHIRowDeleted != null)) {
                    this.KelompokTransaksiHIRowDeleted(this, new KelompokTransaksiHIRowChangeEvent(((KelompokTransaksiHIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KelompokTransaksiHIRowDeleting != null)) {
                    this.KelompokTransaksiHIRowDeleting(this, new KelompokTransaksiHIRowChangeEvent(((KelompokTransaksiHIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKelompokTransaksiHIRow(KelompokTransaksiHIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHI ds = new dsHI();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KelompokTransaksiHIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HubunganIstimewaRow : global::System.Data.DataRow {
            
            private HubunganIstimewaDataTable tableHubunganIstimewa;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HubunganIstimewaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHubunganIstimewa = ((HubunganIstimewaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RowID {
                get {
                    return ((global::System.Guid)(this[this.tableHubunganIstimewa.RowIDColumn]));
                }
                set {
                    this[this.tableHubunganIstimewa.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewa.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tanggal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHubunganIstimewa.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangDariID {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewa.CabangDariIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangDariID\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.CabangDariIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangKeID {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewa.CabangKeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangKeID\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.CabangKeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short KelompokTransaksi {
                get {
                    try {
                        return ((short)(this[this.tableHubunganIstimewa.KelompokTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KelompokTransaksi\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.KelompokTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewa.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoRequest {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewa.NoRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoRequest\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.NoRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TanggalRequest {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHubunganIstimewa.TanggalRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalRequest\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.TanggalRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTipeNota {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewa.CTipeNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTipeNota\' in table \'HubunganIstimewa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewa.CTipeNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableHubunganIstimewa.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableHubunganIstimewa.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableHubunganIstimewa.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableHubunganIstimewa.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangDariIDNull() {
                return this.IsNull(this.tableHubunganIstimewa.CabangDariIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangDariIDNull() {
                this[this.tableHubunganIstimewa.CabangDariIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangKeIDNull() {
                return this.IsNull(this.tableHubunganIstimewa.CabangKeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangKeIDNull() {
                this[this.tableHubunganIstimewa.CabangKeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKelompokTransaksiNull() {
                return this.IsNull(this.tableHubunganIstimewa.KelompokTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKelompokTransaksiNull() {
                this[this.tableHubunganIstimewa.KelompokTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableHubunganIstimewa.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableHubunganIstimewa.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoRequestNull() {
                return this.IsNull(this.tableHubunganIstimewa.NoRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoRequestNull() {
                this[this.tableHubunganIstimewa.NoRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalRequestNull() {
                return this.IsNull(this.tableHubunganIstimewa.TanggalRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalRequestNull() {
                this[this.tableHubunganIstimewa.TanggalRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTipeNotaNull() {
                return this.IsNull(this.tableHubunganIstimewa.CTipeNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTipeNotaNull() {
                this[this.tableHubunganIstimewa.CTipeNotaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HubunganIstimewaDetailRow : global::System.Data.DataRow {
            
            private HubunganIstimewaDetailDataTable tableHubunganIstimewaDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HubunganIstimewaDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHubunganIstimewaDetail = ((HubunganIstimewaDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHubunganIstimewaDetail.RowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid HeaderRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHubunganIstimewaDetail.HeaderRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderRowID\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.HeaderRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewaDetail.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Referensi {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewaDetail.ReferensiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Referensi\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.ReferensiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Nominal {
                get {
                    try {
                        return ((double)(this[this.tableHubunganIstimewaDetail.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoPerkiraan {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewaDetail.NoPerkiraanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoPerkiraan\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.NoPerkiraanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewaDetail.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tanggal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHubunganIstimewaDetail.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangKeID {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewaDetail.CabangKeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangKeID\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.CabangKeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTipeNota {
                get {
                    try {
                        return ((string)(this[this.tableHubunganIstimewaDetail.CTipeNotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTipeNota\' in table \'HubunganIstimewaDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHubunganIstimewaDetail.CTipeNotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowIDNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.RowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowIDNull() {
                this[this.tableHubunganIstimewaDetail.RowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderRowIDNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.HeaderRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderRowIDNull() {
                this[this.tableHubunganIstimewaDetail.HeaderRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableHubunganIstimewaDetail.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferensiNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.ReferensiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferensiNull() {
                this[this.tableHubunganIstimewaDetail.ReferensiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableHubunganIstimewaDetail.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoPerkiraanNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.NoPerkiraanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoPerkiraanNull() {
                this[this.tableHubunganIstimewaDetail.NoPerkiraanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableHubunganIstimewaDetail.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableHubunganIstimewaDetail.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangKeIDNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.CabangKeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangKeIDNull() {
                this[this.tableHubunganIstimewaDetail.CabangKeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTipeNotaNull() {
                return this.IsNull(this.tableHubunganIstimewaDetail.CTipeNotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTipeNotaNull() {
                this[this.tableHubunganIstimewaDetail.CTipeNotaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LapDetailRow : global::System.Data.DataRow {
            
            private LapDetailDataTable tableLapDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LapDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLapDetail = ((LapDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kode {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.KodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.KodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Debet {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.DebetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debet\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.DebetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kredit {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.KreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kredit\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.KreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TanggalRequest {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLapDetail.TanggalRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalRequest\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.TanggalRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoRequest {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.NoRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoRequest\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.NoRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NominalOri {
                get {
                    try {
                        return ((double)(this[this.tableLapDetail.NominalOriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalOri\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.NominalOriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MataUangID {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.MataUangIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MataUangID\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.MataUangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoGroup {
                get {
                    try {
                        return ((string)(this[this.tableLapDetail.NoGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoGroup\' in table \'LapDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapDetail.NoGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableLapDetail.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableLapDetail.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableLapDetail.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableLapDetail.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableLapDetail.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableLapDetail.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeNull() {
                return this.IsNull(this.tableLapDetail.KodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeNull() {
                this[this.tableLapDetail.KodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebetNull() {
                return this.IsNull(this.tableLapDetail.DebetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebetNull() {
                this[this.tableLapDetail.DebetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKreditNull() {
                return this.IsNull(this.tableLapDetail.KreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKreditNull() {
                this[this.tableLapDetail.KreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalRequestNull() {
                return this.IsNull(this.tableLapDetail.TanggalRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalRequestNull() {
                this[this.tableLapDetail.TanggalRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoRequestNull() {
                return this.IsNull(this.tableLapDetail.NoRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoRequestNull() {
                this[this.tableLapDetail.NoRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalOriNull() {
                return this.IsNull(this.tableLapDetail.NominalOriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalOriNull() {
                this[this.tableLapDetail.NominalOriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMataUangIDNull() {
                return this.IsNull(this.tableLapDetail.MataUangIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMataUangIDNull() {
                this[this.tableLapDetail.MataUangIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoGroupNull() {
                return this.IsNull(this.tableLapDetail.NoGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoGroupNull() {
                this[this.tableLapDetail.NoGroupColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LapGlobalRow : global::System.Data.DataRow {
            
            private LapGlobalDataTable tableLapGlobal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LapGlobalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLapGlobal = ((LapGlobalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kode {
                get {
                    try {
                        return ((string)(this[this.tableLapGlobal.KodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode\' in table \'LapGlobal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapGlobal.KodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    try {
                        return ((string)(this[this.tableLapGlobal.KeteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keterangan\' in table \'LapGlobal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapGlobal.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Posisi {
                get {
                    try {
                        return ((string)(this[this.tableLapGlobal.PosisiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Posisi\' in table \'LapGlobal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapGlobal.PosisiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableLapGlobal.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'LapGlobal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapGlobal.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeNull() {
                return this.IsNull(this.tableLapGlobal.KodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeNull() {
                this[this.tableLapGlobal.KodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeteranganNull() {
                return this.IsNull(this.tableLapGlobal.KeteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeteranganNull() {
                this[this.tableLapGlobal.KeteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosisiNull() {
                return this.IsNull(this.tableLapGlobal.PosisiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosisiNull() {
                this[this.tableLapGlobal.PosisiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableLapGlobal.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableLapGlobal.NominalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LapHIKelompokTransRow : global::System.Data.DataRow {
            
            private LapHIKelompokTransDataTable tableLapHIKelompokTrans;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LapHIKelompokTransRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLapHIKelompokTrans = ((LapHIKelompokTransDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok {
                get {
                    try {
                        return ((string)(this[this.tableLapHIKelompokTrans.KodeKelompokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeKelompok\' in table \'LapHIKelompokTrans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapHIKelompokTrans.KodeKelompokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    try {
                        return ((string)(this[this.tableLapHIKelompokTrans.KeteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keterangan\' in table \'LapHIKelompokTrans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapHIKelompokTrans.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tableLapHIKelompokTrans.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'LapHIKelompokTrans\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLapHIKelompokTrans.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeKelompokNull() {
                return this.IsNull(this.tableLapHIKelompokTrans.KodeKelompokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeKelompokNull() {
                this[this.tableLapHIKelompokTrans.KodeKelompokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeteranganNull() {
                return this.IsNull(this.tableLapHIKelompokTrans.KeteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeteranganNull() {
                this[this.tableLapHIKelompokTrans.KeteranganColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableLapHIKelompokTrans.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableLapHIKelompokTrans.NominalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DKNRow : global::System.Data.DataRow {
            
            private DKNDataTable tableDKN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DKNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDKN = ((DKNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeaderRowID {
                get {
                    try {
                        return ((string)(this[this.tableDKN.HeaderRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderRowID\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.HeaderRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Judul {
                get {
                    try {
                        return ((string)(this[this.tableDKN.JudulColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Judul\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.JudulColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    try {
                        return ((string)(this[this.tableDKN.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableDKN.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangKeID {
                get {
                    try {
                        return ((string)(this[this.tableDKN.CabangKeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangKeID\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.CabangKeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoRequest {
                get {
                    try {
                        return ((string)(this[this.tableDKN.NoRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoRequest\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.NoRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TanggalRequest {
                get {
                    try {
                        return ((string)(this[this.tableDKN.TanggalRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalRequest\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.TanggalRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoPerkiraan {
                get {
                    try {
                        return ((string)(this[this.tableDKN.NoPerkiraanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoPerkiraan\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.NoPerkiraanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableDKN.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NominalRp {
                get {
                    try {
                        return ((string)(this[this.tableDKN.NominalRpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalRp\' in table \'DKN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDKN.NominalRpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderRowIDNull() {
                return this.IsNull(this.tableDKN.HeaderRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderRowIDNull() {
                this[this.tableDKN.HeaderRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJudulNull() {
                return this.IsNull(this.tableDKN.JudulColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJudulNull() {
                this[this.tableDKN.JudulColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableDKN.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableDKN.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableDKN.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableDKN.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangKeIDNull() {
                return this.IsNull(this.tableDKN.CabangKeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangKeIDNull() {
                this[this.tableDKN.CabangKeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoRequestNull() {
                return this.IsNull(this.tableDKN.NoRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoRequestNull() {
                this[this.tableDKN.NoRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalRequestNull() {
                return this.IsNull(this.tableDKN.TanggalRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalRequestNull() {
                this[this.tableDKN.TanggalRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoPerkiraanNull() {
                return this.IsNull(this.tableDKN.NoPerkiraanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoPerkiraanNull() {
                this[this.tableDKN.NoPerkiraanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableDKN.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableDKN.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalRpNull() {
                return this.IsNull(this.tableDKN.NominalRpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalRpNull() {
                this[this.tableDKN.NominalRpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KelompokTransaksiHIRow : global::System.Data.DataRow {
            
            private KelompokTransaksiHIDataTable tableKelompokTransaksiHI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KelompokTransaksiHIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKelompokTransaksiHI = ((KelompokTransaksiHIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableKelompokTransaksiHI.RowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowID\' in table \'KelompokTransaksiHI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokTransaksiHI.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok {
                get {
                    try {
                        return ((string)(this[this.tableKelompokTransaksiHI.KodeKelompokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeKelompok\' in table \'KelompokTransaksiHI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokTransaksiHI.KodeKelompokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    try {
                        return ((string)(this[this.tableKelompokTransaksiHI.KeteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keterangan\' in table \'KelompokTransaksiHI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokTransaksiHI.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowIDNull() {
                return this.IsNull(this.tableKelompokTransaksiHI.RowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowIDNull() {
                this[this.tableKelompokTransaksiHI.RowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeKelompokNull() {
                return this.IsNull(this.tableKelompokTransaksiHI.KodeKelompokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeKelompokNull() {
                this[this.tableKelompokTransaksiHI.KodeKelompokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeteranganNull() {
                return this.IsNull(this.tableKelompokTransaksiHI.KeteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeteranganNull() {
                this[this.tableKelompokTransaksiHI.KeteranganColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HubunganIstimewaRowChangeEvent : global::System.EventArgs {
            
            private HubunganIstimewaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaRowChangeEvent(HubunganIstimewaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HubunganIstimewaDetailRowChangeEvent : global::System.EventArgs {
            
            private HubunganIstimewaDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaDetailRowChangeEvent(HubunganIstimewaDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HubunganIstimewaDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LapDetailRowChangeEvent : global::System.EventArgs {
            
            private LapDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapDetailRowChangeEvent(LapDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LapGlobalRowChangeEvent : global::System.EventArgs {
            
            private LapGlobalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapGlobalRowChangeEvent(LapGlobalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapGlobalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LapHIKelompokTransRowChangeEvent : global::System.EventArgs {
            
            private LapHIKelompokTransRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapHIKelompokTransRowChangeEvent(LapHIKelompokTransRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LapHIKelompokTransRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DKNRowChangeEvent : global::System.EventArgs {
            
            private DKNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DKNRowChangeEvent(DKNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DKNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KelompokTransaksiHIRowChangeEvent : global::System.EventArgs {
            
            private KelompokTransaksiHIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokTransaksiHIRowChangeEvent(KelompokTransaksiHIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokTransaksiHIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591