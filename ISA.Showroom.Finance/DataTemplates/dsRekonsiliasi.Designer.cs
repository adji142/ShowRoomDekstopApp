//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Showroom.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRekonsiliasi")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsRekonsiliasi : global::System.Data.DataSet {
        
        private dataDataTable tabledata;
        
        private data2DataTable tabledata2;
        
        private TransaksiBankDataTable tableTransaksiBank;
        
        private TransaksiBankPerTglInputDataTable tableTransaksiBankPerTglInput;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsRekonsiliasi() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsRekonsiliasi(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["data"] != null)) {
                    base.Tables.Add(new dataDataTable(ds.Tables["data"]));
                }
                if ((ds.Tables["data2"] != null)) {
                    base.Tables.Add(new data2DataTable(ds.Tables["data2"]));
                }
                if ((ds.Tables["TransaksiBank"] != null)) {
                    base.Tables.Add(new TransaksiBankDataTable(ds.Tables["TransaksiBank"]));
                }
                if ((ds.Tables["TransaksiBankPerTglInput"] != null)) {
                    base.Tables.Add(new TransaksiBankPerTglInputDataTable(ds.Tables["TransaksiBankPerTglInput"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataDataTable data {
            get {
                return this.tabledata;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public data2DataTable data2 {
            get {
                return this.tabledata2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransaksiBankDataTable TransaksiBank {
            get {
                return this.tableTransaksiBank;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransaksiBankPerTglInputDataTable TransaksiBankPerTglInput {
            get {
                return this.tableTransaksiBankPerTglInput;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsRekonsiliasi cln = ((dsRekonsiliasi)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["data"] != null)) {
                    base.Tables.Add(new dataDataTable(ds.Tables["data"]));
                }
                if ((ds.Tables["data2"] != null)) {
                    base.Tables.Add(new data2DataTable(ds.Tables["data2"]));
                }
                if ((ds.Tables["TransaksiBank"] != null)) {
                    base.Tables.Add(new TransaksiBankDataTable(ds.Tables["TransaksiBank"]));
                }
                if ((ds.Tables["TransaksiBankPerTglInput"] != null)) {
                    base.Tables.Add(new TransaksiBankPerTglInputDataTable(ds.Tables["TransaksiBankPerTglInput"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledata = ((dataDataTable)(base.Tables["data"]));
            if ((initTable == true)) {
                if ((this.tabledata != null)) {
                    this.tabledata.InitVars();
                }
            }
            this.tabledata2 = ((data2DataTable)(base.Tables["data2"]));
            if ((initTable == true)) {
                if ((this.tabledata2 != null)) {
                    this.tabledata2.InitVars();
                }
            }
            this.tableTransaksiBank = ((TransaksiBankDataTable)(base.Tables["TransaksiBank"]));
            if ((initTable == true)) {
                if ((this.tableTransaksiBank != null)) {
                    this.tableTransaksiBank.InitVars();
                }
            }
            this.tableTransaksiBankPerTglInput = ((TransaksiBankPerTglInputDataTable)(base.Tables["TransaksiBankPerTglInput"]));
            if ((initTable == true)) {
                if ((this.tableTransaksiBankPerTglInput != null)) {
                    this.tableTransaksiBankPerTglInput.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsRekonsiliasi";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRekonsiliasi.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledata = new dataDataTable();
            base.Tables.Add(this.tabledata);
            this.tabledata2 = new data2DataTable();
            base.Tables.Add(this.tabledata2);
            this.tableTransaksiBank = new TransaksiBankDataTable();
            base.Tables.Add(this.tableTransaksiBank);
            this.tableTransaksiBankPerTglInput = new TransaksiBankPerTglInputDataTable();
            base.Tables.Add(this.tableTransaksiBankPerTglInput);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedata() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedata2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransaksiBank() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransaksiBankPerTglInput() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRekonsiliasi ds = new dsRekonsiliasi();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dataRowChangeEventHandler(object sender, dataRowChangeEvent e);
        
        public delegate void data2RowChangeEventHandler(object sender, data2RowChangeEvent e);
        
        public delegate void TransaksiBankRowChangeEventHandler(object sender, TransaksiBankRowChangeEvent e);
        
        public delegate void TransaksiBankPerTglInputRowChangeEventHandler(object sender, TransaksiBankPerTglInputRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataDataTable : global::System.Data.TypedTableBase<dataRow> {
            
            private global::System.Data.DataColumn columnklp_kode;
            
            private global::System.Data.DataColumn columnklp_nama;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnNominal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataDataTable() {
                this.TableName = "data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn klp_kodeColumn {
                get {
                    return this.columnklp_kode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn klp_namaColumn {
                get {
                    return this.columnklp_nama;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataRow this[int index] {
                get {
                    return ((dataRow)(this.Rows[index]));
                }
            }
            
            public event dataRowChangeEventHandler dataRowChanging;
            
            public event dataRowChangeEventHandler dataRowChanged;
            
            public event dataRowChangeEventHandler dataRowDeleting;
            
            public event dataRowChangeEventHandler dataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddataRow(dataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataRow AdddataRow(string klp_kode, string klp_nama, string Tanggal, string Uraian, string Nominal) {
                dataRow rowdataRow = ((dataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        klp_kode,
                        klp_nama,
                        Tanggal,
                        Uraian,
                        Nominal};
                rowdataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdataRow);
                return rowdataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dataDataTable cln = ((dataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnklp_kode = base.Columns["klp_kode"];
                this.columnklp_nama = base.Columns["klp_nama"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnNominal = base.Columns["Nominal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnklp_kode = new global::System.Data.DataColumn("klp_kode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnklp_kode);
                this.columnklp_nama = new global::System.Data.DataColumn("klp_nama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnklp_nama);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataRow NewdataRow() {
                return ((dataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataRowChanged != null)) {
                    this.dataRowChanged(this, new dataRowChangeEvent(((dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataRowChanging != null)) {
                    this.dataRowChanging(this, new dataRowChangeEvent(((dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataRowDeleted != null)) {
                    this.dataRowDeleted(this, new dataRowChangeEvent(((dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataRowDeleting != null)) {
                    this.dataRowDeleting(this, new dataRowChangeEvent(((dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedataRow(dataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRekonsiliasi ds = new dsRekonsiliasi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class data2DataTable : global::System.Data.TypedTableBase<data2Row> {
            
            private global::System.Data.DataColumn columnSelisih;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public data2DataTable() {
                this.TableName = "data2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal data2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected data2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelisihColumn {
                get {
                    return this.columnSelisih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public data2Row this[int index] {
                get {
                    return ((data2Row)(this.Rows[index]));
                }
            }
            
            public event data2RowChangeEventHandler data2RowChanging;
            
            public event data2RowChangeEventHandler data2RowChanged;
            
            public event data2RowChangeEventHandler data2RowDeleting;
            
            public event data2RowChangeEventHandler data2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddata2Row(data2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public data2Row Adddata2Row(string Selisih) {
                data2Row rowdata2Row = ((data2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Selisih};
                rowdata2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdata2Row);
                return rowdata2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                data2DataTable cln = ((data2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new data2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelisih = base.Columns["Selisih"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSelisih = new global::System.Data.DataColumn("Selisih", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelisih);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public data2Row Newdata2Row() {
                return ((data2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new data2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(data2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.data2RowChanged != null)) {
                    this.data2RowChanged(this, new data2RowChangeEvent(((data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.data2RowChanging != null)) {
                    this.data2RowChanging(this, new data2RowChangeEvent(((data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.data2RowDeleted != null)) {
                    this.data2RowDeleted(this, new data2RowChangeEvent(((data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.data2RowDeleting != null)) {
                    this.data2RowDeleting(this, new data2RowChangeEvent(((data2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedata2Row(data2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRekonsiliasi ds = new dsRekonsiliasi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "data2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransaksiBankDataTable : global::System.Data.TypedTableBase<TransaksiBankRow> {
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnCabang;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnDebet;
            
            private global::System.Data.DataColumn columnKredit;
            
            private global::System.Data.DataColumn columnDebetORI;
            
            private global::System.Data.DataColumn columnKreditORI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankDataTable() {
                this.TableName = "TransaksiBank";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransaksiBankDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransaksiBankDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangColumn {
                get {
                    return this.columnCabang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebetColumn {
                get {
                    return this.columnDebet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KreditColumn {
                get {
                    return this.columnKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebetORIColumn {
                get {
                    return this.columnDebetORI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KreditORIColumn {
                get {
                    return this.columnKreditORI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankRow this[int index] {
                get {
                    return ((TransaksiBankRow)(this.Rows[index]));
                }
            }
            
            public event TransaksiBankRowChangeEventHandler TransaksiBankRowChanging;
            
            public event TransaksiBankRowChangeEventHandler TransaksiBankRowChanged;
            
            public event TransaksiBankRowChangeEventHandler TransaksiBankRowDeleting;
            
            public event TransaksiBankRowChangeEventHandler TransaksiBankRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransaksiBankRow(TransaksiBankRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankRow AddTransaksiBankRow(string Tanggal, string NoBukti, string Cabang, string Uraian, string Debet, string Kredit, string DebetORI, string KreditORI) {
                TransaksiBankRow rowTransaksiBankRow = ((TransaksiBankRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Tanggal,
                        NoBukti,
                        Cabang,
                        Uraian,
                        Debet,
                        Kredit,
                        DebetORI,
                        KreditORI};
                rowTransaksiBankRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransaksiBankRow);
                return rowTransaksiBankRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransaksiBankDataTable cln = ((TransaksiBankDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransaksiBankDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnCabang = base.Columns["Cabang"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnDebet = base.Columns["Debet"];
                this.columnKredit = base.Columns["Kredit"];
                this.columnDebetORI = base.Columns["DebetORI"];
                this.columnKreditORI = base.Columns["KreditORI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnCabang = new global::System.Data.DataColumn("Cabang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabang);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnDebet = new global::System.Data.DataColumn("Debet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebet);
                this.columnKredit = new global::System.Data.DataColumn("Kredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKredit);
                this.columnDebetORI = new global::System.Data.DataColumn("DebetORI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebetORI);
                this.columnKreditORI = new global::System.Data.DataColumn("KreditORI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKreditORI);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankRow NewTransaksiBankRow() {
                return ((TransaksiBankRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransaksiBankRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransaksiBankRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransaksiBankRowChanged != null)) {
                    this.TransaksiBankRowChanged(this, new TransaksiBankRowChangeEvent(((TransaksiBankRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransaksiBankRowChanging != null)) {
                    this.TransaksiBankRowChanging(this, new TransaksiBankRowChangeEvent(((TransaksiBankRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransaksiBankRowDeleted != null)) {
                    this.TransaksiBankRowDeleted(this, new TransaksiBankRowChangeEvent(((TransaksiBankRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransaksiBankRowDeleting != null)) {
                    this.TransaksiBankRowDeleting(this, new TransaksiBankRowChangeEvent(((TransaksiBankRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransaksiBankRow(TransaksiBankRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRekonsiliasi ds = new dsRekonsiliasi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransaksiBankDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransaksiBankPerTglInputDataTable : global::System.Data.TypedTableBase<TransaksiBankPerTglInputRow> {
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnCabang;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnDebet;
            
            private global::System.Data.DataColumn columnKredit;
            
            private global::System.Data.DataColumn columnDebetORI;
            
            private global::System.Data.DataColumn columnKreditORI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankPerTglInputDataTable() {
                this.TableName = "TransaksiBankPerTglInput";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransaksiBankPerTglInputDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransaksiBankPerTglInputDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangColumn {
                get {
                    return this.columnCabang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebetColumn {
                get {
                    return this.columnDebet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KreditColumn {
                get {
                    return this.columnKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebetORIColumn {
                get {
                    return this.columnDebetORI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KreditORIColumn {
                get {
                    return this.columnKreditORI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankPerTglInputRow this[int index] {
                get {
                    return ((TransaksiBankPerTglInputRow)(this.Rows[index]));
                }
            }
            
            public event TransaksiBankPerTglInputRowChangeEventHandler TransaksiBankPerTglInputRowChanging;
            
            public event TransaksiBankPerTglInputRowChangeEventHandler TransaksiBankPerTglInputRowChanged;
            
            public event TransaksiBankPerTglInputRowChangeEventHandler TransaksiBankPerTglInputRowDeleting;
            
            public event TransaksiBankPerTglInputRowChangeEventHandler TransaksiBankPerTglInputRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransaksiBankPerTglInputRow(TransaksiBankPerTglInputRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankPerTglInputRow AddTransaksiBankPerTglInputRow(string Tanggal, string NoBukti, string Cabang, string Uraian, string Debet, string Kredit, string DebetORI, string KreditORI) {
                TransaksiBankPerTglInputRow rowTransaksiBankPerTglInputRow = ((TransaksiBankPerTglInputRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Tanggal,
                        NoBukti,
                        Cabang,
                        Uraian,
                        Debet,
                        Kredit,
                        DebetORI,
                        KreditORI};
                rowTransaksiBankPerTglInputRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransaksiBankPerTglInputRow);
                return rowTransaksiBankPerTglInputRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransaksiBankPerTglInputDataTable cln = ((TransaksiBankPerTglInputDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransaksiBankPerTglInputDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnCabang = base.Columns["Cabang"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnDebet = base.Columns["Debet"];
                this.columnKredit = base.Columns["Kredit"];
                this.columnDebetORI = base.Columns["DebetORI"];
                this.columnKreditORI = base.Columns["KreditORI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnCabang = new global::System.Data.DataColumn("Cabang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabang);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnDebet = new global::System.Data.DataColumn("Debet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebet);
                this.columnKredit = new global::System.Data.DataColumn("Kredit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKredit);
                this.columnDebetORI = new global::System.Data.DataColumn("DebetORI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebetORI);
                this.columnKreditORI = new global::System.Data.DataColumn("KreditORI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKreditORI);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankPerTglInputRow NewTransaksiBankPerTglInputRow() {
                return ((TransaksiBankPerTglInputRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransaksiBankPerTglInputRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransaksiBankPerTglInputRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransaksiBankPerTglInputRowChanged != null)) {
                    this.TransaksiBankPerTglInputRowChanged(this, new TransaksiBankPerTglInputRowChangeEvent(((TransaksiBankPerTglInputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransaksiBankPerTglInputRowChanging != null)) {
                    this.TransaksiBankPerTglInputRowChanging(this, new TransaksiBankPerTglInputRowChangeEvent(((TransaksiBankPerTglInputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransaksiBankPerTglInputRowDeleted != null)) {
                    this.TransaksiBankPerTglInputRowDeleted(this, new TransaksiBankPerTglInputRowChangeEvent(((TransaksiBankPerTglInputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransaksiBankPerTglInputRowDeleting != null)) {
                    this.TransaksiBankPerTglInputRowDeleting(this, new TransaksiBankPerTglInputRowChangeEvent(((TransaksiBankPerTglInputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransaksiBankPerTglInputRow(TransaksiBankPerTglInputRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRekonsiliasi ds = new dsRekonsiliasi();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransaksiBankPerTglInputDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dataRow : global::System.Data.DataRow {
            
            private dataDataTable tabledata;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledata = ((dataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string klp_kode {
                get {
                    try {
                        return ((string)(this[this.tabledata.klp_kodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'klp_kode\' in table \'data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledata.klp_kodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string klp_nama {
                get {
                    try {
                        return ((string)(this[this.tabledata.klp_namaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'klp_nama\' in table \'data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledata.klp_namaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    try {
                        return ((string)(this[this.tabledata.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledata.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tabledata.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledata.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nominal {
                get {
                    try {
                        return ((string)(this[this.tabledata.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledata.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isklp_kodeNull() {
                return this.IsNull(this.tabledata.klp_kodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setklp_kodeNull() {
                this[this.tabledata.klp_kodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isklp_namaNull() {
                return this.IsNull(this.tabledata.klp_namaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setklp_namaNull() {
                this[this.tabledata.klp_namaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tabledata.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tabledata.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tabledata.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tabledata.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tabledata.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tabledata.NominalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class data2Row : global::System.Data.DataRow {
            
            private data2DataTable tabledata2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal data2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledata2 = ((data2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Selisih {
                get {
                    try {
                        return ((string)(this[this.tabledata2.SelisihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selisih\' in table \'data2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledata2.SelisihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelisihNull() {
                return this.IsNull(this.tabledata2.SelisihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelisihNull() {
                this[this.tabledata2.SelisihColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransaksiBankRow : global::System.Data.DataRow {
            
            private TransaksiBankDataTable tableTransaksiBank;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransaksiBankRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransaksiBank = ((TransaksiBankDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBank.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'TransaksiBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBank.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBank.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'TransaksiBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBank.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cabang {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBank.CabangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cabang\' in table \'TransaksiBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBank.CabangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBank.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'TransaksiBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBank.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Debet {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBank.DebetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debet\' in table \'TransaksiBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBank.DebetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kredit {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBank.KreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kredit\' in table \'TransaksiBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBank.KreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebetORI {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBank.DebetORIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebetORI\' in table \'TransaksiBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBank.DebetORIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KreditORI {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBank.KreditORIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KreditORI\' in table \'TransaksiBank\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBank.KreditORIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableTransaksiBank.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableTransaksiBank.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableTransaksiBank.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableTransaksiBank.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangNull() {
                return this.IsNull(this.tableTransaksiBank.CabangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangNull() {
                this[this.tableTransaksiBank.CabangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableTransaksiBank.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableTransaksiBank.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebetNull() {
                return this.IsNull(this.tableTransaksiBank.DebetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebetNull() {
                this[this.tableTransaksiBank.DebetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKreditNull() {
                return this.IsNull(this.tableTransaksiBank.KreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKreditNull() {
                this[this.tableTransaksiBank.KreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebetORINull() {
                return this.IsNull(this.tableTransaksiBank.DebetORIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebetORINull() {
                this[this.tableTransaksiBank.DebetORIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKreditORINull() {
                return this.IsNull(this.tableTransaksiBank.KreditORIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKreditORINull() {
                this[this.tableTransaksiBank.KreditORIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransaksiBankPerTglInputRow : global::System.Data.DataRow {
            
            private TransaksiBankPerTglInputDataTable tableTransaksiBankPerTglInput;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransaksiBankPerTglInputRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransaksiBankPerTglInput = ((TransaksiBankPerTglInputDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tanggal {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBankPerTglInput.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'TransaksiBankPerTglInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBankPerTglInput.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBankPerTglInput.NoBuktiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBukti\' in table \'TransaksiBankPerTglInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBankPerTglInput.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cabang {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBankPerTglInput.CabangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cabang\' in table \'TransaksiBankPerTglInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBankPerTglInput.CabangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBankPerTglInput.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'TransaksiBankPerTglInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBankPerTglInput.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Debet {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBankPerTglInput.DebetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Debet\' in table \'TransaksiBankPerTglInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBankPerTglInput.DebetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kredit {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBankPerTglInput.KreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kredit\' in table \'TransaksiBankPerTglInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBankPerTglInput.KreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebetORI {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBankPerTglInput.DebetORIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebetORI\' in table \'TransaksiBankPerTglInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBankPerTglInput.DebetORIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KreditORI {
                get {
                    try {
                        return ((string)(this[this.tableTransaksiBankPerTglInput.KreditORIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KreditORI\' in table \'TransaksiBankPerTglInput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTransaksiBankPerTglInput.KreditORIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableTransaksiBankPerTglInput.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableTransaksiBankPerTglInput.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiNull() {
                return this.IsNull(this.tableTransaksiBankPerTglInput.NoBuktiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiNull() {
                this[this.tableTransaksiBankPerTglInput.NoBuktiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangNull() {
                return this.IsNull(this.tableTransaksiBankPerTglInput.CabangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangNull() {
                this[this.tableTransaksiBankPerTglInput.CabangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableTransaksiBankPerTglInput.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableTransaksiBankPerTglInput.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebetNull() {
                return this.IsNull(this.tableTransaksiBankPerTglInput.DebetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebetNull() {
                this[this.tableTransaksiBankPerTglInput.DebetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKreditNull() {
                return this.IsNull(this.tableTransaksiBankPerTglInput.KreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKreditNull() {
                this[this.tableTransaksiBankPerTglInput.KreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebetORINull() {
                return this.IsNull(this.tableTransaksiBankPerTglInput.DebetORIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebetORINull() {
                this[this.tableTransaksiBankPerTglInput.DebetORIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKreditORINull() {
                return this.IsNull(this.tableTransaksiBankPerTglInput.KreditORIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKreditORINull() {
                this[this.tableTransaksiBankPerTglInput.KreditORIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dataRowChangeEvent : global::System.EventArgs {
            
            private dataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataRowChangeEvent(dataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class data2RowChangeEvent : global::System.EventArgs {
            
            private data2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public data2RowChangeEvent(data2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public data2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransaksiBankRowChangeEvent : global::System.EventArgs {
            
            private TransaksiBankRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankRowChangeEvent(TransaksiBankRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransaksiBankPerTglInputRowChangeEvent : global::System.EventArgs {
            
            private TransaksiBankPerTglInputRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankPerTglInputRowChangeEvent(TransaksiBankPerTglInputRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaksiBankPerTglInputRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591