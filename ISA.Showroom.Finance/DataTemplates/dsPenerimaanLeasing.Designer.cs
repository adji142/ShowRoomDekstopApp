//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ISA.Showroom.Finance.DataTemplates {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPenerimaanLeasing")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPenerimaanLeasing : global::System.Data.DataSet {
        
        private DetailDataTable tableDetail;
        
        private HeaderDataTable tableHeader;
        
        private IdenNonPenjualanDataTable tableIdenNonPenjualan;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsPenerimaanLeasing() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsPenerimaanLeasing(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Detail"] != null)) {
                    base.Tables.Add(new DetailDataTable(ds.Tables["Detail"]));
                }
                if ((ds.Tables["Header"] != null)) {
                    base.Tables.Add(new HeaderDataTable(ds.Tables["Header"]));
                }
                if ((ds.Tables["IdenNonPenjualan"] != null)) {
                    base.Tables.Add(new IdenNonPenjualanDataTable(ds.Tables["IdenNonPenjualan"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DetailDataTable Detail {
            get {
                return this.tableDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HeaderDataTable Header {
            get {
                return this.tableHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IdenNonPenjualanDataTable IdenNonPenjualan {
            get {
                return this.tableIdenNonPenjualan;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsPenerimaanLeasing cln = ((dsPenerimaanLeasing)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Detail"] != null)) {
                    base.Tables.Add(new DetailDataTable(ds.Tables["Detail"]));
                }
                if ((ds.Tables["Header"] != null)) {
                    base.Tables.Add(new HeaderDataTable(ds.Tables["Header"]));
                }
                if ((ds.Tables["IdenNonPenjualan"] != null)) {
                    base.Tables.Add(new IdenNonPenjualanDataTable(ds.Tables["IdenNonPenjualan"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDetail = ((DetailDataTable)(base.Tables["Detail"]));
            if ((initTable == true)) {
                if ((this.tableDetail != null)) {
                    this.tableDetail.InitVars();
                }
            }
            this.tableHeader = ((HeaderDataTable)(base.Tables["Header"]));
            if ((initTable == true)) {
                if ((this.tableHeader != null)) {
                    this.tableHeader.InitVars();
                }
            }
            this.tableIdenNonPenjualan = ((IdenNonPenjualanDataTable)(base.Tables["IdenNonPenjualan"]));
            if ((initTable == true)) {
                if ((this.tableIdenNonPenjualan != null)) {
                    this.tableIdenNonPenjualan.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsPenerimaanLeasing";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPenerimaanLeasing.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDetail = new DetailDataTable();
            base.Tables.Add(this.tableDetail);
            this.tableHeader = new HeaderDataTable();
            base.Tables.Add(this.tableHeader);
            this.tableIdenNonPenjualan = new IdenNonPenjualanDataTable();
            base.Tables.Add(this.tableIdenNonPenjualan);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIdenNonPenjualan() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPenerimaanLeasing ds = new dsPenerimaanLeasing();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DetailRowChangeEventHandler(object sender, DetailRowChangeEvent e);
        
        public delegate void HeaderRowChangeEventHandler(object sender, HeaderRowChangeEvent e);
        
        public delegate void IdenNonPenjualanRowChangeEventHandler(object sender, IdenNonPenjualanRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DetailDataTable : global::System.Data.TypedTableBase<DetailRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnNoTrans;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnLeasing;
            
            private global::System.Data.DataColumn columnTglJual;
            
            private global::System.Data.DataColumn columncustomer;
            
            private global::System.Data.DataColumn columnSales;
            
            private global::System.Data.DataColumn columnMataUangID;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnTanggalUM;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnKodeTrans;
            
            private global::System.Data.DataColumn columnNoKwitansi;
            
            private global::System.Data.DataColumn columnHargaOff;
            
            private global::System.Data.DataColumn columnPenerimaanUMRowID;
            
            private global::System.Data.DataColumn columnPiutangLSG;
            
            private global::System.Data.DataColumn columnPiutangSBD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailDataTable() {
                this.TableName = "Detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoTransColumn {
                get {
                    return this.columnNoTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeasingColumn {
                get {
                    return this.columnLeasing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglJualColumn {
                get {
                    return this.columnTglJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn customerColumn {
                get {
                    return this.columncustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesColumn {
                get {
                    return this.columnSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangIDColumn {
                get {
                    return this.columnMataUangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalUMColumn {
                get {
                    return this.columnTanggalUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeTransColumn {
                get {
                    return this.columnKodeTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoKwitansiColumn {
                get {
                    return this.columnNoKwitansi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaOffColumn {
                get {
                    return this.columnHargaOff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenerimaanUMRowIDColumn {
                get {
                    return this.columnPenerimaanUMRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangLSGColumn {
                get {
                    return this.columnPiutangLSG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiutangSBDColumn {
                get {
                    return this.columnPiutangSBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRow this[int index] {
                get {
                    return ((DetailRow)(this.Rows[index]));
                }
            }
            
            public event DetailRowChangeEventHandler DetailRowChanging;
            
            public event DetailRowChangeEventHandler DetailRowChanged;
            
            public event DetailRowChangeEventHandler DetailRowDeleting;
            
            public event DetailRowChangeEventHandler DetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDetailRow(DetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRow AddDetailRow(
                        System.Guid RowID, 
                        string NoTrans, 
                        string NoBukti, 
                        string Leasing, 
                        System.DateTime TglJual, 
                        string customer, 
                        string Sales, 
                        string MataUangID, 
                        string Uraian, 
                        System.DateTime TanggalUM, 
                        decimal Nominal, 
                        string KodeTrans, 
                        string NoKwitansi, 
                        decimal HargaOff, 
                        System.Guid PenerimaanUMRowID, 
                        decimal PiutangLSG, 
                        decimal PiutangSBD) {
                DetailRow rowDetailRow = ((DetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        NoTrans,
                        NoBukti,
                        Leasing,
                        TglJual,
                        customer,
                        Sales,
                        MataUangID,
                        Uraian,
                        TanggalUM,
                        Nominal,
                        KodeTrans,
                        NoKwitansi,
                        HargaOff,
                        PenerimaanUMRowID,
                        PiutangLSG,
                        PiutangSBD};
                rowDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDetailRow);
                return rowDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DetailDataTable cln = ((DetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnNoTrans = base.Columns["NoTrans"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnLeasing = base.Columns["Leasing"];
                this.columnTglJual = base.Columns["TglJual"];
                this.columncustomer = base.Columns["customer"];
                this.columnSales = base.Columns["Sales"];
                this.columnMataUangID = base.Columns["MataUangID"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnTanggalUM = base.Columns["TanggalUM"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnKodeTrans = base.Columns["KodeTrans"];
                this.columnNoKwitansi = base.Columns["NoKwitansi"];
                this.columnHargaOff = base.Columns["HargaOff"];
                this.columnPenerimaanUMRowID = base.Columns["PenerimaanUMRowID"];
                this.columnPiutangLSG = base.Columns["PiutangLSG"];
                this.columnPiutangSBD = base.Columns["PiutangSBD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnNoTrans = new global::System.Data.DataColumn("NoTrans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoTrans);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnLeasing = new global::System.Data.DataColumn("Leasing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeasing);
                this.columnTglJual = new global::System.Data.DataColumn("TglJual", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglJual);
                this.columncustomer = new global::System.Data.DataColumn("customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer);
                this.columnSales = new global::System.Data.DataColumn("Sales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSales);
                this.columnMataUangID = new global::System.Data.DataColumn("MataUangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangID);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnTanggalUM = new global::System.Data.DataColumn("TanggalUM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalUM);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnKodeTrans = new global::System.Data.DataColumn("KodeTrans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeTrans);
                this.columnNoKwitansi = new global::System.Data.DataColumn("NoKwitansi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoKwitansi);
                this.columnHargaOff = new global::System.Data.DataColumn("HargaOff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaOff);
                this.columnPenerimaanUMRowID = new global::System.Data.DataColumn("PenerimaanUMRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenerimaanUMRowID);
                this.columnPiutangLSG = new global::System.Data.DataColumn("PiutangLSG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangLSG);
                this.columnPiutangSBD = new global::System.Data.DataColumn("PiutangSBD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiutangSBD);
                this.columnRowID.AllowDBNull = false;
                this.columnNoTrans.AllowDBNull = false;
                this.columnNoTrans.MaxLength = 7;
                this.columnNoBukti.AllowDBNull = false;
                this.columnNoBukti.MaxLength = 20;
                this.columnLeasing.AllowDBNull = false;
                this.columnLeasing.MaxLength = 250;
                this.columncustomer.MaxLength = 255;
                this.columnSales.MaxLength = 255;
                this.columnMataUangID.AllowDBNull = false;
                this.columnMataUangID.MaxLength = 8;
                this.columnUraian.MaxLength = 250;
                this.columnNominal.AllowDBNull = false;
                this.columnKodeTrans.AllowDBNull = false;
                this.columnKodeTrans.MaxLength = 3;
                this.columnNoKwitansi.AllowDBNull = false;
                this.columnNoKwitansi.MaxLength = 7;
                this.columnHargaOff.AllowDBNull = false;
                this.columnPenerimaanUMRowID.AllowDBNull = false;
                this.columnPiutangLSG.ReadOnly = true;
                this.columnPiutangSBD.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRow NewDetailRow() {
                return ((DetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DetailRowChanged != null)) {
                    this.DetailRowChanged(this, new DetailRowChangeEvent(((DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DetailRowChanging != null)) {
                    this.DetailRowChanging(this, new DetailRowChangeEvent(((DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DetailRowDeleted != null)) {
                    this.DetailRowDeleted(this, new DetailRowChangeEvent(((DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DetailRowDeleting != null)) {
                    this.DetailRowDeleting(this, new DetailRowChangeEvent(((DetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDetailRow(DetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPenerimaanLeasing ds = new dsPenerimaanLeasing();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HeaderDataTable : global::System.Data.TypedTableBase<HeaderRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnGroupRowID;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnNoBuktiTemp;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnNoApproval;
            
            private global::System.Data.DataColumn columnPenerimaanDari;
            
            private global::System.Data.DataColumn columnPerusahaanDariRowID;
            
            private global::System.Data.DataColumn columnPerusahaanKeRowID;
            
            private global::System.Data.DataColumn columnCabangDari;
            
            private global::System.Data.DataColumn columnCabangKe;
            
            private global::System.Data.DataColumn columnMataUangRowID;
            
            private global::System.Data.DataColumn columnJnsTransaksiRowID;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnKurs;
            
            private global::System.Data.DataColumn columnNominalRp;
            
            private global::System.Data.DataColumn columnUraian;
            
            private global::System.Data.DataColumn columnJnsPenerimaan;
            
            private global::System.Data.DataColumn columnKasRowID;
            
            private global::System.Data.DataColumn columnBankRowID;
            
            private global::System.Data.DataColumn columnRekeningRowID;
            
            private global::System.Data.DataColumn columnNoCekGiro;
            
            private global::System.Data.DataColumn columnKotaGiro;
            
            private global::System.Data.DataColumn columnDueDateGiro;
            
            private global::System.Data.DataColumn columnTanggalGiroCair;
            
            private global::System.Data.DataColumn columnIsGroup;
            
            private global::System.Data.DataColumn columnHIRowID;
            
            private global::System.Data.DataColumn columnJournalRowID;
            
            private global::System.Data.DataColumn columnLastUpdatedBy;
            
            private global::System.Data.DataColumn columnLastUpdatedTime;
            
            private global::System.Data.DataColumn columnIdRecLama;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnTanggalRk;
            
            private global::System.Data.DataColumn columnPengeluaranRowID;
            
            private global::System.Data.DataColumn columnHutangRowID;
            
            private global::System.Data.DataColumn columnIsHideIden;
            
            private global::System.Data.DataColumn columnNominalGiro;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedTime;
            
            private global::System.Data.DataColumn columnLeasingRowID;
            
            private global::System.Data.DataColumn columnPOS;
            
            private global::System.Data.DataColumn columnTipeBayar;
            
            private global::System.Data.DataColumn columnNominalTunai;
            
            private global::System.Data.DataColumn columnNominalTransfer;
            
            private global::System.Data.DataColumn columnMataUangID;
            
            private global::System.Data.DataColumn columnNamaKas;
            
            private global::System.Data.DataColumn columnUraian1;
            
            private global::System.Data.DataColumn columnNamaRekening;
            
            private global::System.Data.DataColumn columnLeasing;
            
            private global::System.Data.DataColumn columnNomTerIden;
            
            private global::System.Data.DataColumn columnSaldo;
            
            private global::System.Data.DataColumn columnNomNonPNJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderDataTable() {
                this.TableName = "Header";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupRowIDColumn {
                get {
                    return this.columnGroupRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiTempColumn {
                get {
                    return this.columnNoBuktiTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoApprovalColumn {
                get {
                    return this.columnNoApproval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenerimaanDariColumn {
                get {
                    return this.columnPenerimaanDari;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerusahaanDariRowIDColumn {
                get {
                    return this.columnPerusahaanDariRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerusahaanKeRowIDColumn {
                get {
                    return this.columnPerusahaanKeRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangDariColumn {
                get {
                    return this.columnCabangDari;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CabangKeColumn {
                get {
                    return this.columnCabangKe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangRowIDColumn {
                get {
                    return this.columnMataUangRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JnsTransaksiRowIDColumn {
                get {
                    return this.columnJnsTransaksiRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KursColumn {
                get {
                    return this.columnKurs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalRpColumn {
                get {
                    return this.columnNominalRp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UraianColumn {
                get {
                    return this.columnUraian;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JnsPenerimaanColumn {
                get {
                    return this.columnJnsPenerimaan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KasRowIDColumn {
                get {
                    return this.columnKasRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankRowIDColumn {
                get {
                    return this.columnBankRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RekeningRowIDColumn {
                get {
                    return this.columnRekeningRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoCekGiroColumn {
                get {
                    return this.columnNoCekGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KotaGiroColumn {
                get {
                    return this.columnKotaGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateGiroColumn {
                get {
                    return this.columnDueDateGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalGiroCairColumn {
                get {
                    return this.columnTanggalGiroCair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsGroupColumn {
                get {
                    return this.columnIsGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIRowIDColumn {
                get {
                    return this.columnHIRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JournalRowIDColumn {
                get {
                    return this.columnJournalRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedByColumn {
                get {
                    return this.columnLastUpdatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastUpdatedTimeColumn {
                get {
                    return this.columnLastUpdatedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdRecLamaColumn {
                get {
                    return this.columnIdRecLama;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalRkColumn {
                get {
                    return this.columnTanggalRk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PengeluaranRowIDColumn {
                get {
                    return this.columnPengeluaranRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HutangRowIDColumn {
                get {
                    return this.columnHutangRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsHideIdenColumn {
                get {
                    return this.columnIsHideIden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalGiroColumn {
                get {
                    return this.columnNominalGiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedTimeColumn {
                get {
                    return this.columnCreatedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeasingRowIDColumn {
                get {
                    return this.columnLeasingRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POSColumn {
                get {
                    return this.columnPOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipeBayarColumn {
                get {
                    return this.columnTipeBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalTunaiColumn {
                get {
                    return this.columnNominalTunai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalTransferColumn {
                get {
                    return this.columnNominalTransfer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangIDColumn {
                get {
                    return this.columnMataUangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaKasColumn {
                get {
                    return this.columnNamaKas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Uraian1Column {
                get {
                    return this.columnUraian1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaRekeningColumn {
                get {
                    return this.columnNamaRekening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeasingColumn {
                get {
                    return this.columnLeasing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomTerIdenColumn {
                get {
                    return this.columnNomTerIden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomNonPNJColumn {
                get {
                    return this.columnNomNonPNJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderRow this[int index] {
                get {
                    return ((HeaderRow)(this.Rows[index]));
                }
            }
            
            public event HeaderRowChangeEventHandler HeaderRowChanging;
            
            public event HeaderRowChangeEventHandler HeaderRowChanged;
            
            public event HeaderRowChangeEventHandler HeaderRowDeleting;
            
            public event HeaderRowChangeEventHandler HeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHeaderRow(HeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderRow AddHeaderRow(
                        System.Guid RowID, 
                        System.Guid GroupRowID, 
                        string NoBukti, 
                        string NoBuktiTemp, 
                        System.DateTime Tanggal, 
                        string NoApproval, 
                        byte PenerimaanDari, 
                        System.Guid PerusahaanDariRowID, 
                        System.Guid PerusahaanKeRowID, 
                        string CabangDari, 
                        string CabangKe, 
                        System.Guid MataUangRowID, 
                        System.Guid JnsTransaksiRowID, 
                        decimal Nominal, 
                        double Kurs, 
                        decimal NominalRp, 
                        string Uraian, 
                        string JnsPenerimaan, 
                        System.Guid KasRowID, 
                        System.Guid BankRowID, 
                        System.Guid RekeningRowID, 
                        string NoCekGiro, 
                        string KotaGiro, 
                        System.DateTime DueDateGiro, 
                        System.DateTime TanggalGiroCair, 
                        bool IsGroup, 
                        System.Guid HIRowID, 
                        System.Guid JournalRowID, 
                        string LastUpdatedBy, 
                        System.DateTime LastUpdatedTime, 
                        string IdRecLama, 
                        System.DateTime CreatedDate, 
                        System.DateTime TanggalRk, 
                        System.Guid PengeluaranRowID, 
                        System.Guid HutangRowID, 
                        bool IsHideIden, 
                        decimal NominalGiro, 
                        string CreatedBy, 
                        System.DateTime CreatedTime, 
                        System.Guid LeasingRowID, 
                        string POS, 
                        string TipeBayar, 
                        decimal NominalTunai, 
                        decimal NominalTransfer, 
                        string MataUangID, 
                        string NamaKas, 
                        string Uraian1, 
                        string NamaRekening, 
                        string Leasing, 
                        decimal NomTerIden, 
                        decimal Saldo, 
                        string NomNonPNJ) {
                HeaderRow rowHeaderRow = ((HeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        GroupRowID,
                        NoBukti,
                        NoBuktiTemp,
                        Tanggal,
                        NoApproval,
                        PenerimaanDari,
                        PerusahaanDariRowID,
                        PerusahaanKeRowID,
                        CabangDari,
                        CabangKe,
                        MataUangRowID,
                        JnsTransaksiRowID,
                        Nominal,
                        Kurs,
                        NominalRp,
                        Uraian,
                        JnsPenerimaan,
                        KasRowID,
                        BankRowID,
                        RekeningRowID,
                        NoCekGiro,
                        KotaGiro,
                        DueDateGiro,
                        TanggalGiroCair,
                        IsGroup,
                        HIRowID,
                        JournalRowID,
                        LastUpdatedBy,
                        LastUpdatedTime,
                        IdRecLama,
                        CreatedDate,
                        TanggalRk,
                        PengeluaranRowID,
                        HutangRowID,
                        IsHideIden,
                        NominalGiro,
                        CreatedBy,
                        CreatedTime,
                        LeasingRowID,
                        POS,
                        TipeBayar,
                        NominalTunai,
                        NominalTransfer,
                        MataUangID,
                        NamaKas,
                        Uraian1,
                        NamaRekening,
                        Leasing,
                        NomTerIden,
                        Saldo,
                        NomNonPNJ};
                rowHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHeaderRow);
                return rowHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderRow FindByRowID(System.Guid RowID) {
                return ((HeaderRow)(this.Rows.Find(new object[] {
                            RowID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HeaderDataTable cln = ((HeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnGroupRowID = base.Columns["GroupRowID"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnNoBuktiTemp = base.Columns["NoBuktiTemp"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnNoApproval = base.Columns["NoApproval"];
                this.columnPenerimaanDari = base.Columns["PenerimaanDari"];
                this.columnPerusahaanDariRowID = base.Columns["PerusahaanDariRowID"];
                this.columnPerusahaanKeRowID = base.Columns["PerusahaanKeRowID"];
                this.columnCabangDari = base.Columns["CabangDari"];
                this.columnCabangKe = base.Columns["CabangKe"];
                this.columnMataUangRowID = base.Columns["MataUangRowID"];
                this.columnJnsTransaksiRowID = base.Columns["JnsTransaksiRowID"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnKurs = base.Columns["Kurs"];
                this.columnNominalRp = base.Columns["NominalRp"];
                this.columnUraian = base.Columns["Uraian"];
                this.columnJnsPenerimaan = base.Columns["JnsPenerimaan"];
                this.columnKasRowID = base.Columns["KasRowID"];
                this.columnBankRowID = base.Columns["BankRowID"];
                this.columnRekeningRowID = base.Columns["RekeningRowID"];
                this.columnNoCekGiro = base.Columns["NoCekGiro"];
                this.columnKotaGiro = base.Columns["KotaGiro"];
                this.columnDueDateGiro = base.Columns["DueDateGiro"];
                this.columnTanggalGiroCair = base.Columns["TanggalGiroCair"];
                this.columnIsGroup = base.Columns["IsGroup"];
                this.columnHIRowID = base.Columns["HIRowID"];
                this.columnJournalRowID = base.Columns["JournalRowID"];
                this.columnLastUpdatedBy = base.Columns["LastUpdatedBy"];
                this.columnLastUpdatedTime = base.Columns["LastUpdatedTime"];
                this.columnIdRecLama = base.Columns["IdRecLama"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnTanggalRk = base.Columns["TanggalRk"];
                this.columnPengeluaranRowID = base.Columns["PengeluaranRowID"];
                this.columnHutangRowID = base.Columns["HutangRowID"];
                this.columnIsHideIden = base.Columns["IsHideIden"];
                this.columnNominalGiro = base.Columns["NominalGiro"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedTime = base.Columns["CreatedTime"];
                this.columnLeasingRowID = base.Columns["LeasingRowID"];
                this.columnPOS = base.Columns["POS"];
                this.columnTipeBayar = base.Columns["TipeBayar"];
                this.columnNominalTunai = base.Columns["NominalTunai"];
                this.columnNominalTransfer = base.Columns["NominalTransfer"];
                this.columnMataUangID = base.Columns["MataUangID"];
                this.columnNamaKas = base.Columns["NamaKas"];
                this.columnUraian1 = base.Columns["Uraian1"];
                this.columnNamaRekening = base.Columns["NamaRekening"];
                this.columnLeasing = base.Columns["Leasing"];
                this.columnNomTerIden = base.Columns["NomTerIden"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnNomNonPNJ = base.Columns["NomNonPNJ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnGroupRowID = new global::System.Data.DataColumn("GroupRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupRowID);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnNoBuktiTemp = new global::System.Data.DataColumn("NoBuktiTemp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBuktiTemp);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnNoApproval = new global::System.Data.DataColumn("NoApproval", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoApproval);
                this.columnPenerimaanDari = new global::System.Data.DataColumn("PenerimaanDari", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenerimaanDari);
                this.columnPerusahaanDariRowID = new global::System.Data.DataColumn("PerusahaanDariRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerusahaanDariRowID);
                this.columnPerusahaanKeRowID = new global::System.Data.DataColumn("PerusahaanKeRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerusahaanKeRowID);
                this.columnCabangDari = new global::System.Data.DataColumn("CabangDari", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangDari);
                this.columnCabangKe = new global::System.Data.DataColumn("CabangKe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCabangKe);
                this.columnMataUangRowID = new global::System.Data.DataColumn("MataUangRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangRowID);
                this.columnJnsTransaksiRowID = new global::System.Data.DataColumn("JnsTransaksiRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJnsTransaksiRowID);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnKurs = new global::System.Data.DataColumn("Kurs", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKurs);
                this.columnNominalRp = new global::System.Data.DataColumn("NominalRp", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalRp);
                this.columnUraian = new global::System.Data.DataColumn("Uraian", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian);
                this.columnJnsPenerimaan = new global::System.Data.DataColumn("JnsPenerimaan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJnsPenerimaan);
                this.columnKasRowID = new global::System.Data.DataColumn("KasRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKasRowID);
                this.columnBankRowID = new global::System.Data.DataColumn("BankRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankRowID);
                this.columnRekeningRowID = new global::System.Data.DataColumn("RekeningRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRekeningRowID);
                this.columnNoCekGiro = new global::System.Data.DataColumn("NoCekGiro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoCekGiro);
                this.columnKotaGiro = new global::System.Data.DataColumn("KotaGiro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKotaGiro);
                this.columnDueDateGiro = new global::System.Data.DataColumn("DueDateGiro", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDateGiro);
                this.columnTanggalGiroCair = new global::System.Data.DataColumn("TanggalGiroCair", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalGiroCair);
                this.columnIsGroup = new global::System.Data.DataColumn("IsGroup", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsGroup);
                this.columnHIRowID = new global::System.Data.DataColumn("HIRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIRowID);
                this.columnJournalRowID = new global::System.Data.DataColumn("JournalRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJournalRowID);
                this.columnLastUpdatedBy = new global::System.Data.DataColumn("LastUpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedBy);
                this.columnLastUpdatedTime = new global::System.Data.DataColumn("LastUpdatedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdatedTime);
                this.columnIdRecLama = new global::System.Data.DataColumn("IdRecLama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdRecLama);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnTanggalRk = new global::System.Data.DataColumn("TanggalRk", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggalRk);
                this.columnPengeluaranRowID = new global::System.Data.DataColumn("PengeluaranRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPengeluaranRowID);
                this.columnHutangRowID = new global::System.Data.DataColumn("HutangRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHutangRowID);
                this.columnIsHideIden = new global::System.Data.DataColumn("IsHideIden", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHideIden);
                this.columnNominalGiro = new global::System.Data.DataColumn("NominalGiro", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalGiro);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedTime = new global::System.Data.DataColumn("CreatedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedTime);
                this.columnLeasingRowID = new global::System.Data.DataColumn("LeasingRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeasingRowID);
                this.columnPOS = new global::System.Data.DataColumn("POS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOS);
                this.columnTipeBayar = new global::System.Data.DataColumn("TipeBayar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipeBayar);
                this.columnNominalTunai = new global::System.Data.DataColumn("NominalTunai", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalTunai);
                this.columnNominalTransfer = new global::System.Data.DataColumn("NominalTransfer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalTransfer);
                this.columnMataUangID = new global::System.Data.DataColumn("MataUangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangID);
                this.columnNamaKas = new global::System.Data.DataColumn("NamaKas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaKas);
                this.columnUraian1 = new global::System.Data.DataColumn("Uraian1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUraian1);
                this.columnNamaRekening = new global::System.Data.DataColumn("NamaRekening", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaRekening);
                this.columnLeasing = new global::System.Data.DataColumn("Leasing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeasing);
                this.columnNomTerIden = new global::System.Data.DataColumn("NomTerIden", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomTerIden);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnNomNonPNJ = new global::System.Data.DataColumn("NomNonPNJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomNonPNJ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowID}, true));
                this.columnRowID.AllowDBNull = false;
                this.columnRowID.Unique = true;
                this.columnNoBukti.AllowDBNull = false;
                this.columnNoBukti.MaxLength = 20;
                this.columnNoBuktiTemp.MaxLength = 20;
                this.columnNoApproval.MaxLength = 15;
                this.columnPenerimaanDari.AllowDBNull = false;
                this.columnPerusahaanKeRowID.AllowDBNull = false;
                this.columnCabangDari.MaxLength = 3;
                this.columnCabangKe.MaxLength = 3;
                this.columnUraian.MaxLength = 250;
                this.columnJnsPenerimaan.AllowDBNull = false;
                this.columnJnsPenerimaan.MaxLength = 1;
                this.columnNoCekGiro.MaxLength = 30;
                this.columnKotaGiro.MaxLength = 50;
                this.columnLastUpdatedBy.MaxLength = 250;
                this.columnLastUpdatedTime.AllowDBNull = false;
                this.columnIdRecLama.MaxLength = 50;
                this.columnIsHideIden.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 75;
                this.columnPOS.ReadOnly = true;
                this.columnPOS.MaxLength = 4;
                this.columnTipeBayar.ReadOnly = true;
                this.columnTipeBayar.MaxLength = 8;
                this.columnNominalTunai.ReadOnly = true;
                this.columnNominalTransfer.ReadOnly = true;
                this.columnMataUangID.AllowDBNull = false;
                this.columnMataUangID.MaxLength = 3;
                this.columnNamaKas.MaxLength = 100;
                this.columnUraian1.MaxLength = 250;
                this.columnNamaRekening.MaxLength = 100;
                this.columnLeasing.AllowDBNull = false;
                this.columnLeasing.MaxLength = 250;
                this.columnNomTerIden.ReadOnly = true;
                this.columnSaldo.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderRow NewHeaderRow() {
                return ((HeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HeaderRowChanged != null)) {
                    this.HeaderRowChanged(this, new HeaderRowChangeEvent(((HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HeaderRowChanging != null)) {
                    this.HeaderRowChanging(this, new HeaderRowChangeEvent(((HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HeaderRowDeleted != null)) {
                    this.HeaderRowDeleted(this, new HeaderRowChangeEvent(((HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HeaderRowDeleting != null)) {
                    this.HeaderRowDeleting(this, new HeaderRowChangeEvent(((HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHeaderRow(HeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPenerimaanLeasing ds = new dsPenerimaanLeasing();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IdenNonPenjualanDataTable : global::System.Data.TypedTableBase<IdenNonPenjualanRow> {
            
            private global::System.Data.DataColumn columnRowID;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnNominal;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            private global::System.Data.DataColumn columnPenerimaanIdenRowID;
            
            private global::System.Data.DataColumn columnJnsTransaksiRowID;
            
            private global::System.Data.DataColumn columnNamaTransaksi;
            
            private global::System.Data.DataColumn columnNoPerkiraan01;
            
            private global::System.Data.DataColumn columnMataUangRowID;
            
            private global::System.Data.DataColumn columnMataUangID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IdenNonPenjualanDataTable() {
                this.TableName = "IdenNonPenjualan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IdenNonPenjualanDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected IdenNonPenjualanDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIDColumn {
                get {
                    return this.columnRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NominalColumn {
                get {
                    return this.columnNominal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenerimaanIdenRowIDColumn {
                get {
                    return this.columnPenerimaanIdenRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JnsTransaksiRowIDColumn {
                get {
                    return this.columnJnsTransaksiRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaTransaksiColumn {
                get {
                    return this.columnNamaTransaksi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoPerkiraan01Column {
                get {
                    return this.columnNoPerkiraan01;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangRowIDColumn {
                get {
                    return this.columnMataUangRowID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MataUangIDColumn {
                get {
                    return this.columnMataUangID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IdenNonPenjualanRow this[int index] {
                get {
                    return ((IdenNonPenjualanRow)(this.Rows[index]));
                }
            }
            
            public event IdenNonPenjualanRowChangeEventHandler IdenNonPenjualanRowChanging;
            
            public event IdenNonPenjualanRowChangeEventHandler IdenNonPenjualanRowChanged;
            
            public event IdenNonPenjualanRowChangeEventHandler IdenNonPenjualanRowDeleting;
            
            public event IdenNonPenjualanRowChangeEventHandler IdenNonPenjualanRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIdenNonPenjualanRow(IdenNonPenjualanRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IdenNonPenjualanRow AddIdenNonPenjualanRow(System.Guid RowID, System.DateTime Tanggal, string NoBukti, decimal Nominal, string Keterangan, System.Guid PenerimaanIdenRowID, System.Guid JnsTransaksiRowID, string NamaTransaksi, string NoPerkiraan01, System.Guid MataUangRowID, string MataUangID) {
                IdenNonPenjualanRow rowIdenNonPenjualanRow = ((IdenNonPenjualanRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowID,
                        Tanggal,
                        NoBukti,
                        Nominal,
                        Keterangan,
                        PenerimaanIdenRowID,
                        JnsTransaksiRowID,
                        NamaTransaksi,
                        NoPerkiraan01,
                        MataUangRowID,
                        MataUangID};
                rowIdenNonPenjualanRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIdenNonPenjualanRow);
                return rowIdenNonPenjualanRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IdenNonPenjualanRow FindByRowID(System.Guid RowID) {
                return ((IdenNonPenjualanRow)(this.Rows.Find(new object[] {
                            RowID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                IdenNonPenjualanDataTable cln = ((IdenNonPenjualanDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IdenNonPenjualanDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowID = base.Columns["RowID"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnNominal = base.Columns["Nominal"];
                this.columnKeterangan = base.Columns["Keterangan"];
                this.columnPenerimaanIdenRowID = base.Columns["PenerimaanIdenRowID"];
                this.columnJnsTransaksiRowID = base.Columns["JnsTransaksiRowID"];
                this.columnNamaTransaksi = base.Columns["NamaTransaksi"];
                this.columnNoPerkiraan01 = base.Columns["NoPerkiraan01"];
                this.columnMataUangRowID = base.Columns["MataUangRowID"];
                this.columnMataUangID = base.Columns["MataUangID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowID = new global::System.Data.DataColumn("RowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowID);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnNominal = new global::System.Data.DataColumn("Nominal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominal);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
                this.columnPenerimaanIdenRowID = new global::System.Data.DataColumn("PenerimaanIdenRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenerimaanIdenRowID);
                this.columnJnsTransaksiRowID = new global::System.Data.DataColumn("JnsTransaksiRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJnsTransaksiRowID);
                this.columnNamaTransaksi = new global::System.Data.DataColumn("NamaTransaksi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaTransaksi);
                this.columnNoPerkiraan01 = new global::System.Data.DataColumn("NoPerkiraan01", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoPerkiraan01);
                this.columnMataUangRowID = new global::System.Data.DataColumn("MataUangRowID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangRowID);
                this.columnMataUangID = new global::System.Data.DataColumn("MataUangID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMataUangID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowID}, true));
                this.columnRowID.AllowDBNull = false;
                this.columnRowID.Unique = true;
                this.columnTanggal.AllowDBNull = false;
                this.columnNoBukti.AllowDBNull = false;
                this.columnNoBukti.MaxLength = 50;
                this.columnNominal.AllowDBNull = false;
                this.columnKeterangan.AllowDBNull = false;
                this.columnKeterangan.MaxLength = 350;
                this.columnPenerimaanIdenRowID.AllowDBNull = false;
                this.columnJnsTransaksiRowID.AllowDBNull = false;
                this.columnNamaTransaksi.MaxLength = 50;
                this.columnNoPerkiraan01.MaxLength = 15;
                this.columnMataUangRowID.AllowDBNull = false;
                this.columnMataUangID.AllowDBNull = false;
                this.columnMataUangID.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IdenNonPenjualanRow NewIdenNonPenjualanRow() {
                return ((IdenNonPenjualanRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IdenNonPenjualanRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(IdenNonPenjualanRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IdenNonPenjualanRowChanged != null)) {
                    this.IdenNonPenjualanRowChanged(this, new IdenNonPenjualanRowChangeEvent(((IdenNonPenjualanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IdenNonPenjualanRowChanging != null)) {
                    this.IdenNonPenjualanRowChanging(this, new IdenNonPenjualanRowChangeEvent(((IdenNonPenjualanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IdenNonPenjualanRowDeleted != null)) {
                    this.IdenNonPenjualanRowDeleted(this, new IdenNonPenjualanRowChangeEvent(((IdenNonPenjualanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IdenNonPenjualanRowDeleting != null)) {
                    this.IdenNonPenjualanRowDeleting(this, new IdenNonPenjualanRowChangeEvent(((IdenNonPenjualanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIdenNonPenjualanRow(IdenNonPenjualanRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPenerimaanLeasing ds = new dsPenerimaanLeasing();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IdenNonPenjualanDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DetailRow : global::System.Data.DataRow {
            
            private DetailDataTable tableDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDetail = ((DetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RowID {
                get {
                    return ((global::System.Guid)(this[this.tableDetail.RowIDColumn]));
                }
                set {
                    this[this.tableDetail.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoTrans {
                get {
                    return ((string)(this[this.tableDetail.NoTransColumn]));
                }
                set {
                    this[this.tableDetail.NoTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    return ((string)(this[this.tableDetail.NoBuktiColumn]));
                }
                set {
                    this[this.tableDetail.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Leasing {
                get {
                    return ((string)(this[this.tableDetail.LeasingColumn]));
                }
                set {
                    this[this.tableDetail.LeasingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglJual {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDetail.TglJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglJual\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.TglJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string customer {
                get {
                    try {
                        return ((string)(this[this.tableDetail.customerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customer\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.customerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sales {
                get {
                    try {
                        return ((string)(this[this.tableDetail.SalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sales\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.SalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MataUangID {
                get {
                    return ((string)(this[this.tableDetail.MataUangIDColumn]));
                }
                set {
                    this[this.tableDetail.MataUangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableDetail.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TanggalUM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDetail.TanggalUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalUM\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.TanggalUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nominal {
                get {
                    return ((decimal)(this[this.tableDetail.NominalColumn]));
                }
                set {
                    this[this.tableDetail.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeTrans {
                get {
                    return ((string)(this[this.tableDetail.KodeTransColumn]));
                }
                set {
                    this[this.tableDetail.KodeTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoKwitansi {
                get {
                    return ((string)(this[this.tableDetail.NoKwitansiColumn]));
                }
                set {
                    this[this.tableDetail.NoKwitansiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HargaOff {
                get {
                    return ((decimal)(this[this.tableDetail.HargaOffColumn]));
                }
                set {
                    this[this.tableDetail.HargaOffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid PenerimaanUMRowID {
                get {
                    return ((global::System.Guid)(this[this.tableDetail.PenerimaanUMRowIDColumn]));
                }
                set {
                    this[this.tableDetail.PenerimaanUMRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangLSG {
                get {
                    try {
                        return ((decimal)(this[this.tableDetail.PiutangLSGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangLSG\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.PiutangLSGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PiutangSBD {
                get {
                    try {
                        return ((decimal)(this[this.tableDetail.PiutangSBDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiutangSBD\' in table \'Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDetail.PiutangSBDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglJualNull() {
                return this.IsNull(this.tableDetail.TglJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglJualNull() {
                this[this.tableDetail.TglJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscustomerNull() {
                return this.IsNull(this.tableDetail.customerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcustomerNull() {
                this[this.tableDetail.customerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNull() {
                return this.IsNull(this.tableDetail.SalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNull() {
                this[this.tableDetail.SalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableDetail.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableDetail.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalUMNull() {
                return this.IsNull(this.tableDetail.TanggalUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalUMNull() {
                this[this.tableDetail.TanggalUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangLSGNull() {
                return this.IsNull(this.tableDetail.PiutangLSGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangLSGNull() {
                this[this.tableDetail.PiutangLSGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiutangSBDNull() {
                return this.IsNull(this.tableDetail.PiutangSBDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiutangSBDNull() {
                this[this.tableDetail.PiutangSBDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HeaderRow : global::System.Data.DataRow {
            
            private HeaderDataTable tableHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHeader = ((HeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RowID {
                get {
                    return ((global::System.Guid)(this[this.tableHeader.RowIDColumn]));
                }
                set {
                    this[this.tableHeader.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid GroupRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.GroupRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.GroupRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    return ((string)(this[this.tableHeader.NoBuktiColumn]));
                }
                set {
                    this[this.tableHeader.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBuktiTemp {
                get {
                    try {
                        return ((string)(this[this.tableHeader.NoBuktiTempColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoBuktiTemp\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NoBuktiTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tanggal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHeader.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoApproval {
                get {
                    try {
                        return ((string)(this[this.tableHeader.NoApprovalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoApproval\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NoApprovalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte PenerimaanDari {
                get {
                    return ((byte)(this[this.tableHeader.PenerimaanDariColumn]));
                }
                set {
                    this[this.tableHeader.PenerimaanDariColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid PerusahaanDariRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.PerusahaanDariRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerusahaanDariRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.PerusahaanDariRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid PerusahaanKeRowID {
                get {
                    return ((global::System.Guid)(this[this.tableHeader.PerusahaanKeRowIDColumn]));
                }
                set {
                    this[this.tableHeader.PerusahaanKeRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangDari {
                get {
                    try {
                        return ((string)(this[this.tableHeader.CabangDariColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangDari\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.CabangDariColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CabangKe {
                get {
                    try {
                        return ((string)(this[this.tableHeader.CabangKeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CabangKe\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.CabangKeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid MataUangRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.MataUangRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MataUangRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.MataUangRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid JnsTransaksiRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.JnsTransaksiRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JnsTransaksiRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.JnsTransaksiRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nominal {
                get {
                    try {
                        return ((decimal)(this[this.tableHeader.NominalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nominal\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Kurs {
                get {
                    try {
                        return ((double)(this[this.tableHeader.KursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kurs\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.KursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NominalRp {
                get {
                    try {
                        return ((decimal)(this[this.tableHeader.NominalRpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalRp\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NominalRpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian {
                get {
                    try {
                        return ((string)(this[this.tableHeader.UraianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.UraianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JnsPenerimaan {
                get {
                    return ((string)(this[this.tableHeader.JnsPenerimaanColumn]));
                }
                set {
                    this[this.tableHeader.JnsPenerimaanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid KasRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.KasRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KasRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.KasRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid BankRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.BankRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.BankRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RekeningRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.RekeningRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RekeningRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.RekeningRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoCekGiro {
                get {
                    try {
                        return ((string)(this[this.tableHeader.NoCekGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoCekGiro\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NoCekGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KotaGiro {
                get {
                    try {
                        return ((string)(this[this.tableHeader.KotaGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KotaGiro\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.KotaGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDateGiro {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHeader.DueDateGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDateGiro\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.DueDateGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TanggalGiroCair {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHeader.TanggalGiroCairColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalGiroCair\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.TanggalGiroCairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroup {
                get {
                    try {
                        return ((bool)(this[this.tableHeader.IsGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsGroup\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.IsGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid HIRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.HIRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.HIRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid JournalRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.JournalRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JournalRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.JournalRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastUpdatedBy {
                get {
                    try {
                        return ((string)(this[this.tableHeader.LastUpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUpdatedBy\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.LastUpdatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastUpdatedTime {
                get {
                    return ((global::System.DateTime)(this[this.tableHeader.LastUpdatedTimeColumn]));
                }
                set {
                    this[this.tableHeader.LastUpdatedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IdRecLama {
                get {
                    try {
                        return ((string)(this[this.tableHeader.IdRecLamaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdRecLama\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.IdRecLamaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHeader.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TanggalRk {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHeader.TanggalRkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TanggalRk\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.TanggalRkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid PengeluaranRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.PengeluaranRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PengeluaranRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.PengeluaranRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid HutangRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.HutangRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HutangRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.HutangRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHideIden {
                get {
                    return ((bool)(this[this.tableHeader.IsHideIdenColumn]));
                }
                set {
                    this[this.tableHeader.IsHideIdenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NominalGiro {
                get {
                    try {
                        return ((decimal)(this[this.tableHeader.NominalGiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalGiro\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NominalGiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tableHeader.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHeader.CreatedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedTime\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.CreatedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid LeasingRowID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableHeader.LeasingRowIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeasingRowID\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.LeasingRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string POS {
                get {
                    try {
                        return ((string)(this[this.tableHeader.POSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POS\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.POSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipeBayar {
                get {
                    try {
                        return ((string)(this[this.tableHeader.TipeBayarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipeBayar\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.TipeBayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NominalTunai {
                get {
                    try {
                        return ((decimal)(this[this.tableHeader.NominalTunaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalTunai\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NominalTunaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NominalTransfer {
                get {
                    try {
                        return ((decimal)(this[this.tableHeader.NominalTransferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalTransfer\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NominalTransferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MataUangID {
                get {
                    return ((string)(this[this.tableHeader.MataUangIDColumn]));
                }
                set {
                    this[this.tableHeader.MataUangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaKas {
                get {
                    try {
                        return ((string)(this[this.tableHeader.NamaKasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaKas\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NamaKasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uraian1 {
                get {
                    try {
                        return ((string)(this[this.tableHeader.Uraian1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uraian1\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.Uraian1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaRekening {
                get {
                    try {
                        return ((string)(this[this.tableHeader.NamaRekeningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaRekening\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NamaRekeningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Leasing {
                get {
                    return ((string)(this[this.tableHeader.LeasingColumn]));
                }
                set {
                    this[this.tableHeader.LeasingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NomTerIden {
                get {
                    try {
                        return ((decimal)(this[this.tableHeader.NomTerIdenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NomTerIden\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NomTerIdenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Saldo {
                get {
                    try {
                        return ((decimal)(this[this.tableHeader.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Saldo\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.SaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NomNonPNJ {
                get {
                    try {
                        return ((string)(this[this.tableHeader.NomNonPNJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NomNonPNJ\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.NomNonPNJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupRowIDNull() {
                return this.IsNull(this.tableHeader.GroupRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupRowIDNull() {
                this[this.tableHeader.GroupRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoBuktiTempNull() {
                return this.IsNull(this.tableHeader.NoBuktiTempColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoBuktiTempNull() {
                this[this.tableHeader.NoBuktiTempColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableHeader.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableHeader.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoApprovalNull() {
                return this.IsNull(this.tableHeader.NoApprovalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoApprovalNull() {
                this[this.tableHeader.NoApprovalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerusahaanDariRowIDNull() {
                return this.IsNull(this.tableHeader.PerusahaanDariRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerusahaanDariRowIDNull() {
                this[this.tableHeader.PerusahaanDariRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangDariNull() {
                return this.IsNull(this.tableHeader.CabangDariColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangDariNull() {
                this[this.tableHeader.CabangDariColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCabangKeNull() {
                return this.IsNull(this.tableHeader.CabangKeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCabangKeNull() {
                this[this.tableHeader.CabangKeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMataUangRowIDNull() {
                return this.IsNull(this.tableHeader.MataUangRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMataUangRowIDNull() {
                this[this.tableHeader.MataUangRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJnsTransaksiRowIDNull() {
                return this.IsNull(this.tableHeader.JnsTransaksiRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJnsTransaksiRowIDNull() {
                this[this.tableHeader.JnsTransaksiRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalNull() {
                return this.IsNull(this.tableHeader.NominalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalNull() {
                this[this.tableHeader.NominalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKursNull() {
                return this.IsNull(this.tableHeader.KursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKursNull() {
                this[this.tableHeader.KursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalRpNull() {
                return this.IsNull(this.tableHeader.NominalRpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalRpNull() {
                this[this.tableHeader.NominalRpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraianNull() {
                return this.IsNull(this.tableHeader.UraianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraianNull() {
                this[this.tableHeader.UraianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKasRowIDNull() {
                return this.IsNull(this.tableHeader.KasRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKasRowIDNull() {
                this[this.tableHeader.KasRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankRowIDNull() {
                return this.IsNull(this.tableHeader.BankRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankRowIDNull() {
                this[this.tableHeader.BankRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRekeningRowIDNull() {
                return this.IsNull(this.tableHeader.RekeningRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRekeningRowIDNull() {
                this[this.tableHeader.RekeningRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoCekGiroNull() {
                return this.IsNull(this.tableHeader.NoCekGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoCekGiroNull() {
                this[this.tableHeader.NoCekGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKotaGiroNull() {
                return this.IsNull(this.tableHeader.KotaGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKotaGiroNull() {
                this[this.tableHeader.KotaGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateGiroNull() {
                return this.IsNull(this.tableHeader.DueDateGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateGiroNull() {
                this[this.tableHeader.DueDateGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalGiroCairNull() {
                return this.IsNull(this.tableHeader.TanggalGiroCairColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalGiroCairNull() {
                this[this.tableHeader.TanggalGiroCairColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsGroupNull() {
                return this.IsNull(this.tableHeader.IsGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsGroupNull() {
                this[this.tableHeader.IsGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIRowIDNull() {
                return this.IsNull(this.tableHeader.HIRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIRowIDNull() {
                this[this.tableHeader.HIRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJournalRowIDNull() {
                return this.IsNull(this.tableHeader.JournalRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJournalRowIDNull() {
                this[this.tableHeader.JournalRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastUpdatedByNull() {
                return this.IsNull(this.tableHeader.LastUpdatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastUpdatedByNull() {
                this[this.tableHeader.LastUpdatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdRecLamaNull() {
                return this.IsNull(this.tableHeader.IdRecLamaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdRecLamaNull() {
                this[this.tableHeader.IdRecLamaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableHeader.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableHeader.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalRkNull() {
                return this.IsNull(this.tableHeader.TanggalRkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalRkNull() {
                this[this.tableHeader.TanggalRkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPengeluaranRowIDNull() {
                return this.IsNull(this.tableHeader.PengeluaranRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPengeluaranRowIDNull() {
                this[this.tableHeader.PengeluaranRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHutangRowIDNull() {
                return this.IsNull(this.tableHeader.HutangRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHutangRowIDNull() {
                this[this.tableHeader.HutangRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalGiroNull() {
                return this.IsNull(this.tableHeader.NominalGiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalGiroNull() {
                this[this.tableHeader.NominalGiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableHeader.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableHeader.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedTimeNull() {
                return this.IsNull(this.tableHeader.CreatedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedTimeNull() {
                this[this.tableHeader.CreatedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeasingRowIDNull() {
                return this.IsNull(this.tableHeader.LeasingRowIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeasingRowIDNull() {
                this[this.tableHeader.LeasingRowIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOSNull() {
                return this.IsNull(this.tableHeader.POSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOSNull() {
                this[this.tableHeader.POSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipeBayarNull() {
                return this.IsNull(this.tableHeader.TipeBayarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipeBayarNull() {
                this[this.tableHeader.TipeBayarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalTunaiNull() {
                return this.IsNull(this.tableHeader.NominalTunaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalTunaiNull() {
                this[this.tableHeader.NominalTunaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNominalTransferNull() {
                return this.IsNull(this.tableHeader.NominalTransferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNominalTransferNull() {
                this[this.tableHeader.NominalTransferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaKasNull() {
                return this.IsNull(this.tableHeader.NamaKasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaKasNull() {
                this[this.tableHeader.NamaKasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUraian1Null() {
                return this.IsNull(this.tableHeader.Uraian1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUraian1Null() {
                this[this.tableHeader.Uraian1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaRekeningNull() {
                return this.IsNull(this.tableHeader.NamaRekeningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaRekeningNull() {
                this[this.tableHeader.NamaRekeningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomTerIdenNull() {
                return this.IsNull(this.tableHeader.NomTerIdenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomTerIdenNull() {
                this[this.tableHeader.NomTerIdenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.tableHeader.SaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.tableHeader.SaldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomNonPNJNull() {
                return this.IsNull(this.tableHeader.NomNonPNJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomNonPNJNull() {
                this[this.tableHeader.NomNonPNJColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class IdenNonPenjualanRow : global::System.Data.DataRow {
            
            private IdenNonPenjualanDataTable tableIdenNonPenjualan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal IdenNonPenjualanRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIdenNonPenjualan = ((IdenNonPenjualanDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RowID {
                get {
                    return ((global::System.Guid)(this[this.tableIdenNonPenjualan.RowIDColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.RowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tanggal {
                get {
                    return ((global::System.DateTime)(this[this.tableIdenNonPenjualan.TanggalColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    return ((string)(this[this.tableIdenNonPenjualan.NoBuktiColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Nominal {
                get {
                    return ((decimal)(this[this.tableIdenNonPenjualan.NominalColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.NominalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    return ((string)(this[this.tableIdenNonPenjualan.KeteranganColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid PenerimaanIdenRowID {
                get {
                    return ((global::System.Guid)(this[this.tableIdenNonPenjualan.PenerimaanIdenRowIDColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.PenerimaanIdenRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid JnsTransaksiRowID {
                get {
                    return ((global::System.Guid)(this[this.tableIdenNonPenjualan.JnsTransaksiRowIDColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.JnsTransaksiRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaTransaksi {
                get {
                    try {
                        return ((string)(this[this.tableIdenNonPenjualan.NamaTransaksiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaTransaksi\' in table \'IdenNonPenjualan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIdenNonPenjualan.NamaTransaksiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoPerkiraan01 {
                get {
                    try {
                        return ((string)(this[this.tableIdenNonPenjualan.NoPerkiraan01Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoPerkiraan01\' in table \'IdenNonPenjualan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIdenNonPenjualan.NoPerkiraan01Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid MataUangRowID {
                get {
                    return ((global::System.Guid)(this[this.tableIdenNonPenjualan.MataUangRowIDColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.MataUangRowIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MataUangID {
                get {
                    return ((string)(this[this.tableIdenNonPenjualan.MataUangIDColumn]));
                }
                set {
                    this[this.tableIdenNonPenjualan.MataUangIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaTransaksiNull() {
                return this.IsNull(this.tableIdenNonPenjualan.NamaTransaksiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaTransaksiNull() {
                this[this.tableIdenNonPenjualan.NamaTransaksiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoPerkiraan01Null() {
                return this.IsNull(this.tableIdenNonPenjualan.NoPerkiraan01Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoPerkiraan01Null() {
                this[this.tableIdenNonPenjualan.NoPerkiraan01Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DetailRowChangeEvent : global::System.EventArgs {
            
            private DetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRowChangeEvent(DetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HeaderRowChangeEvent : global::System.EventArgs {
            
            private HeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderRowChangeEvent(HeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class IdenNonPenjualanRowChangeEvent : global::System.EventArgs {
            
            private IdenNonPenjualanRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IdenNonPenjualanRowChangeEvent(IdenNonPenjualanRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public IdenNonPenjualanRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591