<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdCANCEL.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="cmdSAVE.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>