<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="commandButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAADdbAAA3WwGZgwLGAAAAGXRF
        WHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABEZJREFUWEft1HlMm2UcB/BHF2CVlhYUEBFo
        KWQDuTbACcK42nJDGXRDaAUpUI6WUo4VJhuOQsniBsMblgAhTBnHFo5BactRjg3BaBYjcc7EJROzzGQu
        xpgouq/VvPEf3aGuJCZ8kid53+f5/p4rb16ybds2C9shHhGfal5o7icq4kD1bZnHyHHyXtmlMpy5fgZE
        Q/RERJjUmOVZa63fiL4QjaFbQxj/bhwpuhSQRjJJwgmDilgOXUtvix6JRv/1fgx+M4iBjQEMbwxDMCGA
        4ynHUV4nz3I34aB96kTMuRh0rnei+4sedK13/dF6zM+9n/cidSIVAR0BCVT83hK7EktaFrTLUW9FPThM
        cdG4NMeejUH7J214+8qbaP+oDW1rbTi9ehodax2I6I8As4k5Zq+2v/8N0GpoMn4P727ftW5EdkbccTnq
        wqeG7omtYR/j9cWhdUWDk6utaF3WQLuoQYtJg9cXTyCyNxKkmuge+A1YKW0K/Nt8f1HPVKJl+SiqZ+QI
        aQ++7VHrEUNF/oLzKvdIfDcPTUv1aF5qQON8HY7N1qHBoIZ2rgmCPt7vixtIOmFRJX/Pvd5dHHjSb1M5
        WYyGmSqojXI0LtZANV2M51tDvnWr5ERS0T951nrXxr8Ti4Z5JY6aVKgzKqDWK1AzJUeT8QiE/cmwVlnP
        kayH+A/4NvksyUZzcHiqFMqLBeaFpagyFKDeVIKKSQlCXwu++UyxRxgVJx5yLxW/fT/Us0VQzxeZs1Ko
        dFIoJvLRaKxGzvsZYFTaLpoXd6RK7s+pwonv3cC+IxlIhHwiB6UXs1E+nQ2FIRs1CxKUjYmwVx244Sx2
        3ecq9ZTFasNQbcyFaj4XcsMhlOsOoWg803x7ckgHX4J9pf1l88/naWr6h7MjzyaBW+f2ff5QPGSTQhRN
        pkKmT0PJTBqUS5koPp8Cv3Lf2+H1ezYVhnSUL6Sj1DxWZsxA6XQmGk3lkI/kw1nptGo+uSs17T9jLWGk
        7FZzfpCej0OhXgCpQYDiOfOGFuKhWElC6WiC+eRC1K6KoFwUotKUgQrzBip0ySg4mwS3CrePSQpxp6b7
        d2jZzAy/Wu6PRWNRkBiCITa3vLkQ5JmCUXgpFBKTPw4adiFryhuCEWfEnbND4rtecCl2vkKSiSc1zX9D
        y3IQ+VewfxINc8DX2YI3ZYsEIx0Js3QIZp4AX09DzJQNkqaZONDrA3ah22ckmeFNlT8aOxNYuUEK7s95
        em+kfWiHtBUmhGssCFdZSLlsB9Hak8j54DmwxW5XCc/ahyp7tHbGMfL2lnE3S5Z34+BVFkTr9shaZ+Ll
        a4545YI/ONnPfkmirPyouGU8/iJdGirj/qr61BfimywU3nJCqS4QnAOuX5FwqyAqZmHBtJJ9Mu7dxhtB
        qFoKAjvV5QbxIyHU6BbZY6NIPxyAsALu18SLvED1bi36fnokI5yxi3rdtu3/jJDfANsL/W1KcU0WAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>